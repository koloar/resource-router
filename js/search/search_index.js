var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["aim","allow","angular","angular/cor","angular/platform","api","app","app.compon","appcompon","application/x.sampl","befor","bootstrap","bootstrapit","browser","browsermodul","build","buildaft","chang","changelog","class","client","complet","compon","config","configur","content","context","creat","data","declar","develop","display","dist/angular","doc","drive","element","empti","engin","error.compon","errorcompon","etc","exampl","examplemodul","export","extern","follow","get","hateoa","header","hide","implement","import","index","instal","instead","itself","layout","librari","link","load","local","match","media","name","navig","necessari","ngmodul","npm","origin","outlet","pass","path","perform","prefix","principl","publish","readm","regist","releas","replac","repositori","resolv","resourc","resourceroutermodul","resourceroutermodule.configur","resourceroutermodule.fortyp","respons","rest","result","rout","router","routerdemo","run","same","sampl","sample.compon","samplecompon","saveconfigur","see","server","similar","snippet","start","starttodo","statu","support","symlink","thing","time","todo","type","typedoc","unknown","us","veri","view","within","work"],"overview.html":["1","3","4","7","9","bootstrap","class","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","compon","declar","defaultemptycompon","defaulterrorcompon","depend","direct","export","inject","interfac","legend","match","modul","out","overview","provid","reset","resourcedatadirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourceviewdirect","result","zoom"],"changelog.html":["04","1.0.0","12","13","15","2.1","2.3","2017","22","30","4.0.0","4.x","abstract","alpha.12","angular","angular/cli","api","apilink","apimapp","apiurl","argument","blob","bodi","both","break","bug","buggi","build","built","bump","bundl","chang","changelog","class","close","compil","compon","config","conform","contain","convent","custom","default","deprec","direct","endpoint","exampl","explicit","extern","favour","featur","final","fix","function","gener","get","gulp","handl","http","httpclient","implement","instead","json","key","lead","map","match","more","move","name","navig","new","newer","ng","now","old","option","packagr","page","prefix","problem","properli","rare","refactor","relat","reload","renam","resourcelink","responsetyp","result","rout","script","sourc","start","strictnullcheck","support","tag","text","those","true","typescript","umd","upgrad","url","us","valu","variou","veri","version","work"],"modules.html":["brows","browser","match","modul","resourceroutermodul","result","support","svg"],"modules/ResourceRouterModule.html":["204","absolut","alway","analyze_for_entry_compon","angular/common","angular/cor","anoth","aot","api","apiloc","apimapp","apiurl","app_api_prefix","app_base_href","bang","base","basehref","boolean","bootstrap","browserapiurl","chang","class","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","commonmodul","compon","components/default","configur","configure(opt","const","content","context","data","declar","default","defaultemptycompon","defaulterrorcompon","definit","dep","depend","detail","directives/resourc","empty.compon","emptyview","enabl","end","error.compon","errorview","explicitli","export","factori","file","fortypes(view","full","function","global","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","header","headerviewtypestrategi","host","href","html5","http://example.com/my/context/api","httpclientviewdataload","implement","import","info","inject","inject(app_base_href","injectiontoken","injectiontoken('resource_router_configur","interfac","intern","legend","link","loader","locat","locationstrategi","mapper","match","media","media_type_router_empti","media_type_router_load","mode","modul","module.t","modulewithprovid","multi","my/context/api","navig","new","ngmodul","number.min_safe_integ","option","options.prefix","options.usehash","options.viewdataload","options.viewtypestrategi","out","outlet","path","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","platformloc","prefix","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","qualiti","read","readonli","registri","rel","reset","resourc","resource_router_configur","resource_view","resourcedatadirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourcerouteropt","resourceviewdirect","resourceviewregistri","responsetyp","result","return","router","set","singl","singleapimapp","slash","sourc","src/lib/src/resourc","static","statu","strategi","string","support","system","tag","text","true","type","url","us","useclass","usefactori","usehash","usehash}=tru","usevalu","view","viewdataload","viewdef","viewtypestrategi","way","won't","work","zoom"],"components/DefaultEmptyComponent.html":["a[resourcelink]'},{'nam","actual_compon","angular/cor","class","compon","component_templ","defaultemptycompon","defaulterrorcompon","direct","dom","element","empty.component.t","export","file","html","import","info","legend","match","metadata","name","not(a)[resourcelink]'},{'nam","outlet","resourc","resourcedata][resourcedataof]'},{'nam","resourcedatadirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceviewdirect","result","selector","sourc","src/lib/src/components/default","templat","tree","var","view"],"components/DefaultErrorComponent.html":["a[resourcelink]'},{'nam","actual_compon","angular/cor","class","compon","component_templ","constructor","constructor(data","constructor(publ","data","data.bodi","data.statu","data.statustext","data.typ","data.url","defaultemptycompon","defaulterrorcompon","defin","descript","direct","dom","element","error","error.component.t","error.component.ts:11","error.component.ts:9","export","file","html","import","index","info","legend","load","match","metadata","name","not(a)[resourcelink]'},{'nam","option","outlet","paramet","properti","public","resourc","resourcedata][resourcedataof]'},{'nam","resourcedatadirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceviewdirect","result","selector","sourc","src/lib/src/components/default","templat","tree","type","url","var","view","viewdata"],"components/ResourceOutletComponent.html":["a[resourcelink]'},{'nam","accessor","actual","actual_compon","angular/cor","bind","chang","check","class","compon","component_templ","defaultemptycompon","defaulterrorcompon","defin","direct","dom","dure","element","emit","event","eventemitt","export","file","getsrc","html","import","index","info","input","isn't","legend","match","metadata","name","need","new","not(a)[resourcelink]'},{'nam","null","outlet","outlet.t","outlet.ts:14","outlet.ts:19","outlet.ts:32","output","privat","resourc","resourcedata][resourcedataof]'},{'nam","resourcedatadirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceviewdirect","result","return","runtim","selector","set","setsrc(valu","sourc","src","src(valu","src/lib/src/directives/resourc","srcchang","srcvalu","string","sure","templat","this.srcchange.emit(valu","this.srcvalu","tree","type","valu","var","view"],"directives/ResourceDataDirective.html":["204","999","accessor","actual","alway","angular/cor","back","bind","bodi","catch(err","chang","check","class","config","console.error(err","const","constructor","constructor(protect","constructor(publ","constructor(viewcontain","context","data","data.t","data.ts:25","data.ts:29","data.ts:55","data.ts:59","data.ts:63","data.ts:67","data.ts:80","data.ts:95","data.ts:99","data.url","decompos","defin","descript","direct","directli","dure","emit","err","error","event","eventemitt","export","fetch(url","file","geturl","go","go(url","handl","handler","happen","header","implement","implicit","import","index","info","input","isn't","jsunusedlocalsymbol","load","load(url","loader","log","match","media","media_type_router_empti","media_type_router_error","media_type_router_load","metadata","method","mockview(url","name","navig","navigationhandl","need","new","ngoninit","no_head","noinspect","normal","notat","null","number","observ","observable.of(this.mockview","observable.of(this.mockview(url","ok","oninit","option","output","paramet","perform","privat","propag","properti","protect","read","readonli","redirect","registri","resourc","resourcedata","resourcedata(valu","resourcedata][resourcedataof","resourcedatacontext","resourcedatacontext(this.mockview","resourcedatadirect","resourcedataof","resourcedataof(valu","resourceviewregistri","result","return","rout","runtim","rxjs/add/operator/switchmap","rxjs/observ","rxjs/subject","selector","server","set","setresourcedata(valu","setresourcedataof(valu","seturl(valu","side","sourc","src/lib/src/directives/resourc","statu","statustext","string","subject","subscribe(data","sure","switchmap(url","system","templateref","this.context","this.context.$implicit","this.load","this.load(url","this.registry.match(typ","this.url","this.urlchange.emit(this.urlvalu","this.urlchange.emit(url","this.urlsubject","this.urlsubject.next(this.urlvalu","this.urlsubject.next(valu","this.urlvalu","this.viewcontainer.createembeddedview(this.templateref","type","unus","updat","url","url(valu","urlchang","urlsubject","urlvalu","us","valu","view","viewcontain","viewcontainerref","viewdata","viewdata(thi","viewdataload","void"],"directives/ResourceLinkDirective.html":["_self","_top","angular/cor","api","apiloc","boolean","cancel","class","click","const","constructor","constructor(apiloc","constructor(priv","ctrl","data","defin","descript","direct","element","error(`unsupport","export","extern","fallback","file","handl","handler","hostlisten","hostlistener('click","import","index","info","input","instead","key","limit","link.t","link.ts:22","link.ts:23","link.ts:30","locat","match","metadata","name","navig","navigationhandl","new","not(a)[resourcelink","note","onclick","open","option","page","paramet","privat","resourcelink","resourcelinkdirect","result","return","selector","sourc","src/lib/src/directives/resourc","string","support","supportsnavig","supportsnavigation(target","tag","target","target.go(this.resourcelink","target_self","target_top","targettyp","this.apiloc","this.target","this.view","this.view.navig","throw","true","type","typeof","undefin","url","us","version","view","viewdata","window","work"],"directives/ResourceLinkWithHrefDirective.html":["0","200","a[resourcelink","angular/cor","api","apiloc","apimapp","argument","boolean","browser","button","class","click","click(button","code","const","constructor","constructor(apimapp","constructor(priv","ctrlkey","custom","data","default","defin","descript","direct","directive({selector","event.button","event.ctrlkey","event.metakey","export","extern","fail","fals","file","handl","handler","hostbind","hostlisten","hostlistener('click","href","href.t","href.ts:12","href.ts:13","href.ts:14","href.ts:15","href.ts:16","href.ts:17","href.ts:25","href.ts:54","implement","import","index","info","input","intern","key","known","link","locat","manual","map","mapper","mark","match","mechan","metadata","metakey","method","name","navig","new","ngonchang","non","note","number","onchang","onclick(button","open","option","origin","page","paramet","pointless","press","privat","registri","resourc","resourcelink","resourcelinkwithhrefdirect","resourceviewregistri","respons","result","return","selector","set","sourc","src/lib/src/directives/resourc","statu","store","string","success","support","supportsnavig","supportsnavigation(target","target","target.go(this.resourcelink","target_self","target_top","targettyp","this.apilocation.go(this.resourcelink","this.apilocation.prepareexternalurl(viewurl","this.apimapper.mapapitoview(viewurl","this.extern","this.href","this.resourcelink","this.resourceviewregistry.match(this.typ","this.target","this.typ","this.unsupport","this.view","this.view.navig","true","type","typeof","undefin","unsupport","url","us","valu","view","viewdata","viewurl","void","window","work"],"directives/ResourceViewDirective.html":["accessor","angular/cor","class","compon","componentfactoryresolv","componentref","const","constructor","constructor(protect","constructor(viewcontain","creat","current","data","data(valu","datavalu","defin","descript","destroy","direct","export","factori","file","import","index","info","injector","input","match","metadata","method","name","nest","null","option","paramet","privat","properti","protect","provid","reflectiveinjector","reflectiveinjector.fromresolvedproviders(provid","reflectiveinjector.resolv","render","render(viewdata","resolv","resourc","resourceviewdirect","result","return","rxjs/add/operator/switchmap","selector","set","setdata(valu","sourc","src/lib/src/directives/resourc","this.curr","this.current.destroy","this.datavalu","this.render(valu","this.resolver.resolvecomponentfactory(viewdata.config.compon","this.viewcontainer.createcomponent(factori","this.viewcontainer.length","this.viewcontainer.parentinjector","type","usevalu","valu","view","view.t","view.ts:10","view.ts:11","view.ts:18","view.ts:25","viewcontain","viewcontainerref","viewdata","viewdata.config","viewdata.config.compon","void"],"injectables/ApiLocation.html":["absolut","accessor","alreadi","alway","angular/common","angular/cor","api","apiloc","apimapp","around","base","be","bindabl","browser","chang","class","compon","configur","const","construct","constructor","constructor(apimapp","constructor(priv","conveni","correct","correspond","current","currenturl","data","defin","descript","determin","don't","donavig","donavigate(path","equal","error","error('url","error(`cannot","export","file","fire","form","geturl","given","go","go(url","handler","happen","here","home","href","implement","import","index","info","initi","inject","jsunusedglobalsymbol","known","lead","link","listen","local","locat","location#path","location#prepareexternalurl","location.t","location.ts:101","location.ts:117","location.ts:125","location.ts:15","location.ts:33","location.ts:45","location.ts:62","location.ts:81","location.ts:92","locationstrategi","log","map","maplocationurltoapi","mapper","match","method","name","namespac","navig","navigationhandl","need","never","new","next","noinspect","normal","note","noth","null","observ","onlocationchang","option","outlet","page","param","paramet","path","perform","prefix","prepareexternalurl","prepareexternalurl(url","primari","privat","properti","protect","provid","push","redirect","resourc","result","return","root","server","set","seturl(url","someth","sourc","src/lib/src/api","state","strategi","string","take","this.apimapper.mapapitoview(url","this.apimapper.mapviewtoapi(path","this.donavig","this.donavigate(path","this.go(url","this.location.go(path","this.location.iscurrentpathequalto(path","this.location.normalize(url","this.location.path","this.location.prepareexternalurl(url","this.location.subscrib","this.maplocationurltoapi","this.onlocationchang","this.urlvalu","throw","todo","type","typeof","unexpect","updat","url","url(url","urlvalu","us","valu","versa","vice","view","void","without","wrapper"],"injectables/BrowserApiUrl.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","baseapiurl","basehref","browserapiurl","build","class","combin","compon","const","constructor","constructor(platformstrategi","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","rel","replac","resolv","result","return","sourc","src/lib/src/api","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","url.t","url.ts:67","url.ts:75","url.ts:80","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","us","utils/pars"],"injectables/HeaderViewTypeStrategy.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttyp","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","method","name","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","option","overrid","param","paramet","properti","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:41","strategy.ts:43","strategy.ts:49","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","valu","viewtyperespons","viewtypestrategi"],"injectables/HttpClientViewDataLoader.html":["abstract","alreadi","angular","angular/common/http","angular/cor","assum","awar","backend","bit","bodi","case","catch(respons","class","compon","config","config.responsetyp","const","construct","constructor","constructor(publ","constructor(strategi","data","default","defin","definit","descript","don't","duplic","e.g","empti","error","error(`unsupport","except","export","extend","fail","fetch","fetch(uri","file","find","get(uri","get(url","given","handler","here","http","httpclient","httpclientviewdataload","httprespons","i'm","implement","import","index","info","inject","instanc","jsmethodcanbestat","json","loader.t","loader.ts:35","loader.ts:37","loader.ts:38","loader.ts:39","loader.ts:43","loader.ts:53","loader.ts:60","loader.ts:82","malform","map(respons","match","method","name","navig","navigationhandl","need","new","nice","noinspect","normal","note","null","observ","observable.of(respons","option","param","paramet","pars","parse(respons","pass","possibl","produc","properti","protect","public","registri","request","requesturl","resolv","resolve(requesturl","resourc","resourceviewregistri","respons","response.bodi","response.head","response.statu","response.statustext","response.url","responsetyp","result","retriev","return","rxjs/add/observable/of","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","send","set","sourc","src/lib/src/view","strategi","string","stringtojson","stringtojson(response.bodi","super","swallow","switch","text","this.http.get(url","this.parse(respons","this.registry.match(typ","this.resolve(uri","this.strategy.extracttype(respons","throw","treat","type","uri","url","us","usual","util","utils/http","valid","view","viewdata","viewdataload","viewdef","viewtypestrategi","way"],"injectables/MockApiUrl.html":["angular","angular/cor","api","baseapiurl","basehref","class","default","defin","descript","export","extend","file","getbasehref","getloc","host","http","import","index","info","init","init(protocol","inject","internalbasehref","internalhost","internalpathnam","internalprotocol","localhost","locationinfo","match","method","mockapiurl","name","option","paramet","pathnam","properti","protocol","resourc","result","return","router","sourc","src/lib/testing/src/mock","string","this.internalbasehref","this.internalhost","this.internalpathnam","this.internalprotocol","type","url.t","url.ts:10","url.ts:12","url.ts:21","url.ts:25","url.ts:7","url.ts:8","url.ts:9","valu"],"injectables/ResourceViewRegistry.html":["0","1","1.html#object","2","2??').foreach(statu","3","_length","accessor","add","addsingleview(config","addview","addview(config","addviews(config","angular/cor","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","befor","between","bystatu","call","charact","check","class","compon","config","config.compon","config.foreach(this.addview","config.qu","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","consist","const","constructor","constructor(@inject(resource_view","constructor(statu","constructor(view","contain","continu","convert","copi","count","d*[?x]*\\**$/.test(statu","default","defin","definit","descript","end","error","error('invalid","error('wildcard","error(`no","evalu","export","express","file","find","flatten","found","function","getlength","getviewsbystatus(statu","group","group.statu","group.statusexp.test(statusstr","group.types.array.find(v","group.types.push","handl","https://www.typescriptlang.org/docs/handbook/releas","ignor","import","increment","index","info","initi","inject","inject(type_quality_evalu","injectiontoken","injectiontoken('resource_view","injectiontoken('type_quality_evalu","interfac","invalid","jsmethodcanbestat","json.stringify(config","later","left","length","long","longer","mandatori","match","match(typ","method","n","name","need","new","newvalidationerror(config","noinspect","normalizedstatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","notes/typescript","number","object.freeze(config","option","pad","paramet","parsedviewdef","path","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","permut","pleas","privat","protect","public","qualiti","readonli","recurs","regex","regexp","regist","registr","registry.t","registry.ts:108","registry.ts:39","registry.ts:53","registry.ts:57","registry.ts:79","registry.ts:90","replac","resource_view","resourceviewregistri","rest","result","return","s.statu","saniti","see","simpletypequalityevalu","singl","sortedarray","sortedarray(qualitycompar","sourc","specif","spread","src/lib/src/resourc","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","string","substr(0","support","t","text","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.getviewsbystatus(normalizedstatu","this.qual","this.statu","this.statusexp","this.typequalityevalu","this.typequalityevaluator(typ","this.validateviewdefinition(config","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","throw","toarray(config.statu","toarray(config.type).foreach(typ","true","type","type_quality_evalu","typeexp","typeof","typequalityevalu","util","utils/sort","utils/wildcard","v.typeexp.test(typ","valid","validatestatus(config","validatestatusexpression(config","validatetype(config","validateviewdefinit","validateviewdefinition(config","valu","view","view.config","viewdef","viewsbystatu","viewsbystatus(statu","void","wildcard","wildcardtoregex","wildcardtoregex(statu","wildcardtoregex(typ","x","x\\d?*]/.test(statu","zero"],"injectables/SingleApiMapper.html":["absolut","alway","angular/cor","api","apimapp","apiurl","apiurl.normalize(prefix","app_api_prefix","applic","base","class","configur","const","constructor","constructor(apiurl","defin","descript","diagnost","end","error('path","export","extend","file","host","href","import","includ","index","info","inject","inject(app_api_prefix","injectiontoken","injectiontoken('app_api_prefix","it'","join","lead","map","mapapitoview","mapapitoview(url","mapper","mapper.t","mapper.ts:24","mapper.ts:34","mapper.ts:48","mapviewtoapi","mapviewtoapi(path","match","method","name","new","normal","note","null","option","otherwis","paramet","path","path).replac","path.replac","prefix","prepend","properti","readonli","rel","remov","result","return","singleapimapp","slash","sourc","src/lib/src/singl","string","strip","super","this.prefix","throw","trail","type","unabl","url","url.startswith(this.prefix","url.substring(this.prefix.length).replac","us","versa","vice","view","w+:/.test(path","work","wrong"],"classes/ApiMapper.html":["abstract","api","apimapp","class","configur","counterpart","default","defin","descript","dure","e.g","empti","equal","export","file","http","index","info","insid","link","location.path","map","mapapitoview","mapapitoview(url","mapper.t","mapper.ts:15","mapper.ts:27","mapviewtoapi","mapviewtoapi(path","match","method","name","namespac","null","on","option","overridden","param","paramet","path","prefix","request","resourc","result","return","sourc","src/lib/src/api","string","type","url","versa","vice","view"],"classes/ApiUrl.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","baseapiurl","basehref","browserapiurl","build","class","combin","compon","const","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","rel","replac","resolv","result","return","sourc","src/lib/src/api","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","url.t","url.ts:18","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","us","utils/pars"],"classes/BaseApiUrl.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","baseapiurl","basehref","browserapiurl","build","class","combin","compon","const","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","rel","replac","resolv","result","return","sourc","src/lib/src/api","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","url.t","url.ts:28","url.ts:56","url.ts:63","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","us","utils/pars"],"classes/ResourceDataContext.html":["204","999","actual","alway","angular/cor","back","bind","bodi","catch(err","chang","check","class","config","console.error(err","const","constructor","constructor($implicit","constructor(protect","constructor(publ","context","data","data.t","data.ts:13","data.ts:14","data.url","decompos","defin","descript","direct","directli","dure","emit","err","error","event","eventemitt","export","fetch(url","file","go(url","handl","handler","happen","header","implement","implicit","import","index","info","input","isn't","jsunusedlocalsymbol","load","load(url","loader","log","match","media","media_type_router_empti","media_type_router_error","media_type_router_load","mockview(url","name","navig","navigationhandl","need","new","ngoninit","no_head","noinspect","normal","notat","null","number","observ","observable.of(this.mockview","observable.of(this.mockview(url","ok","oninit","option","output","paramet","perform","privat","propag","properti","protect","public","read","readonli","redirect","registri","resourc","resourcedata(valu","resourcedata][resourcedataof","resourcedatacontext","resourcedatacontext(this.mockview","resourcedatadirect","resourcedataof(valu","resourceviewregistri","result","return","rout","runtim","rxjs/add/operator/switchmap","rxjs/observ","rxjs/subject","selector","server","set","side","sourc","src/lib/src/directives/resourc","statu","statustext","string","subject","subscribe(data","sure","switchmap(url","system","templateref","this.context","this.context.$implicit","this.load","this.load(url","this.registry.match(typ","this.url","this.urlchange.emit(this.urlvalu","this.urlchange.emit(url","this.urlsubject","this.urlsubject.next(this.urlvalu","this.urlsubject.next(valu","this.urlvalu","this.viewcontainer.createembeddedview(this.templateref","type","unus","updat","url","url(valu","urlchang","urlsubject","urlvalu","us","valu","view","viewcontain","viewcontainerref","viewdata","viewdata(thi","viewdataload","void"],"classes/SortedArray.html":["0","1","2","append","array","array.length","array.t","array.ts:17","array.ts:7","array.ts:9","array[pivot","b","c","class","compar","comparer(el","const","constructor","constructor(compar","constructor(publ","default","defin","descript","element","end","equal","export","file","find","index","info","insert","insertlocation(valu","locat","locationfor(el","maintain","match","math.floor((start","method","name","need","number","option","order","param","paramet","pivot","possibl","properti","public","push","push(valu","result","return","simpl","sort","sortedarray","sourc","src/lib/src/utils/sort","start","t","this.array","this.array.splice(i","this.compar","type","us","valu","void","wrapper"],"classes/ViewData.html":["bodi","class","config","constructor","constructor(navig","constructor(publ","data.t","data.ts:10","data.ts:11","data.ts:12","data.ts:13","data.ts:14","data.ts:15","data.ts:6","data.ts:8","data.ts:9","defin","definit","descript","export","file","handler","header","import","index","info","match","name","navig","navigationhandl","null","number","option","paramet","properti","public","read","readonli","readonlyhead","result","sourc","src/lib/src/view","statu","statustext","string","t","true","type","url","view","viewdata","viewdef"],"classes/ViewDataLoader.html":["abstract","alreadi","angular","angular/common/http","angular/cor","assum","awar","backend","bit","bodi","case","catch(respons","class","compon","config","config.responsetyp","const","construct","constructor","constructor(publ","data","default","defin","definit","descript","don't","duplic","e.g","empti","error","error(`unsupport","except","export","extend","fail","fetch","fetch(uri","file","find","get(uri","get(url","given","handler","here","http","httpclient","httpclientviewdataload","httprespons","i'm","implement","import","index","info","inject","instanc","jsmethodcanbestat","json","loader.t","loader.ts:27","malform","map(respons","match","method","name","navig","navigationhandl","need","new","nice","noinspect","normal","note","null","observ","observable.of(respons","option","param","paramet","pars","parse(respons","pass","possibl","produc","protect","public","registri","request","requesturl","resolv","resolve(requesturl","resourc","resourceviewregistri","respons","response.bodi","response.head","response.statu","response.statustext","response.url","responsetyp","result","retriev","return","rxjs/add/observable/of","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","send","set","sourc","src/lib/src/view","strategi","string","stringtojson","stringtojson(response.bodi","super","swallow","switch","text","this.http.get(url","this.parse(respons","this.registry.match(typ","this.resolve(uri","this.strategy.extracttype(respons","throw","treat","type","uri","url","us","usual","util","utils/http","valid","view","viewdata","viewdataload","viewdef","viewtypestrategi","way"],"classes/ViewTypeStrategy.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttyp","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","method","name","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","option","overrid","param","paramet","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:32","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","viewtyperespons","viewtypestrategi"],"classes/ViewsByStatus.html":["0","1","1.html#object","2","2??').foreach(statu","3","_length","add","addsingleview(config","addview","addview(config","addviews(config","angular/cor","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","befor","between","bystatu","call","charact","check","class","compon","config","config.compon","config.foreach(this.addview","config.qu","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","consist","const","constructor","constructor(@inject(resource_view","constructor(statu","contain","continu","convert","copi","count","d*[?x]*\\**$/.test(statu","default","defin","definit","descript","end","error","error('invalid","error('wildcard","error(`no","evalu","export","express","file","find","flatten","found","function","getviewsbystatus(statu","group","group.statu","group.statusexp.test(statusstr","group.types.array.find(v","group.types.push","handl","https://www.typescriptlang.org/docs/handbook/releas","ignor","import","increment","index","info","initi","inject","inject(type_quality_evalu","injectiontoken","injectiontoken('resource_view","injectiontoken('type_quality_evalu","interfac","invalid","jsmethodcanbestat","json.stringify(config","later","left","length","long","longer","mandatori","match","match(typ","n","name","need","new","newvalidationerror(config","noinspect","normalizedstatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","notes/typescript","number","object.freeze(config","option","pad","paramet","parsedviewdef","path","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","permut","pleas","privat","properti","protect","public","qualiti","readonli","recurs","regex","regexp","regist","registr","registry.t","registry.ts:14","registry.ts:15","registry.ts:16","registry.ts:17","replac","resource_view","resourceviewregistri","rest","result","return","s.statu","saniti","see","simpletypequalityevalu","singl","sortedarray","sortedarray(qualitycompar","sourc","specif","spread","src/lib/src/resourc","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","string","substr(0","support","t","text","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.getviewsbystatus(normalizedstatu","this.qual","this.statu","this.statusexp","this.typequalityevalu","this.typequalityevaluator(typ","this.validateviewdefinition(config","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","throw","toarray(config.statu","toarray(config.type).foreach(typ","type","type_quality_evalu","typeexp","typeof","typequalityevalu","util","utils/sort","utils/wildcard","v.typeexp.test(typ","valid","validatestatus(config","validatestatusexpression(config","validatetype(config","validateviewdefinition(config","valu","view","view.config","viewdef","viewsbystatu","viewsbystatus(statu","wildcard","wildcardtoregex","wildcardtoregex(statu","wildcardtoregex(typ","x","x\\d?*]/.test(statu","zero"],"interfaces/Data.html":["00","2","200","2xx","3","add","against","alia","angular/cor","array","better","charact","code","compon","data","declar","default","defin","definit","definition.t","definition.ts:4","differ","digit","disjunct","don't","end","expand","export","express","fallback","file","forbidden","forget","given","handl","http","import","index","info","integ","interfac","mandatori","match","mean","media","modul","more","multipl","name","number","properti","readabl","readonli","respons","result","see","set","singl","sourc","src/lib/src/view","statu","statustyp","still","string","success","support","type","unless","usual","valu","view","viewdef","wildcard","x","zero"],"interfaces/LocationInfo.html":["0","absolut","const","defin","export","extend","file","form","function","host","index","info","info.host","info.pathnam","info.protocol","interfac","locationinfo","match","match[1","match[2","match[3","null","object","param","pars","parser","parseurl(url","pathnam","pathrel","properti","protocol","readonli","rel","result","return","rough","sourc","src/lib/src/utils/pars","string","type","undefin","url","url.match(url_pattern","url.t","url.ts:4","url.ts:5","url.ts:6","url_pattern","urlinfo","w+:)?\\/\\/([^/]+(?::\\d","well"],"interfaces/NavigationHandler.html":["defin","descript","export","file","function","go","go(url","handler.t","handler.ts:2","handler.ts:4","index","info","interfac","match","method","name","navigationhandl","obj","obj.go","option","paramet","properti","result","return","sourc","src/lib/src/navig","string","supportsnavigation(obj","type","typeof","url","void"],"interfaces/ParsedViewDef.html":["0","1","1.html#object","2","2??').foreach(statu","3","_length","add","addsingleview(config","addview","addview(config","addviews(config","angular/cor","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","befor","between","bystatu","call","charact","check","class","compon","config","config.compon","config.foreach(this.addview","config.qu","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","consist","const","constructor(@inject(resource_view","constructor(statu","contain","continu","convert","copi","count","d*[?x]*\\**$/.test(statu","default","defin","definit","end","error","error('invalid","error('wildcard","error(`no","evalu","export","express","file","find","flatten","found","function","getviewsbystatus(statu","group","group.statu","group.statusexp.test(statusstr","group.types.array.find(v","group.types.push","handl","https://www.typescriptlang.org/docs/handbook/releas","ignor","import","increment","index","info","initi","inject","inject(type_quality_evalu","injectiontoken","injectiontoken('resource_view","injectiontoken('type_quality_evalu","interfac","invalid","jsmethodcanbestat","json.stringify(config","later","left","length","long","longer","mandatori","match","match(typ","n","need","new","newvalidationerror(config","noinspect","normalizedstatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","notes/typescript","number","object.freeze(config","option","pad","parsedviewdef","path","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","permut","pleas","privat","properti","protect","public","qualiti","readonli","recurs","regex","regexp","regist","registr","registry.t","registry.ts:27","registry.ts:28","registry.ts:29","replac","resource_view","resourceviewregistri","rest","result","return","s.statu","saniti","see","simpletypequalityevalu","singl","sortedarray","sortedarray(qualitycompar","sourc","specif","spread","src/lib/src/resourc","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","string","substr(0","support","t","text","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.getviewsbystatus(normalizedstatu","this.qual","this.statu","this.statusexp","this.typequalityevalu","this.typequalityevaluator(typ","this.validateviewdefinition(config","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","throw","toarray(config.statu","toarray(config.type).foreach(typ","type","type_quality_evalu","typeexp","typeof","typequalityevalu","util","utils/sort","utils/wildcard","v.typeexp.test(typ","valid","validatestatus(config","validatestatusexpression(config","validatetype(config","validateviewdefinition(config","valu","view","view.config","viewdef","viewsbystatu","viewsbystatus(statu","wildcard","wildcardtoregex","wildcardtoregex(statu","wildcardtoregex(typ","x","x\\d?*]/.test(statu","zero"],"interfaces/ReadOnlyHeaders.html":["anyth","boolean","check","const","defin","descript","dummi","exist","export","fals","file","first","get(nam","getal","getall(nam","given","has(nam","header","headers.t","headers.ts:10","headers.ts:15","headers.ts:20","headers.ts:5","implement","index","info","interfac","key","list","match","method","name","never","no_head","null","option","paramet","readonlyhead","result","return","sourc","src/lib/src/read","string","type","valu"],"interfaces/ResourceRouterOptions.html":["204","absolut","alway","analyze_for_entry_compon","angular/common","angular/cor","anoth","aot","api","apiloc","apimapp","apiurl","app_api_prefix","app_base_href","bang","base","basehref","boolean","browserapiurl","chang","class","commonmodul","compon","components/default","configur","configure(opt","const","content","context","data","declar","default","defaultemptycompon","defaulterrorcompon","defin","definit","dep","descript","detail","directives/resourc","empty.compon","emptyview","enabl","end","error.compon","errorview","explicitli","export","factori","file","fortypes(view","full","function","global","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","header","headerviewtypestrategi","host","href","html5","http://example.com/my/context/api","httpclientviewdataload","implement","import","index","info","inject","inject(app_base_href","injectiontoken","injectiontoken('resource_router_configur","interfac","intern","link","loader","locat","locationstrategi","mapper","match","media","media_type_router_empti","media_type_router_load","mode","module.t","module.ts:40","module.ts:47","module.ts:53","module.ts:59","modulewithprovid","multi","my/context/api","navig","new","ngmodul","number.min_safe_integ","option","options.prefix","options.usehash","options.viewdataload","options.viewtypestrategi","outlet","path","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","platformloc","prefix","properti","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","qualiti","read","readonli","registri","rel","resourc","resource_router_configur","resource_view","resourcedatadirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourcerouteropt","resourceviewdirect","resourceviewregistri","responsetyp","result","return","router","set","singl","singleapimapp","slash","sourc","src/lib/src/resourc","static","statu","strategi","string","support","system","tag","text","true","type","url","us","useclass","usefactori","usehash","usehash}=tru","usevalu","view","viewdataload","viewdef","viewtypestrategi","way","won't","work"],"interfaces/UrlInfo.html":["0","absolut","const","defin","export","extend","file","form","function","host","index","info","info.host","info.pathnam","info.protocol","interfac","locationinfo","match","match[1","match[2","match[3","null","object","param","pars","parser","parseurl(url","pathnam","pathrel","properti","protocol","readonli","rel","result","return","rough","sourc","src/lib/src/utils/pars","string","type","undefin","url","url.match(url_pattern","url.t","url.ts:10","url_pattern","urlinfo","w+:)?\\/\\/([^/]+(?::\\d","well"],"interfaces/ViewDef.html":["0..1","0.0","0.5","00","1.0","2","200","2xx","3","9","99","999","accept","accordingli","add","against","alia","alway","angular/cor","anyth","applic","array","arraybuff","be","befor","better","blob","bodi","boolean","both","calcul","call","charact","code","compon","configur","consum","data","declar","default","defin","definit","definition.t","definition.ts:100","definition.ts:19","definition.ts:29","definition.ts:50","definition.ts:71","definition.ts:81","definition.ts:88","definition.ts:93","descript","differ","digit","disabl","disjunct","domain","don't","end","equal","exampl","except","expand","export","express","fallback","file","final","follow","forbidden","forget","function","given","handl","header","http","imag","import","index","info","insignific","integ","interfac","json","know","level","limit","low","maintain","mandatori","mani","match","mean","media","modul","more","multipl","name","never","note","now","nowildcard","number","observ","on","order","otherwis","overrid","overridden","pars","parser","pass","posit","produc","proper","properti","qualiti","rang","readabl","readonli","recommend","reli","remain","request","requir","resolv","respons","responsetyp","result","right","rule","same","see","sent","set","show","similar","singl","sourc","specif","src/lib/src/view","statu","statustyp","still","string","success","support","text","todo","treat","type","typic","undefin","unless","us","usual","valu","view","viewdef","way","wildcard","without","won't","work","x","zero"],"interfaces/ViewTypeResponse.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","overrid","param","properti","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:12","strategy.ts:16","strategy.ts:20","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","viewtyperespons","viewtypestrategi"],"miscellaneous/functions.html":["0","0.333","0.5","0.666","1","2","20","204","aaa","angular","aot","applic","array","array.t","assum","b","basehref","charact","code","compar","config","constant","contain","convert","defaultcompar","defaultcomparer(a","descript","element","emptyview","end","errorview","escaperegexppattern","escaperegexppattern(","evalu","evaluator.t","everyth","exact","export","express","factori","fals","first","follow","form","format","function","handl","handler.t","inconsist","index","input","insertloc","insertlocation(el","intern","json","length","locationfor","locationfor(el","match","media","mimetyp","miscellan","module.t","name","newvalidationerror","newvalidationerror(config","normal","normalizemediatyp","normalizemediatype(mimetyp","normalizestatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","number","obj","option","otherwis","paramet","pars","parser","parseurl","parseurl(url","pattern","platformlocationstrategi","prefix","prepend","present","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","pure","qualiti","qualitycompar","qualitycomparator(a","ration","regex.t","regexp","registry.t","regular","remov","respons","result","return","rough","router","s","second","simpletypequalityevalu","simpletypequalityevaluator(typ","singl","sourc","special","src/lib/src/navig","src/lib/src/qual","src/lib/src/resourc","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","start","statu","statusqualityevalu","statusqualityevaluator(statu","string","stringtojson","stringtojson(input","subtyp","suffix","support","supportsnavig","supportsnavigation(obj","text","toarray","toarray(valu","true","type","type.t","typerefer","undefin","url","url.t","us","usag","utils.t","validatestatu","validatestatus(config","validatestatusexpress","validatestatusexpression(config","validatetyp","validatetype(config","valu","view","well","wildcard","wildcardtoregex","wildcardtoregex('*.js').test('foo.j","wildcardtoregex('*.js').test('foo.jsx","wildcardtoregex('image/*').test('image/png","wildcardtoregex('image/*').test('text/plain","wildcardtoregex(wildcard","without","wrap","xssi"],"miscellaneous/variables.html":["_self","_top","absolut","alway","anyth","api","app_api_prefix","base","boolean","copi","cross","default","dummi","end","fals","get(nam","getall(nam","has(nam","headers.t","host","httpxhrbackend","implement","index","injectiontoken('app_api_prefix","injectiontoken('resource_router_configur","injectiontoken('resource_view","injectiontoken('type_quality_evalu","key","link.t","mapper.t","match","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","miscellan","module.t","n","never","new","no_head","null","prefix","readonlyhead","registry.t","rel","resource_router_configur","resource_view","result","return","router","router/empti","router/error","router/load","s","script","site","slash","src/lib/src/directives/resourc","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","string","target_self","target_top","type","type.t","type_quality_evalu","types.t","url","url.t","url_pattern","utils.t","valu","variabl","view","w+:)?\\/\\/([^/]+(?::\\d","xssi_prefix"],"miscellaneous/typealiases.html":["alias","array.t","compar","definit","definition.t","evalu","evaluator.t","function","index","link.t","match","miscellan","navigationhandl","number","result","src/lib/src/directives/resourc","src/lib/src/qual","src/lib/src/utils/sort","src/lib/src/view","statustyp","string","targettyp","type","typealias","typequalityevalu"],"coverage.html":["0","0/1","0/10","0/2","0/3","0/4","0/5","0/6","0/8","0/9","1/1","1/2","1/4","1/5","1/9","100","11","2/2","2/5","20","25","3/3","3/4","4/4","4/5","40","5/5","50","7/8","75","80","87","9/9","api","apiloc","apimapp","apiurl","app_api_prefix","array.t","baseapiurl","browserapiurl","class","compon","coverag","data","data.t","defaultcompar","defaultemptycompon","defaulterrorcompon","definition.t","direct","document","empty.component.t","emptyview","error.component.t","errorview","escaperegexppattern","evaluator.t","file","function","handler.t","headers.t","headerviewtypestrategi","href.t","httpclientviewdataload","identifi","inject","insertloc","interfac","link","link.t","loader.t","location.t","locationfor","locationinfo","mapper.t","match","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","mockapiurl","module.t","navigationhandl","new","newvalidationerror","no_head","normalizemediatyp","normalizestatu","normalizestatusexpress","outlet.t","parsedviewdef","parseurl","providelocationstrategi","qualitycompar","readonlyhead","regex.t","registry.t","resource_router_configur","resource_view","resourcedatacontext","resourcedatadirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourcerouteropt","resourceviewdirect","resourceviewregistri","result","router","simpletypequalityevalu","singleapimapp","sortedarray","src/lib/src/api","src/lib/src/components/default","src/lib/src/directives/resourc","src/lib/src/navig","src/lib/src/qual","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","src/lib/src/view","src/lib/testing/src/mock","statement","statusqualityevalu","strategy.t","stringtojson","supportsnavig","tabl","tablesort(document.getelementbyid('coverag","target_self","target_top","toarray","type","type.t","type_quality_evalu","types.t","url.t","url_pattern","urlinfo","utils.t","validatestatu","validatestatusexpress","validatetyp","variabl","view","view.t","viewdata","viewdataload","viewdef","viewsbystatu","viewtyperespons","viewtypestrategi","wildcardtoregex","xssi_prefix"]},"length":41},"tokenStore":{"root":{"0":{"0":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.02702702702702703},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.08277404921700224}},".":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"3":{"3":{"3":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}},"docs":{}},"docs":{}},"5":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}},"6":{"6":{"6":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}},"docs":{}},"docs":{}},"docs":{},".":{"1":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{}}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.049217002237136466}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.008948545861297539}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.04697986577181208}}},"docs":{}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}},".":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"docs":{}}},"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03355704697986577}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{}}},"2":{"0":{"0":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}},"1":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}},"docs":{}},"4":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}},"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008639308855291577},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},".":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"docs":{}},"?":{"docs":{},"?":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"x":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008639308855291577}}}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}},"docs":{}}},"3":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.009727626459143969},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.01079913606911447}},"/":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{}}},"4":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}},"docs":{}}},"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}}},"/":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{}}},"7":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012}},"/":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{}}},"8":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{}},"9":{"9":{"9":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.021505376344086023},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}},"/":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"docs":{}}},"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},".":{"1":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.005474452554744526},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}},"i":{"docs":{},"a":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.027472527472527472},"changelog.html":{"ref":"changelog.html","tf":0.026490066225165563},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"z":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01098901098901099},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.012345679012345678},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.04562043795620438},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.05263157894736842},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.05714285714285714},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04568527918781726},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}},"o":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.03314917127071823},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.021604938271604937},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":5.0036496350364965},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.019867549668874173},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018518518518518517},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.010948905109489052},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":5.01015228426396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.023809523809523808},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":5.0174672489082965},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.020491803278688523},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.016483516483516484}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.01639344262295082},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0228310502283105},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015228426395939087},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.021834061135371178},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.020491803278688523},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018404907975460124},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023255813953488372}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.06486486486486487},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.013618677042801557},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.014553014553014554},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.016203703703703703}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811}}}}}}}},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.008948545861297539}},"s":{"docs":{},":":{"1":{"7":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}},"docs":{}},"7":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811}}},"9":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}},"docs":{}}}}},"[":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976}}}}}},"p":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}},"d":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}}},"a":{"docs":{},"a":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"b":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.016216216216216217},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009259259259259259}},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.005474452554744526},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.015432098765432098},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.01935483870967742},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}},"d":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.014285714285714285},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.019417475728155338},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.03488372093023256}}}},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules.html":{"ref":"modules.html","tf":0.1},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":5.013698630136986},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.027472527472527472},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}},"g":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}},"m":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333}}}},"s":{"docs":{},"e":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0273972602739726},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.034934497816593885},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.028688524590163935},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":5.012295081967213},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}},"t":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316}}}}}}}}},"c":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.011111111111111112},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.061068702290076333},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.038876889848812095},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011574074074074073}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":5.01015228426396},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":5.0174672489082965},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":5.016393442622951},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":5.011111111111111},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":5.010810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":5.009433962264151},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":5.009708737864078},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":5.0184049079754605},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":5.009727626459144},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.020134228187919462}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.022099447513812154},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099}}}}},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":5.076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":5.0396825396825395},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":5.034965034965035},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012958963282937365},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.025477707006369428}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.025477707006369428}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}}},"a":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.10270270270270271},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.016203703703703703},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08571428571428572}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.014285714285714285},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.012944983818770227},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.009727626459143969},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.016632016632016633},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009259259259259259}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.02717391304347826},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.024539877300613498},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01744186046511628}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}}}},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.01639344262295082},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}},"r":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}}}}}},"s":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01910828025477707},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0228310502283105},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.009523809523809525},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.021834061135371178},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.020491803278688523},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.016216216216216217},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.012944983818770227},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.01556420233463035},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.016632016632016633},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}},"o":{"docs":{},"r":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}},"i":{"docs":{},"v":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"@":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"u":{"docs":{},"m":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"d":{"docs":{},"e":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008639308855291577},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.002237136465324}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.03184713375796178},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012773722627737226},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384}}}}}},"s":{"docs":{},"e":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114}}}},"l":{"docs":{},"l":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.009259259259259259}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.016483516483516484},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.047619047619047616},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.01358695652173913},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.03184713375796178},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.030952380952380953},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.018518518518518517},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.02912621359223301},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":5.015267175572519},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.019438444924406047},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808}}}}}}}}}}}},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}},"y":{"docs":{},"p":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808}}}},"s":{"docs":{},":":{"1":{"0":{"docs":{"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"1":{"docs":{"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"2":{"docs":{"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"3":{"docs":{"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"4":{"docs":{"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"5":{"docs":{"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"docs":{}},"2":{"5":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}},"9":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}},"docs":{}},"5":{"5":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652}}},"9":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652}}},"docs":{}},"6":{"3":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}},"7":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}},"docs":{"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"8":{"0":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}},"docs":{"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"9":{"5":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}},"9":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}},"docs":{"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715}}},"docs":{}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.016483516483516484}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.021739130434782608},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.007142857142857143},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018404907975460124},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.08333333333333333}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03225806451612903},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.017582417582417582},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":5.061538461538461},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.03225806451612903},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.017582417582417582},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":5.031746031746032},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.027972027972027972},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.029891304347826088},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.022099447513812154},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.024691358024691357},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.03184713375796178},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.016423357664233577},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.01904761904761905},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.046052631578947366},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.01904761904761905},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.032432432432432434},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.04245283018867924},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.025806451612903226},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.023758099352051837},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01744186046511628}},"i":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}},"s":{"docs":{},":":{"1":{"0":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{}},"9":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{}},"2":{"9":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{}},"4":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542}}},"5":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{}},"7":{"1":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{}},"8":{"1":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"8":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{}},"9":{"3":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"docs":{}},"docs":{}}}}}}}}}}}}},"p":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.010948905109489052},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.014285714285714285},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.01904761904761905},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015228426395939087},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.016216216216216217},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.01935483870967742},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.046296296296296294}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.03076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":5.008152173913044},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":5.016574585635359},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":5.006172839506172},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":5.019108280254777},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"coverage.html":{"ref":"coverage.html","tf":0.008948545861297539}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01098901098901099},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010416666666666666}}}}}}}}}}},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0319634703196347},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008639308855291577}}}},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}},"*":{"docs":{},"[":{"docs":{},"?":{"docs":{},"x":{"docs":{},"]":{"docs":{},"*":{"docs":{},"\\":{"docs":{},"*":{"docs":{},"*":{"docs":{},"$":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.03076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.021621621621621623},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006944444444444444},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}},"i":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.016216216216216217},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}},"r":{"docs":{},"r":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"o":{"docs":{},"r":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"s":{"docs":{},":":{"1":{"1":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936}}},"docs":{}},"9":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936}}},"docs":{}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006944444444444444},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}},"(":{"docs":{},"`":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}},"n":{"docs":{},"o":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"'":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.026373626373626374},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.022099447513812154},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018404907975460124},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.020833333333333332},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01744186046511628},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008639308855291577},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018518518518518517}}}},"n":{"docs":{},"d":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018404907975460124},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018404907975460124},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.027972027972027972},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}}}}}}},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839}}}}}}}},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},".":{"docs":{},"g":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}}}}},"m":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"a":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.024539877300613498},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}}},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825}}}}}}},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.015432098765432098},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}},"i":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}},"i":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.007142857142857143},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.009708737864077669}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}},"d":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.019867549668874173}}},"l":{"docs":{},"e":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}},"r":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}},"s":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.013186813186813187},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.013618677042801557},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.014553014553014554},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.675925925925926},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.049217002237136466}}}}}}}},"l":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0228310502283105},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.020491803278688523}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0228310502283105},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.020491803278688523}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}},"l":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.01935483870967742},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613}},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.01935483870967742},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541}}}}}},"u":{"docs":{},"l":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}},"o":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.010948905109489052},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.03870967741935484},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.01556420233463035},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.016632016632016633}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}},".":{"docs":{},"t":{"docs":{"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}},"s":{"docs":{},":":{"2":{"docs":{"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288}}},"4":{"docs":{"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288}}},"docs":{}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.01935483870967742},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.03260869565217391},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0330188679245283},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.03680981595092025},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.05161290322580645},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.05232558139534884}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":5.010869565217392},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.021739130434782608},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064}}},"5":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064}}},"docs":{}},"2":{"0":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064}}},"docs":{}},"5":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064}}},"docs":{}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.016666666666666666},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.009708737864077669},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.02142857142857143},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.012944983818770227}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":5.004761904761905},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.016666666666666666},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.009708737864077669},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}}}}}}}},"m":{"docs":{},"l":{"5":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}},"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.03076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.03289473684210526},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.04},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.009259259259259259}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.012345679012345678}}}}}}}},"m":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.015432098765432098},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.021834061135371178},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.01639344262295082},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},".":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"s":{"docs":{},":":{"1":{"2":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"3":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"4":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"5":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"6":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"7":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"docs":{}},"2":{"5":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"docs":{}},"5":{"4":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"docs":{}},"docs":{}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018404907975460124},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.018518518518518517}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.038461538461538464},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.041758241758241756},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.02717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.022099447513812154},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.021604938271604937},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01910828025477707},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.02857142857142857},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.037037037037037035},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.014150943396226415},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.038834951456310676},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018404907975460124},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.009727626459143969},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.03958333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01744186046511628}}}}}},"a":{"docs":{},"g":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}},"n":{"docs":{},"c":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.012944983818770227}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}},"i":{"docs":{},"d":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939}}},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.043243243243243246}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}},"e":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":5.005474452554744},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":5.018264840182648},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":5.016304347826087},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":5.007142857142857},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":5.019736842105263},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":5.007220216606498},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":5.019047619047619},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.015659955257270694}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":5.022900763358779},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":5.024},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":5.033898305084746},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":5.004158004158004},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":5.012903225806451},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":5.004166666666666},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":5.027522935779817},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":5.006479481641469},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":5.023255813953488},"coverage.html":{"ref":"coverage.html","tf":0.020134228187919462}}}}},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421}}}}}}}}}}}}}},"g":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}},"f":{"docs":{},"o":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.027972027972027972},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.01358695652173913},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.027624309392265192},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.021604938271604937},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.025477707006369428},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.011111111111111112},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"i":{"docs":{},"t":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105}},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}},"'":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525}}}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}},"'":{"docs":{},"m":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.016483516483516484}}}}}}},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02197802197802198},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.046296296296296294},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.014598540145985401},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.027083333333333334},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},".":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}},"s":{"docs":{},":":{"2":{"2":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384}}},"3":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077}}},"docs":{}},"3":{"0":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384}}},"docs":{}},"docs":{}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}},"s":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613}},"e":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"e":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},".":{"docs":{},"t":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}},"s":{"docs":{},":":{"2":{"7":{"docs":{"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}},"docs":{}},"3":{"5":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}},"7":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}},"8":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}},"9":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}},"docs":{}},"4":{"3":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}},"docs":{}},"5":{"3":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}},"docs":{}},"6":{"0":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}},"docs":{}},"8":{"2":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381}}},"docs":{}},"docs":{}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105}}}}}}},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01824817518248175},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0182648401826484},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.021834061135371178},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.020491803278688523},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0228310502283105},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}}}}},"#":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"s":{"docs":{},":":{"1":{"0":{"1":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"1":{"7":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"2":{"5":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"5":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"3":{"3":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"4":{"5":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"6":{"2":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"8":{"1":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"9":{"2":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}},"docs":{}},"docs":{}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0228310502283105},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.019736842105263157},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.017467248908296942},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.020491803278688523},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":5.032},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.03669724770642202},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}},"g":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}},"n":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"e":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"w":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}},"f":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"overview.html":{"ref":"overview.html","tf":0.021505376344086023},"changelog.html":{"ref":"changelog.html","tf":0.019867549668874173},"modules.html":{"ref":"modules.html","tf":0.2},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.03076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010830324909747292},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.009433962264150943},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.03816793893129771},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.025806451612903226},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.03669724770642202},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.02591792656587473},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009259259259259259},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01282051282051282},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05714285714285714},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"[":{"1":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"2":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"3":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"docs":{}}}},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}}}}}}}}}}}}},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.015432098765432098},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01824817518248175},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04568527918781726}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}},".":{"docs":{},"t":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}},"s":{"docs":{},":":{"1":{"5":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695}}},"docs":{}},"2":{"4":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525}}},"7":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695}}},"docs":{}},"3":{"4":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}},"docs":{}},"4":{"8":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}},"docs":{}},"docs":{}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}}},"i":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}},"r":{"docs":{},"k":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}},"l":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.02702702702702703},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006944444444444444},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01282051282051282},"coverage.html":{"ref":"coverage.html","tf":0.011185682326621925}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.009259259259259259}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}},"a":{"docs":{},"n":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008639308855291577}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.021505376344086023},"modules.html":{"ref":"modules.html","tf":10.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":5.004395604395604},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.01079913606911447}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.011185682326621925}},"s":{"docs":{},":":{"4":{"0":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}},"7":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}},"docs":{}},"5":{"3":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}},"9":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625}}}}}}}}}}}}}}},"e":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.019867549668874173}}}},"c":{"docs":{},"k":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":5.0131578947368425},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008791208791208791},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333}},"p":{"docs":{},"l":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}}},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.335648148148148},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.3397435897435894},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.3619047619047615}}}}}}}}}}},"n":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.07692307692307693},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.047619047619047616},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.03496503496503497},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.009124087591240875},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.011904761904761904},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.09032258064516129},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.046296296296296294}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.012345679012345678},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.029197080291970802},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.02619047619047619},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.02912621359223301},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.023809523809523808},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.02912621359223301},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":5.0508474576271185},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01098901098901099},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.014814814814814815},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.017509727626459144},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.016632016632016633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010416666666666666},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.02564102564102564},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.016245487364620937},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.017509727626459144},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.018711018711018712},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}},"s":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}},"x":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008791208791208791},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.012345679012345678}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.03296703296703297}}}},"o":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.039735099337748346},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825}}}}}}}}}},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}},"e":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.005474452554744526},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008639308855291577}},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.010948905109489052},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0182648401826484},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.043668122270742356},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.02459016393442623},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.021660649819494584},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.02702702702702703},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02358490566037736},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.023346303501945526},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.02494802494802495},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012958963282937365},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01744186046511628},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.016203703703703703},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.025477707006369428},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.010948905109489052},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.03804347826086957},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.007142857142857143},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02358490566037736},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.049079754601226995},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.05161290322580645},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.040697674418604654},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.02564102564102564}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.02702702702702703},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02197802197802198},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.02097902097902098},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},".":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"s":{"docs":{},":":{"1":{"4":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}},"9":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986}}},"docs":{}},"3":{"2":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}},"docs":{}},"docs":{}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.027972027972027972},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.010752688172044}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02030456852791878},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01098901098901099},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.009259259259259259},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.009124087591240875},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.011904761904761904},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.01935483870967742},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.05092592592592592}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.02142857142857143},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.025889967637540454},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"o":{"docs":{"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288}}}}}}},"k":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}}},"n":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04060913705583756},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.009259259259259259}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006944444444444444}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.023722627737226276},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.07106598984771574},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.020491803278688523},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.03289473684210526},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.048},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.045871559633027525}}}}},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010830324909747292},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.012474012474012475},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011574074074074073}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"*":{"docs":{},"/":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"x":{"docs":{},"/":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}}}},"g":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}},"e":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.009124087591240875},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.011904761904761904},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.01935483870967742},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.046296296296296294}}}}}},"s":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.014285714285714285},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.012944983818770227},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":5.004158004158004},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}},"r":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.010948905109489052},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.009124087591240875},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.06666666666666667},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.016666666666666666},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01282051282051282}}}}},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.012345679012345678},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010830324909747292},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.014814814814814815},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.012474012474012475}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.03076923076923077},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.027083333333333334},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}},"t":{"docs":{},"i":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.011111111111111112},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.009433962264150943},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012958963282937365},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}}}},"a":{"docs":{},"g":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.025477707006369428},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.016423357664233577},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.02142857142857143},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010830324909747292},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.011111111111111112},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.009708737864077669},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.019736842105263157},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.04},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.016483516483516484}}}},"c":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.01904761904761905},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.10849056603773585},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"s":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811}}}}}}}}},"r":{"docs":{},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}},"i":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008791208791208791},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016304347826086956},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.016245487364620937},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.11320754716981132},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018404907975460124},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.033073929961089495},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.018711018711018712},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.03669724770642202},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01744186046511628}}},"y":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":5.032258064516129},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023255813953488372},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.016666666666666666},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.029082774049217}},"s":{"docs":{},":":{"1":{"0":{"8":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"4":{"docs":{"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938}}},"5":{"docs":{"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938}}},"6":{"docs":{"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938}}},"7":{"docs":{"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876}}},"docs":{}},"2":{"7":{"docs":{"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"8":{"docs":{"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"9":{"docs":{"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"docs":{}},"3":{"9":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"5":{"3":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"7":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"7":{"9":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"9":{"0":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"docs":{}}}}}}}}}},"e":{"docs":{},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}}}}}}},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0182648401826484},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.03056768558951965},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.01639344262295082},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01282051282051282}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}},"i":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01910828025477707},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.007142857142857143},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012958963282937365}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.02197802197802198},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.03076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.027972027972027972},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012773722627737226},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04060913705583756},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"overview.html":{"ref":"overview.html","tf":0.22580645161290322},"modules.html":{"ref":"modules.html","tf":0.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":5.057142857142857},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010416666666666666}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":5.008333333333334},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07526881720430108},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.026373626373626374},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":5.005434782608695},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}},"]":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"f":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":5.011111111111111},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.019867549668874173},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.027624309392265192},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.009259259259259259}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07526881720430108},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.026373626373626374},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":5.011049723756906},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07526881720430108},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.026373626373626374},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":5.006172839506172},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07526881720430108},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.026373626373626374},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":5.027972027972028},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07526881720430108},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.026373626373626374},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":5.012738853503185},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.021604938271604937},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.014285714285714285},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":5.003610108303249},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.043478260869565216},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.02142857142857143},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.019417475728155338},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.06748466257668712},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.01511879049676026},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.05813953488372093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.014285714285714285},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.019417475728155338},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.01079913606911447}}}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"overview.html":{"ref":"overview.html","tf":0.021505376344086023},"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules.html":{"ref":"modules.html","tf":0.2},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.03076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0091324200913242},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.00819672131147541},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.009433962264150943},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01282051282051282},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05714285714285714},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.010752688172043012},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714}},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01098901098901099},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.024456521739130436},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.015432098765432098},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.029197080291970802},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0593607305936073},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.03260869565217391},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.03333333333333333},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.039473684210526314},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.019855595667870037},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.023809523809523808},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04060913705583756},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.05240174672489083},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.06557377049180328},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.022222222222222223},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.021621621621621623},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.03559870550161812},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.03067484662576687},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.013618677042801557},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.014553014553014554},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0967741935483871},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010416666666666666},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.03669724770642202},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.029069767441860465},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.03205128205128205}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.009523809523809525},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.025889967637540454}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.009708737864077669},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}},"i":{"docs":{},"r":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.03296703296703297},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010416666666666666},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.011185682326621925}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}}}},"g":{"docs":{},"h":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"o":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.005474452554744526}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.016483516483516484}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}},"l":{"docs":{},"e":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}},"n":{"docs":{},"g":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"x":{"docs":{},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}}},"s":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.016483516483516484}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}}},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.011111111111111112},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.017278617710583154}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}}}}}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.1076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.05555555555555555},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.06293706293706294},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"p":{"docs":{},"l":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008639308855291577},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":5.0095238095238095},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}},"t":{"docs":{},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.3388278388278385},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}}},"t":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.039711191335740074},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.011111111111111112},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.04669260700389105},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.030534351145038167},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.04158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.03023758099352052},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.03488372093023256},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.013888888888888888}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283}}}}},"y":{"docs":{},"p":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08571428571428572}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"i":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.027972027972027972},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.04076086956521739},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.024691358024691357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0364963503649635},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.04891304347826087},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.030952380952380953},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.09210526315789473},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.03429602888086643},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.08121827411167512},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.05240174672489083},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.05327868852459016},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.02962962962962963},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.07075471698113207},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.02912621359223301},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.03680981595092025},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.04085603112840467},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.04580152671755725},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.12},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.1016949152542373},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.035343035343035345},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.12903225806451613},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.10091743119266056},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.017278617710583154},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.029069767441860465},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06018518518518518},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.038461538461538464},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}},"p":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.014285714285714285},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}},"6":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}},"docs":{}},"2":{"0":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}},"docs":{}},"3":{"2":{"docs":{"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374}}},"docs":{}},"4":{"1":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652}}},"3":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652}}},"9":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652}}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules.html":{"ref":"modules.html","tf":0.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.017278617710583154},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}},"r":{"docs":{},"e":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186}}}},"t":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"docs":{}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"y":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.0064516129032258064},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":5.010810810810811},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014285714285714285},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.03496503496503497}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010416666666666666},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01282051282051282},"coverage.html":{"ref":"coverage.html","tf":0.040268456375838924}}}}}}},"a":{"docs":{},"d":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.03225806451612903},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.03496503496503497},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.03260869565217391},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.027624309392265192},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.027777777777777776},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.03821656050955414},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.011111111111111112},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.017897091722595078}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01824817518248175},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0182648401826484},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015228426395939087},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.01639344262295082},"coverage.html":{"ref":"coverage.html","tf":0.011185682326621925}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.021739130434782608},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.02142857142857143},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.04716981132075472},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.019438444924406047},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023255813953488372},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.017897091722595078}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.023809523809523808},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.02702702702702703},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.008948545861297539}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.008948545861297539}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.05084745762711865},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.05263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.02097902097902098}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.01079913606911447}}},"a":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.05945945945945946},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02358490566037736},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.009727626459143969},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.02097902097902098}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}},".":{"docs":{},"$":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01910828025477707}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.019021739130434784},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.025925925925925925}}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0072992700729927005},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.018050541516245487},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.02079002079002079}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.03296703296703297},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.017582417582417582},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.024456521739130436},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.022099447513812154},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.027777777777777776},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01910828025477707},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.009124087591240875},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.08695652173913043},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.02857142857142857},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.036101083032490974},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.023809523809523808},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.01015228426395939},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.018518518518518517},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.02702702702702703},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.07075471698113207},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.016181229773462782},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.07975460122699386},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.04085603112840467},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.061068702290076333},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.035343035343035345},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.025806451612903226},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.035416666666666666},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.07991360691144708},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.08139534883720931},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05714285714285714},"coverage.html":{"ref":"coverage.html","tf":0.008948545861297539}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.019867549668874173}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.006711409395973154}}}}},"o":{"docs":{},"f":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.013618677042801557},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.01694915254237288},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.014553014553014554}}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.018050541516245487},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.012474012474012475},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08571428571428572}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.05092592592592592}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}},"i":{"docs":{},"c":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.08287292817679558},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.037037037037037035}},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.016574585635359115},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.009259259259259259},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08571428571428572}}}}}}}}},"k":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.008733624454148471},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}},"b":{"docs":{},"l":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.007142857142857143},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.009708737864077669},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006944444444444444}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.03076923076923077},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.015873015873015872},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013986013986013986}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.019021739130434784},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.011111111111111112}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01098901098901099},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.012345679012345678},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}}}},"e":{"docs":{},"e":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.007936507936507936},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993}}},"a":{"docs":{},"t":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}}}}},"u":{"docs":{},"s":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011574074074074073}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.027777777777777776}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006593406593406593},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.009259259259259259},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012773722627737226},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.004761904761904762},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.017467248908296942},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.01639344262295082},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012269938650306749},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008791208791208791},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0020833333333333333}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333}},"}":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.013186813186813187},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.0125}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825}}}}},"a":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}},"m":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.005474452554744526},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}}}}}},"r":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013245033112582781},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023809523809523808},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.029891304347826088},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.015432098765432098},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.10036496350364964},"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.045662100456621},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.007142857142857143},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.04285714285714286},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.07614213197969544},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.06550218340611354},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.045081967213114756},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.025925925925925925},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.012944983818770227},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.064},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.0847457627118644},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.00625},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.07339449541284404},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006944444444444444},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}},".":{"docs":{},"t":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.017897091722595078}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}},"2":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052}}},"8":{"docs":{"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236}}},"docs":{}},"2":{"1":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052}}},"5":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052}}},"8":{"docs":{"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}},"docs":{}},"4":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"5":{"6":{"docs":{"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}},"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"6":{"3":{"docs":{"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}},"7":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621}}},"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"7":{"5":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621}}},"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052}}},"8":{"0":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621}}},"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052}}},"9":{"docs":{"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.006578947368421052}}},"docs":{}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0136986301369863},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.013100436681222707},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.012295081967213115},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":5.027522935779817},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}}}}}}}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}},"i":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.007142857142857143},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.012944983818770227}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/BrowserApiUrl.html":{"ref":"injectables/BrowserApiUrl.html","tf":0.0045662100456621},"classes/ApiUrl.html":{"ref":"classes/ApiUrl.html","tf":0.004366812227074236},"classes/BaseApiUrl.html":{"ref":"classes/BaseApiUrl.html","tf":0.004098360655737705}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.0044742729306487695}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077}}}}},"a":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.01098901098901099},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.015384615384615385},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.015384615384615385},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.03968253968253968},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.006993006993006993},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.022099447513812154},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018518518518518517},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.025477707006369428},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.029197080291970802},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.011904761904761904},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.036101083032490974},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.05583756345177665},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.014814814814814815},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.0047169811320754715},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.016181229773462782},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.03501945525291829},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.030534351145038167},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.033264033264033266},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.014583333333333334},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.02591792656587473},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641},"coverage.html":{"ref":"coverage.html","tf":0.029082774049217}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.047619047619047616},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.022099447513812154},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.012345679012345678},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.06369426751592357},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.016666666666666666},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.025925925925925925},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":5.009433962264151},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.025889967637540454},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008791208791208791},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.009523809523809525},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":5.0129449838187705},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008791208791208791},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.009523809523809525},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.032490974729241874},"classes/ViewData.html":{"ref":"classes/ViewData.html","tf":0.02830188679245283},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.021400778210116732},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.02702702702702703},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008333333333333333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":5.004319654427646},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008791208791208791},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.010869565217391304},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.014285714285714285},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.006472491909385114},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":5.0184049079754605},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.016666666666666666},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.03260869565217391},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.03680981595092025},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":5.02906976744186},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.005434782608695652},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.010869565217391304},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.025477707006369428},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.007407407407407408}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.012345679012345678}}}}},".":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"s":{"docs":{},":":{"1":{"0":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}},"1":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}},"8":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714}}},"docs":{}},"2":{"5":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357}}},"docs":{}},"docs":{}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":5.007782101167315},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009523809523809525},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.005076142131979695}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.04195804195804196},"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.019021739130434784},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.012738853503184714},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.005474452554744526},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/MockApiUrl.html":{"ref":"injectables/MockApiUrl.html","tf":0.02631578947368421},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.025925925925925925},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.03783783783783784},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.012903225806451613},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012958963282937365},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.023148148148148147},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.08333333333333333}}},"i":{"docs":{},"d":{"docs":{"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.06153846153846154},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.031746031746031744},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.027972027972027972}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.6730769230769225},"coverage.html":{"ref":"coverage.html","tf":0.029082774049217}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.008152173913043478},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.006172839506172839},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.006369426751592357},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012773722627737226},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005405405405405406},"interfaces/NavigationHandler.html":{"ref":"interfaces/NavigationHandler.html","tf":0.03389830508474576}}}}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196}}}}}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.03023758099352052},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.018518518518518517}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"'":{"docs":{},"*":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},".":{"docs":{},"j":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"s":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"*":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.005494505494505495},"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}}}},"a":{"docs":{},"y":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002197802197802198},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0021598272138228943}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0036496350364963502},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010810810810810811}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}},"+":{"docs":{},":":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}}}}}}}}},")":{"docs":{},"?":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"(":{"docs":{},"[":{"docs":{},"^":{"docs":{},"/":{"docs":{},"]":{"docs":{},"+":{"docs":{},"(":{"docs":{},"?":{"docs":{},":":{"docs":{},":":{"docs":{},"\\":{"docs":{},"d":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.021505376344086023},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.011904761904761904},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.016181229773462782},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0064794816414686825},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"directives/ResourceDataDirective.html":{"ref":"directives/ResourceDataDirective.html","tf":0.002717391304347826},"classes/ResourceDataContext.html":{"ref":"classes/ResourceDataContext.html","tf":0.003703703703703704}}}}}}}}}}}}},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005434782608695652},"injectables/HttpClientViewDataLoader.html":{"ref":"injectables/HttpClientViewDataLoader.html","tf":0.002380952380952381},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewDataLoader.html":{"ref":"classes/ViewDataLoader.html","tf":0.003236245954692557},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006134969325153374},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004761904761904762}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006622516556291391},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.011049723756906077},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.03225806451612903},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0030864197530864196},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0018248175182481751}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004395604395604396},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.018050541516245487},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.02529182879377432},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.02702702702702703},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004166666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.019438444924406047},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.004629629629629629},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00641025641025641}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004319654427645789}},"\\":{"docs":{},"d":{"docs":{},"?":{"docs":{},"*":{"docs":{},"]":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0023148148148148147}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0022371364653243847}}}}}}}}}}}}}},"length":4154},"corpusTokens":["0","0..1","0.0","0.333","0.5","0.666","0/1","0/10","0/2","0/3","0/4","0/5","0/6","0/8","0/9","00","04","1","1.0","1.0.0","1.html#object","1/1","1/2","1/4","1/5","1/9","100","11","12","13","15","2","2.1","2.3","2/2","2/5","20","200","2017","204","22","25","2??').foreach(statu","2xx","3","3/3","3/4","30","4","4.0.0","4.x","4/4","4/5","40","5/5","50","7","7/8","75","80","87","9","9/9","99","999","_length","_self","_top","a[resourcelink","a[resourcelink]'},{'nam","aaa","absolut","abstract","accept","accessor","accordingli","account","actual","actual_compon","add","addsingleview(config","addview","addview(config","addviews(config","against","aim","alia","alias","allow","alpha.12","alreadi","alway","analyz","analyze_for_entry_compon","angular","angular/cli","angular/common","angular/common/http","angular/cor","angular/platform","anoth","anyth","aot","api","apilink","apiloc","apimapp","apiurl","apiurl.normalize(prefix","app","app.compon","app_api_prefix","app_base_href","appcompon","append","applic","application/x.sampl","argument","around","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","array.length","array.t","array.ts:17","array.ts:7","array.ts:9","array[pivot","arraybuff","assum","awar","b","back","backend","bang","base","base.pathrel","baseapiurl","basehref","be","befor","better","between","bind","bindabl","bit","blob","bodi","boolean","bootstrap","bootstrapit","both","break","brows","browser","browserapiurl","browsermodul","bug","buggi","build","buildaft","built","bump","bundl","button","bystatu","c","calcul","call","cancel","case","catch(err","catch(respons","chang","changelog","charact","check","class","click","click(button","client","close","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","code","combin","commonmodul","compar","comparer(el","compil","complet","compon","component_templ","componentfactoryresolv","componentref","components/default","config","config.compon","config.foreach(this.addview","config.qu","config.responsetyp","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","configure(opt","conform","consist","console.error(err","const","constant","construct","constructor","constructor($implicit","constructor(@inject(resource_view","constructor(apiloc","constructor(apimapp","constructor(apiurl","constructor(compar","constructor(data","constructor(navig","constructor(platformstrategi","constructor(priv","constructor(protect","constructor(publ","constructor(statu","constructor(strategi","constructor(view","constructor(viewcontain","consum","contain","content","contenttyp","context","continu","conveni","convent","convert","copi","correct","correspond","count","counterpart","coverag","creat","cross","ctrl","ctrlkey","current","currenturl","custom","d*[?x]*\\**$/.test(statu","data","data(valu","data.bodi","data.statu","data.statustext","data.t","data.ts:10","data.ts:11","data.ts:12","data.ts:13","data.ts:14","data.ts:15","data.ts:25","data.ts:29","data.ts:55","data.ts:59","data.ts:6","data.ts:63","data.ts:67","data.ts:8","data.ts:80","data.ts:9","data.ts:95","data.ts:99","data.typ","data.url","datavalu","declar","decompos","default","defaultcompar","defaultcomparer(a","defaultemptycompon","defaulterrorcompon","defin","definit","definition.t","definition.ts:100","definition.ts:19","definition.ts:29","definition.ts:4","definition.ts:50","definition.ts:71","definition.ts:81","definition.ts:88","definition.ts:93","dep","depend","deprec","descript","destroy","detail","determin","develop","diagnost","differ","digit","direct","directive({selector","directives/resourc","directli","disabl","disjunct","display","dist/angular","doc","document","dom","domain","don't","donavig","donavigate(path","drive","dummi","duplic","dure","e.g","element","emit","empti","empty.compon","empty.component.t","emptyview","enabl","end","endpoint","engin","equal","err","error","error('invalid","error('path","error('url","error('wildcard","error(`cannot","error(`no","error(`unsupport","error.compon","error.component.t","error.component.ts:11","error.component.ts:9","errorcompon","errorview","escaperegexppattern","escaperegexppattern(","etc","evalu","evaluator.t","event","event.button","event.ctrlkey","event.metakey","eventemitt","everyth","exact","exampl","examplemodul","except","exclud","exist","expand","explicit","explicitli","export","express","extend","extern","extract","extracttyp","extracttype(respons","factori","fail","fallback","fals","favour","featur","fetch","fetch(uri","fetch(url","field","file","final","find","fire","first","fix","flatten","follow","forbidden","forget","form","format","fortypes(view","found","full","function","gener","get","get(nam","get(uri","get(url","getal","getall(nam","getbasehref","getdom().getbasehref","getlength","getloc","getsrc","geturl","getviewsbystatus(statu","given","global","go","go(url","group","group.statu","group.statusexp.test(statusstr","group.types.array.find(v","group.types.push","gulp","handl","handler","handler.t","handler.ts:2","handler.ts:4","happen","has(nam","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","hateoa","header","headernam","headers.t","headers.ts:10","headers.ts:15","headers.ts:20","headers.ts:5","headerviewtypestrategi","helper","here","hide","home","host","hostbind","hostlisten","hostlistener('click","href","href.t","href.ts:12","href.ts:13","href.ts:14","href.ts:15","href.ts:16","href.ts:17","href.ts:25","href.ts:54","html","html5","http","http://example.com/my/context/api","httpclient","httpclientviewdataload","httprespons","https://www.typescriptlang.org/docs/handbook/releas","httpxhrbackend","i'm","identifi","ignor","imag","implement","implicit","import","includ","inconsist","increment","index","info","info.host","info.pathnam","info.protocol","init","init(protocol","initi","inject","inject(app_api_prefix","inject(app_base_href","inject(docu","inject(type_quality_evalu","injectiontoken","injectiontoken('app_api_prefix","injectiontoken('resource_router_configur","injectiontoken('resource_view","injectiontoken('type_quality_evalu","injector","input","insert","insertloc","insertlocation(el","insertlocation(valu","insid","insignific","instal","instanc","instead","integ","interfac","intern","internalbasehref","internalhost","internalpathnam","internalprotocol","invalid","isn't","it'","itself","join","jsmethodcanbestat","json","json.stringify(config","jsunusedglobalsymbol","jsunusedlocalsymbol","key","know","known","later","layout","lead","left","legend","length","level","librari","limit","link","link.t","link.ts:22","link.ts:23","link.ts:30","list","listen","load","load(url","loader","loader.t","loader.ts:27","loader.ts:35","loader.ts:37","loader.ts:38","loader.ts:39","loader.ts:43","loader.ts:53","loader.ts:60","loader.ts:82","local","localhost","locat","location#path","location#prepareexternalurl","location.path","location.t","location.ts:101","location.ts:117","location.ts:125","location.ts:15","location.ts:33","location.ts:45","location.ts:62","location.ts:81","location.ts:92","locationfor","locationfor(el","locationinfo","locationstrategi","log","long","longer","low","maintain","malform","mandatori","mani","manual","map","map(respons","mapapitoview","mapapitoview(url","maplocationurltoapi","mapper","mapper.t","mapper.ts:15","mapper.ts:24","mapper.ts:27","mapper.ts:34","mapper.ts:48","mapviewtoapi","mapviewtoapi(path","mark","match","match(typ","match[1","match[2","match[3","math.floor((start","mean","mechan","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","metadata","metakey","method","mimetyp","miscellan","mock","mockapiurl","mockview(url","mode","modul","module.t","module.ts:40","module.ts:47","module.ts:53","module.ts:59","modulewithprovid","more","move","multi","multipl","my/context/api","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","namespac","navig","navigationhandl","necessari","need","nest","never","new","newer","newvalidationerror","newvalidationerror(config","next","ng","ngmodul","ngonchang","ngoninit","nice","no_head","noinspect","non","normal","normalize(url","normalizedstatu","normalizemediatyp","normalizemediatype(contenttyp","normalizemediatype(mimetyp","normalizestatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","not(a)[resourcelink","not(a)[resourcelink]'},{'nam","notat","note","notes/typescript","noth","now","nowildcard","npm","null","number","number.min_safe_integ","obj","obj.go","object","object.freeze(config","observ","observable.of(respons","observable.of(this.mockview","observable.of(this.mockview(url","ok","old","on","onchang","onclick","onclick(button","oninit","onlocationchang","open","option","options.prefix","options.usehash","options.viewdataload","options.viewtypestrategi","order","origin","otherwis","out","outlet","outlet.t","outlet.ts:14","outlet.ts:19","outlet.ts:32","output","overrid","overridden","overview","packagr","pad","page","param","paramet","pars","parse(respons","parsedviewdef","parser","parseurl","parseurl(this.getbasehref","parseurl(url","pass","path","path).replac","path.replac","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","pathnam","pathrel","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","perform","permut","pivot","platformloc","platformlocationstrategi","platformstrategi","pleas","pointless","posit","possibl","prefix","prepareexternalurl","prepareexternalurl(url","prepend","present","press","primari","principl","privat","problem","produc","propag","proper","properli","properti","protect","protocol","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","public","publish","pure","push","push(valu","qualiti","qualitycompar","qualitycomparator(a","rang","rare","ration","read","readabl","readm","readonli","readonlyhead","recommend","recurs","redirect","refactor","reflectiveinjector","reflectiveinjector.fromresolvedproviders(provid","reflectiveinjector.resolv","regex","regex.t","regexp","regist","registr","registri","registry.t","registry.ts:108","registry.ts:14","registry.ts:15","registry.ts:16","registry.ts:17","registry.ts:27","registry.ts:28","registry.ts:29","registry.ts:39","registry.ts:53","registry.ts:57","registry.ts:79","registry.ts:90","regular","rel","relat","releas","reli","reload","remain","remov","renam","render","render(viewdata","replac","repositori","request","requesturl","requir","reset","resolv","resolve(requesturl","resourc","resource_router_configur","resource_view","resourcedata","resourcedata(valu","resourcedata][resourcedataof","resourcedata][resourcedataof]'},{'nam","resourcedatacontext","resourcedatacontext(this.mockview","resourcedatadirect","resourcedataof","resourcedataof(valu","resourcelink","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourceroutermodule.configur","resourceroutermodule.fortyp","resourcerouteropt","resourceviewdirect","resourceviewregistri","respons","response.bodi","response.head","response.headers.get(this.headernam","response.statu","response.statustext","response.url","responsetyp","rest","result","retriev","return","right","root","rough","rout","router","router/empti","router/error","router/load","routerdemo","rule","run","runtim","rxjs/add/observable/of","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/add/operator/switchmap","rxjs/observ","rxjs/subject","s","s.statu","same","sampl","sample.compon","samplecompon","saniti","saveconfigur","script","second","see","selector","send","sent","server","set","setdata(valu","setresourcedata(valu","setresourcedataof(valu","setsrc(valu","seturl(url","seturl(valu","show","side","similar","simpl","simpletypequalityevalu","simpletypequalityevaluator(typ","singl","singleapimapp","site","slash","snippet","someth","sort","sortedarray","sortedarray(qualitycompar","sourc","special","specif","spread","src","src(valu","src/lib/src/api","src/lib/src/components/default","src/lib/src/directives/resourc","src/lib/src/navig","src/lib/src/qual","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","src/lib/src/view","src/lib/testing/src/mock","srcchang","srcvalu","start","starttodo","state","statement","static","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","statustext","statustyp","still","store","strategi","strategy.t","strategy.ts:12","strategy.ts:16","strategy.ts:20","strategy.ts:32","strategy.ts:41","strategy.ts:43","strategy.ts:49","strictnullcheck","string","stringtojson","stringtojson(input","stringtojson(response.bodi","strip","subject","subscribe(data","subset","substr(0","subtyp","success","suffix","super","support","supportsnavig","supportsnavigation(obj","supportsnavigation(target","sure","svg","swallow","switch","switchmap(url","symlink","system","t","tabl","tablesort(document.getelementbyid('coverag","tag","take","target","target.go(this.resourcelink","target_self","target_top","targettyp","templat","templateref","test","text","thing","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.apiloc","this.apilocation.go(this.resourcelink","this.apilocation.prepareexternalurl(viewurl","this.apimapper.mapapitoview(url","this.apimapper.mapapitoview(viewurl","this.apimapper.mapviewtoapi(path","this.array","this.array.splice(i","this.compar","this.context","this.context.$implicit","this.curr","this.current.destroy","this.datavalu","this.document.loc","this.donavig","this.donavigate(path","this.extern","this.getloc","this.getviewsbystatus(normalizedstatu","this.go(url","this.href","this.http.get(url","this.internalbasehref","this.internalhost","this.internalpathnam","this.internalprotocol","this.load","this.load(url","this.location.go(path","this.location.iscurrentpathequalto(path","this.location.normalize(url","this.location.path","this.location.prepareexternalurl(url","this.location.subscrib","this.maplocationurltoapi","this.normalizemediatype(contenttyp","this.onlocationchang","this.parse(respons","this.platformstrategy.getbasehref","this.prefix","this.qual","this.registry.match(typ","this.render(valu","this.resolve(uri","this.resolver.resolvecomponentfactory(viewdata.config.compon","this.resourcelink","this.resourceviewregistry.match(this.typ","this.srcchange.emit(valu","this.srcvalu","this.statu","this.statusexp","this.strategy.extracttype(respons","this.target","this.typ","this.typequalityevalu","this.typequalityevaluator(typ","this.unsupport","this.url","this.urlchange.emit(this.urlvalu","this.urlchange.emit(url","this.urlsubject","this.urlsubject.next(this.urlvalu","this.urlsubject.next(valu","this.urlvalu","this.validateviewdefinition(config","this.view","this.view.navig","this.viewcontainer.createcomponent(factori","this.viewcontainer.createembeddedview(this.templateref","this.viewcontainer.length","this.viewcontainer.parentinjector","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","those","throw","time","toarray","toarray(config.statu","toarray(config.type).foreach(typ","toarray(valu","todo","trail","treat","tree","true","type","type.t","type_quality_evalu","typealias","typedoc","typeexp","typeof","typequalityevalu","typerefer","types.t","typescript","typic","umd","unabl","undefin","understand","unexpect","unknown","unless","unsupport","unus","updat","upgrad","uri","url","url(url","url(valu","url.match(url_pattern","url.startswith(this.prefix","url.substring(this.prefix.length).replac","url.t","url.ts:10","url.ts:12","url.ts:18","url.ts:21","url.ts:25","url.ts:28","url.ts:4","url.ts:5","url.ts:56","url.ts:6","url.ts:63","url.ts:67","url.ts:7","url.ts:75","url.ts:8","url.ts:80","url.ts:9","url_pattern","urlchang","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlsubject","urlvalu","us","usag","useclass","usefactori","usehash","usehash}=tru","usevalu","usual","util","utils.t","utils/http","utils/norm","utils/pars","utils/sort","utils/wildcard","v.typeexp.test(typ","valid","validatestatu","validatestatus(config","validatestatusexpress","validatestatusexpression(config","validatetyp","validatetype(config","validateviewdefinit","validateviewdefinition(config","valu","var","variabl","variou","veri","versa","version","vice","view","view.config","view.t","view.ts:10","view.ts:11","view.ts:18","view.ts:25","viewcontain","viewcontainerref","viewdata","viewdata(thi","viewdata.config","viewdata.config.compon","viewdataload","viewdef","viewsbystatu","viewsbystatus(statu","viewtyperespons","viewtypestrategi","viewurl","void","w+:)?\\/\\/([^/]+(?::\\d","w+:/.test(path","way","well","wildcard","wildcardtoregex","wildcardtoregex('*.js').test('foo.j","wildcardtoregex('*.js').test('foo.jsx","wildcardtoregex('image/*').test('image/png","wildcardtoregex('image/*').test('text/plain","wildcardtoregex(statu","wildcardtoregex(typ","wildcardtoregex(wildcard","window","within","without","won't","work","wrap","wrapper","wrong","x","x\\d?*]/.test(statu","xssi","xssi_prefix","zero","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nresource-router\n\nAngular routing engine that drive views by media types. It loads data itself, and by response Content-Type header\nit displays configured view. It is a replacement for original Angular Router (they cannot be used at the same time).\nThe aim of this library is to allow building of RESTful clients using Angular, following HATEOAS principle.\nSee CHANGELOG for release changes.\nInstallation\nnpm i angular-resource-router --saveConfiguration\nSample snippet how is the router configured.\nIt is very similar to original router, but instead of registering paths, we are registering media types.\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ResourceRouterModule } from 'angular-resource-router';\nimport { AppComponent } from './app.component';\nimport { SampleComponent } from './sample.component';\nimport { ErrorComponent } from './error.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SampleComponent\n  ],\n  imports: [\n    BrowserModule,\n    ResourceRouterModule.configure({\n      prefix: 'api/'\n    }),\n    ResourceRouterModule.forTypes([\n      {\n        type: 'application/x.sample',\n        component: SampleComponent\n      },\n      {\n        status: '*',\n        type: '*',\n        component: ErrorComponent\n      }\n    ])\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class ExampleModule {\n}How It Works\nTODO\nDevelopment\nBefore development, run\nnpm run bootstrapit will create necessary symlinks for build to pass.\nLibrary\nBuild of the library is performed with\nnpm run buildAfter building, it can be published to NPM repository with\nnpm publish dist/angular-resource-routerDemo app\nLocal development server can be started with\nnpm startTODO\nThings that are yet to be implemented\n\nComplete README\nComplete example\nSupport for resolve and data route configs\nSupport for outlet layouts, outlet resolve\nOutlet context data (name etc)\nNavigation within outlet\nHide element if empty link\nExternal navigation for unknown type\nBuild and publish docs\nTypedoc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceRouterModule\n\n\n\ncluster_ResourceRouterModule_declarations\n\n\n\ncluster_ResourceRouterModule_exports\n\n\n\n\nResourceOutletComponent\n\nResourceOutletComponent\n\n\n\nResourceRouterModule\n\nResourceRouterModule\n\nResourceRouterModule -->\n\nResourceOutletComponent->ResourceRouterModule\n\n\n\n\n\nResourceDataDirective\n\nResourceDataDirective\n\nResourceRouterModule -->\n\nResourceDataDirective->ResourceRouterModule\n\n\n\n\n\nResourceViewDirective\n\nResourceViewDirective\n\nResourceRouterModule -->\n\nResourceViewDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkDirective\n\nResourceLinkDirective\n\nResourceRouterModule -->\n\nResourceLinkDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkWithHrefDirective\n\nResourceLinkWithHrefDirective\n\nResourceRouterModule -->\n\nResourceLinkWithHrefDirective->ResourceRouterModule\n\n\n\n\n\nDefaultEmptyComponent\n\nDefaultEmptyComponent\n\nResourceRouterModule -->\n\nDefaultEmptyComponent->ResourceRouterModule\n\n\n\n\n\nDefaultErrorComponent\n\nDefaultErrorComponent\n\nResourceRouterModule -->\n\nDefaultErrorComponent->ResourceRouterModule\n\n\n\n\n\nResourceOutletComponent \n\nResourceOutletComponent \n\nResourceOutletComponent  -->\n\nResourceRouterModule->ResourceOutletComponent \n\n\n\n\n\nResourceDataDirective \n\nResourceDataDirective \n\nResourceDataDirective  -->\n\nResourceRouterModule->ResourceDataDirective \n\n\n\n\n\nResourceViewDirective \n\nResourceViewDirective \n\nResourceViewDirective  -->\n\nResourceRouterModule->ResourceViewDirective \n\n\n\n\n\nResourceLinkDirective \n\nResourceLinkDirective \n\nResourceLinkDirective  -->\n\nResourceRouterModule->ResourceLinkDirective \n\n\n\n\n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective  -->\n\nResourceRouterModule->ResourceLinkWithHrefDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n4.0.0 (2017-12-30)\nBumping to 4.x, to match Angular version.\nMoved from gulp custom build script to ng-packagr.\nBreaking Changes\n\nUpgraded to use HttpClient instead of deprecated Http\nRenamed route config key body to responseType\nresponseType now supports only json and text values - blob was buggy in old implementation \nand its use would be very rare\nRefactored ApiMapper component - there is now ApiUrl and ApiMapper abstract classes, \nwith default implementations.\nTypescript 2.3 (newer is not supported by Angular 4.x)\n\nBug Fixes\n\n[resourceLink] should now properly handle external URLs (those that cannot be mapped to an API endpoint)\nVarious fixes with API prefixes and URL handling in general\n\n\n1.0.0-alpha.12 (2017-04-22)\nNow compiled with strictNullChecks: true typescript option, which leads to explicit \noptional function arguments.\n\nFinal UMD bundle now contains source maps\nExample is now built with @angular/cli\n\nBreaking Changes\n\nMoved to Angular 4.0.0\nMoved to Typescript 2.1+\nDeprecated apiLink directive in favour of new resourceLink (which conforms to Angular naming convention)\nRenamed ApiUrl class to ApiMapper (relates to #13)\n\nFeatures\n\nCompiled with strictNullChecks\nresourceLink is new directive, which fixes navigation problems, page reloads, and works both on  (with more features) and other tags like  (closes #15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        ResourceRouterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceRouterModule.html":{"url":"modules/ResourceRouterModule.html","title":"module - ResourceRouterModule","body":"\n                   \n\n\n\n\n  Modules\n  ResourceRouterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceRouterModule\n\n\n\ncluster_ResourceRouterModule_declarations\n\n\n\ncluster_ResourceRouterModule_exports\n\n\n\n\nResourceOutletComponent\n\nResourceOutletComponent\n\n\n\nResourceRouterModule\n\nResourceRouterModule\n\nResourceRouterModule -->\n\nResourceOutletComponent->ResourceRouterModule\n\n\n\n\n\nResourceDataDirective\n\nResourceDataDirective\n\nResourceRouterModule -->\n\nResourceDataDirective->ResourceRouterModule\n\n\n\n\n\nResourceViewDirective\n\nResourceViewDirective\n\nResourceRouterModule -->\n\nResourceViewDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkDirective\n\nResourceLinkDirective\n\nResourceRouterModule -->\n\nResourceLinkDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkWithHrefDirective\n\nResourceLinkWithHrefDirective\n\nResourceRouterModule -->\n\nResourceLinkWithHrefDirective->ResourceRouterModule\n\n\n\n\n\nDefaultEmptyComponent\n\nDefaultEmptyComponent\n\nResourceRouterModule -->\n\nDefaultEmptyComponent->ResourceRouterModule\n\n\n\n\n\nDefaultErrorComponent\n\nDefaultErrorComponent\n\nResourceRouterModule -->\n\nDefaultErrorComponent->ResourceRouterModule\n\n\n\n\n\nResourceOutletComponent \n\nResourceOutletComponent \n\nResourceOutletComponent  -->\n\nResourceRouterModule->ResourceOutletComponent \n\n\n\n\n\nResourceDataDirective \n\nResourceDataDirective \n\nResourceDataDirective  -->\n\nResourceRouterModule->ResourceDataDirective \n\n\n\n\n\nResourceViewDirective \n\nResourceViewDirective \n\nResourceViewDirective  -->\n\nResourceRouterModule->ResourceViewDirective \n\n\n\n\n\nResourceLinkDirective \n\nResourceLinkDirective \n\nResourceLinkDirective  -->\n\nResourceRouterModule->ResourceLinkDirective \n\n\n\n\n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective  -->\n\nResourceRouterModule->ResourceLinkWithHrefDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/src/resource-router-module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResourceOutletComponent\n                            \n                            \n                                ResourceDataDirective\n                            \n                            \n                                ResourceViewDirective\n                            \n                            \n                                ResourceLinkDirective\n                            \n                            \n                                ResourceLinkWithHrefDirective\n                            \n                            \n                                DefaultEmptyComponent\n                            \n                            \n                                DefaultErrorComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResourceOutletComponent\n                            \n                            \n                                    ResourceDataDirective\n                            \n                            \n                                    ResourceViewDirective\n                            \n                            \n                                    ResourceLinkDirective\n                            \n                            \n                                    ResourceLinkWithHrefDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {\n  APP_BASE_HREF, CommonModule, HashLocationStrategy, Location, LocationStrategy, PathLocationStrategy,\n  PlatformLocation\n} from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional, Type } from '@angular/core';\nimport { ApiMapper } from './api-mapper';\nimport { ApiLocation } from './api-location';\nimport { HeaderViewTypeStrategy, ViewTypeStrategy } from './view-type-strategy';\nimport { RESOURCE_VIEWS, ResourceViewRegistry } from './resource-view-registry';\nimport { ViewDef } from './view-definition';\nimport { ResourceLinkDirective } from './directives/resource-link';\nimport { ResourceLinkWithHrefDirective } from './directives/resource-link-with-href';\nimport { ResourceOutletComponent } from './directives/resource-outlet';\nimport { HttpClientViewDataLoader, ViewDataLoader } from './view-data-loader';\nimport { ResourceDataDirective } from './directives/resource-data';\nimport { ResourceViewDirective } from './directives/resource-view';\nimport { DefaultEmptyComponent } from './components/default-empty.component';\nimport { DefaultErrorComponent } from './components/default-error.component';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING } from './system-media-types';\nimport { ApiUrl, BrowserApiUrl } from './api-url';\nimport { APP_API_PREFIX, SingleApiMapper } from './single-api-mapper';\n\n\nexport const RESOURCE_ROUTER_CONFIGURATION = new InjectionToken('RESOURCE_ROUTER_CONFIGURATION');\n\n\n/**\n * Set of global configuration options for {@link ResourceRouterModule}.\n */\nexport interface ResourceRouterOptions {\n  /**\n   * Prefix for the URL. Can be base-relative, host-relative or absolute.\n   * Always should however end with slash ('/').\n   *\n   * When using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\n   * That is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\n   *\n   * Another way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n   */\n  readonly prefix: string;\n\n  /**\n   * Enables hash-bang navigation mode. Default is HTML5 mode.\n   *\n   * Read {@link #prefix} details when setting to true.\n   */\n  readonly useHash?: boolean;\n\n  /**\n   * Changes implementation of {@link ViewTypeStrategy}.\n   * Default is {@link HeaderViewTypeStrategy} using `Content-Type` header.\n   */\n  readonly viewTypeStrategy?: Type;\n\n  /**\n   * Changes implementation of {@link ViewDataLoader}.\n   * Default is {@link HttpClientViewDataLoader}.\n   */\n  readonly viewDataLoader?: Type;\n}\n\n\n@NgModule({\n  declarations: [\n    ResourceOutletComponent,\n    ResourceDataDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective,\n    DefaultEmptyComponent,\n    DefaultErrorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ResourceOutletComponent,\n    ResourceDataDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective\n  ]\n})\nexport class ResourceRouterModule {\n\n  static configure(options: ResourceRouterOptions): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], RESOURCE_ROUTER_CONFIGURATION\n          ]\n        },\n        Location,\n        {\n          provide: ApiUrl,\n          useClass: BrowserApiUrl\n        },\n        {\n          provide: ApiMapper,\n          useClass: SingleApiMapper\n        },\n        ApiLocation,\n        ResourceViewRegistry,\n        {\n          provide: APP_API_PREFIX,\n          useValue: options.prefix\n        },\n        {\n          provide: RESOURCE_ROUTER_CONFIGURATION,\n          useValue: options\n        },\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: [emptyView(), errorView()],\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: [DefaultErrorComponent, DefaultEmptyComponent],\n          multi: true\n        },\n        {\n          provide: ViewTypeStrategy,\n          useClass: options.viewTypeStrategy || HeaderViewTypeStrategy\n        },\n        {\n          provide: ViewDataLoader,\n          useClass: options.viewDataLoader || HttpClientViewDataLoader\n        }\n      ]\n    };\n  }\n\n  static forTypes(views: ViewDef[]): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: views,\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: views,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function provideLocationStrategy(platformLocationStrategy: PlatformLocation, baseHref: string, options: ResourceRouterOptions) {\n  return options.useHash\n    ? new HashLocationStrategy(platformLocationStrategy, baseHref)\n    : new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function emptyView(): ViewDef {\n  return {\n    component: DefaultEmptyComponent,\n    status: 204,\n    type: [MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING],\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function errorView(): ViewDef {\n  return {\n    component: DefaultErrorComponent,\n    status: '*',\n    type: '*',\n    responseType: 'text',\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEmptyComponent.html":{"url":"components/DefaultEmptyComponent.html","title":"component - DefaultEmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEmptyComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/components/default-empty.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  template: ''\n})\nexport class DefaultEmptyComponent {\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceDataDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultErrorComponent.html":{"url":"components/DefaultErrorComponent.html","title":"component - DefaultErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultErrorComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/components/default-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                Error loading a view {{data.type}} on URL {{data.url}}  {{data.status}} {{data.statusText}}\n  {{data.body}}\n            \n\n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(data: ViewData)\n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:9\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      data\n                                                      \n                                                                ViewData\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                data\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            data:     ViewData\n    \n                        \n                    \n                        \n                            \n                                Type :     ViewData\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:11\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ViewData } from '../view-data';\n\n@Component({\n  template: `Error loading a view {{data.type}} on URL {{data.url}}\n  {{data.status}} {{data.statusText}}\n  {{data.body}}`\n})\nexport class DefaultErrorComponent {\n\n  constructor(public data: ViewData) {\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Error loading a view {{data.type}} on URL {{data.url}}  {{data.status}} {{data.statusText}}  {{data.body}}'\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceDataDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceOutletComponent.html":{"url":"components/ResourceOutletComponent.html","title":"component - ResourceOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceOutletComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/directives/resource-outlet.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                resource-outlet\n            \n\n\n\n            \n                template\n                \n  \n\n            \n\n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                src\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                srcChange\n                            \n                        \n                    \n                \n                \n                    \n                        Accessors\n                    \n                \n                \n                    \n                        \n                            \n                                src\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            src\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:19\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            srcChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:14\n                                \n                            \n                \n            \n    \n\n\n\n\n\n    \n        \n            Accessors\n        \n            \n                \n                    \n                        \n                            \n                            src\n                        \n                    \n    \n                    \n                        \n                            getsrc()\n                        \n                    \n                                \n                                    \n                                        Defined in src/lib/src/directives/resource-outlet.ts:32\n                                    \n                                \n    \n                    \n                        \n                            setsrc(value: string)\n                        \n                    \n                                \n                                    \n                                        Defined in src/lib/src/directives/resource-outlet.ts:19\n                                    \n                                \n                \n            \n    \n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'resource-outlet',\n  template: `\n    \n      \n    `\n})\nexport class ResourceOutletComponent {\n\n  @Output()\n  srcChange: EventEmitter = new EventEmitter();\n\n  private srcValue = '';\n\n  @Input()\n  set src(value: string) {\n    // This is needed check, since during runtime binding, we cannot be sure value isn't null\n    if (!value) {\n      value = '';\n    }\n\n    // Emit event if value has actually changed\n    if (this.srcValue !== value) {\n      this.srcValue = value;\n      this.srcChange.emit(value);\n    }\n  }\n\n  get src(): string {\n    return this.srcValue;\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceDataDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceDataDirective.html":{"url":"directives/ResourceDataDirective.html","title":"directive - ResourceDataDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceDataDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-data.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        NavigationHandler\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [resourceData][resourceDataOf]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        go\n                                    \n                                    \n                                        load\n                                    \n                                    \n                                        ngOnInit\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceData\n                                    \n                                    \n                                        resourceDataOf\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        urlChange\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceData\n                                    \n                                    \n                                        resourceDataOf\n                                    \n                                    \n                                        url\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(viewContainer: ViewContainerRef, templateRef: TemplateRef, loader: ViewDataLoader, registry: ResourceViewRegistry)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              viewContainer\n                                                              \n                                                                        ViewContainerRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              templateRef\n                                                              \n                                                                        TemplateRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              loader\n                                                              \n                                                                        ViewDataLoader\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              registry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resourceData\n                                \n                                \n                                      \n                                        Type:    any\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:55\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resourceDataOf\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:59\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    urlChange\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:25\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        go\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            go(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:99\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        load\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            load(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:80\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnInit\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnInit()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:95\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    resourceData\n                                \n                            \n            \n            \n                            \n                                \n                                    setresourceData(value: any)\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data.ts:55\n                                            \n                                        \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resourceDataOf\n                                \n                            \n            \n            \n                            \n                                \n                                    setresourceDataOf(value: string)\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data.ts:59\n                                            \n                                        \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    url\n                                \n                            \n            \n                            \n                                \n                                    geturl()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data.ts:63\n                                            \n                                        \n            \n                            \n                                \n                                    seturl(value: string)\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data.ts:67\n                                            \n                                        \n                        \n                    \n            \n\n    \n\n\n    \n        import { Directive, EventEmitter, Input, OnInit, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport 'rxjs/add/operator/switchMap';\nimport { Observable } from 'rxjs/Observable';\nimport { ViewDataLoader } from '../view-data-loader';\nimport { ViewData } from '../view-data';\nimport { NavigationHandler } from '../navigation-handler';\nimport { ResourceViewRegistry } from '../resource-view-registry';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_ERROR, MEDIA_TYPE_ROUTER_LOADING } from '../system-media-types';\nimport { Subject } from 'rxjs/Subject';\nimport { NO_HEADERS } from '../read-only-headers';\n\n\nexport class ResourceDataContext {\n  constructor(public $implicit: ViewData) {\n  }\n}\n\n\n@Directive({\n  selector: '[resourceData][resourceDataOf]'\n})\nexport class ResourceDataDirective implements OnInit, NavigationHandler {\n\n  @Output()\n  readonly urlChange = new EventEmitter();\n\n  private urlValue = '';\n  private urlSubject = new Subject();\n  private context: ResourceDataContext;\n\n  constructor(protected viewContainer: ViewContainerRef,\n              protected templateRef: TemplateRef,\n              protected loader: ViewDataLoader,\n              protected registry: ResourceViewRegistry) {\n    this.context = new ResourceDataContext(this.mockView('', MEDIA_TYPE_ROUTER_LOADING, 204, 'OK'));\n\n    // Handle url changes\n    this.urlSubject\n      .switchMap(url => this.load(url))\n      .subscribe(data => {\n        // Update data\n        this.context.$implicit = data;\n\n        // This propagates back the actual url when server-side redirect was performed\n        if (data.url !== this.urlValue) {\n          this.urlValue = data.url;\n          this.urlChange.emit(this.urlValue);\n        }\n      });\n  }\n\n  // Unused but needed when used in decomposed notation directly on \n  // noinspection JSUnusedLocalSymbols\n  @Input()\n  set resourceData(value: any) {\n  }\n\n  @Input()\n  set resourceDataOf(value: string) {\n    this.url = value;\n  }\n\n  get url(): string {\n    return this.urlValue;\n  }\n\n  set url(value: string) {\n    // This is needed check, since during runtime binding, we cannot be sure value isn't null\n    if (!value) {\n      value = '';\n    }\n\n    // Emit event if value has actually changed\n    if (this.urlValue !== value) {\n      this.urlValue = value;\n      this.urlSubject.next(value);\n    }\n  }\n\n  load(url: string): Observable> {\n    if (url) {\n      return this.loader\n        .fetch(url, this)\n        .catch(err => {\n          // Log it, this should not happen normally\n          console.error(err);\n          // Return error view\n          return Observable.of(this.mockView(url, MEDIA_TYPE_ROUTER_ERROR, 999, 'Routing Error', err));\n        });\n    } else {\n      return Observable.of(this.mockView('', MEDIA_TYPE_ROUTER_EMPTY, 204, 'OK'));\n    }\n  }\n\n  ngOnInit() {\n    this.viewContainer.createEmbeddedView(this.templateRef, this.context);\n  }\n\n  go(url: string): void {\n    // Update property if changed\n    if (this.urlValue !== url) {\n      this.urlValue = url;\n      this.urlChange.emit(url);\n    }\n\n    // Load data (always)\n    this.urlSubject.next(this.urlValue);\n  }\n\n  private mockView(url: string, type: string, status: number, statusText: string, body?: any): ViewData {\n    const config = this.registry.match(type, status);\n    return new ViewData(this, config, type, url, status, statusText, NO_HEADERS, body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceLinkDirective.html":{"url":"directives/ResourceLinkDirective.html","title":"directive - ResourceLinkDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceLinkDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-link.ts\n        \n\n            \n                Description\n            \n            \n                Note: This is limited version of resourceLink, which works on any element, but does not support\nopening new windows with CTRL key and external URLs.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        :not(a)[resourceLink]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceLink\n                                    \n                                    \n                                        target\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        click\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiLocation: ApiLocation, view?: ViewData)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:23\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiLocation\n                                                              \n                                                                        ApiLocation\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              view\n                                                              \n                                                                        ViewData\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resourceLink\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:22\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    target\n                                \n                                \n                                      \n                                        Type:    TargetType\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:23\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:30\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Input, Optional } from '@angular/core';\nimport { ViewData } from '../view-data';\nimport { NavigationHandler, supportsNavigation } from '../navigation-handler';\nimport { ApiLocation } from '../api-location';\n\n\nexport const TARGET_SELF = '_self';\nexport const TARGET_TOP = '_top';\n\nexport type TargetType = NavigationHandler | typeof TARGET_SELF | typeof TARGET_TOP;\n\n\n/**\n * Note: This is limited version of resourceLink, which works on any element, but does not support\n * opening new windows with CTRL key and external URLs.\n */\n@Directive({\n  selector: ':not(a)[resourceLink]'\n})\nexport class ResourceLinkDirective {\n\n  @Input() resourceLink: string;\n  @Input() target?: TargetType;\n\n  constructor(private apiLocation: ApiLocation,\n              @Optional() private view?: ViewData) {\n  }\n\n  @HostListener('click')\n  onClick(): boolean {\n    // Handle target\n    let target = this.target;\n\n    if (typeof target === 'string' && target) {\n      if (target === TARGET_SELF) {\n        target = this.view && this.view.navigation;\n      } else if (target === TARGET_TOP) {\n        target = undefined;\n      } else {\n        throw new Error(`Unsupported target '${target}', use  tag instead`);\n      }\n    }\n\n    // Fallback to page navigation\n    if (!target) {\n      target = this.apiLocation;\n    }\n\n    // Navigate\n    if (supportsNavigation(target)) {\n      target.go(this.resourceLink);\n    }\n\n    // And cancel click\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceLinkWithHrefDirective.html":{"url":"directives/ResourceLinkWithHrefDirective.html","title":"directive - ResourceLinkWithHrefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceLinkWithHrefDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-link-with-href.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        a[resourceLink]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngOnChanges\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        external\n                                    \n                                    \n                                        resourceLink\n                                    \n                                    \n                                        target\n                                    \n                                    \n                                        type\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostBindings\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        href\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        click\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiMapper: ApiMapper, apiLocation: ApiLocation, resourceViewRegistry: ResourceViewRegistry, view?: ViewData)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiMapper\n                                                              \n                                                                        ApiMapper\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              apiLocation\n                                                              \n                                                                        ApiLocation\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              resourceViewRegistry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              view\n                                                              \n                                                                        ViewData\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    external\n                                \n                                \n                                    \n                                      Default value: false\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:16\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resourceLink\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:13\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    target\n                                \n                                \n                                      \n                                        Type:    TargetType\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:15\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    type\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:14\n                                        \n                                    \n                        \n                    \n            \n\n\n            \n                HostBindings        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        href\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    href:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event.button' '$event.ctrlKey' '$event.metaKey' \n                                    \n                                \n                            \n                                \n            click(button: number, ctrlKey: boolean, metaKey: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:54\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnChanges\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnChanges()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Directive, HostBinding, HostListener, Input, OnChanges, Optional } from '@angular/core';\nimport { TARGET_SELF, TARGET_TOP, TargetType } from './resource-link';\nimport { ApiMapper } from '../api-mapper';\nimport { ResourceViewRegistry } from '../resource-view-registry';\nimport { ViewData } from '../view-data';\nimport { supportsNavigation } from '../navigation-handler';\nimport { ApiLocation } from '../api-location';\n\n@Directive({selector: 'a[resourceLink]'})\nexport class ResourceLinkWithHrefDirective implements OnChanges {\n\n  @HostBinding() href: string;\n  @Input() resourceLink: string;\n  @Input() type?: string;\n  @Input() target?: TargetType;\n  @Input() external = false;\n  private unsupported = false;\n\n  constructor(private apiMapper: ApiMapper,\n              private apiLocation: ApiLocation,\n              private resourceViewRegistry: ResourceViewRegistry,\n              @Optional() private view?: ViewData) {\n  }\n\n  ngOnChanges(): void {\n    let unsupported = this.external;\n\n    // Is the link supported? Note that its pointless for external links\n    if (this.type && !unsupported) {\n      // Is it known type for successful response?\n      // Note that this mechanism does not work for other status codes, you will have to set [external] manually\n      unsupported = !this.resourceViewRegistry.match(this.type, 200);\n    }\n\n    // Map to API, if it fails, mark as external\n    let viewUrl = this.resourceLink || '';\n    if (viewUrl && !unsupported) {\n      // Map API to View\n      const url = this.apiMapper.mapApiToView(viewUrl);\n      if (url) {\n        // Use mapped url, since its internal link\n        viewUrl = url;\n      } else {\n        unsupported = true;\n      }\n    }\n\n    // Store mapped URL to href\n    this.unsupported = unsupported;\n    this.href = unsupported ? viewUrl : this.apiLocation.prepareExternalUrl(viewUrl);\n  }\n\n  @HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey'])\n  onClick(button: number, ctrlKey: boolean, metaKey: boolean): boolean {\n    // Let the browser do the navigation if any key was pressed or this link unsupported\n    if (button !== 0 || ctrlKey || metaKey || !this.resourceLink || this.unsupported) {\n      return true;\n    }\n\n    // Handle target\n    let target = this.target;\n\n    if (typeof target === 'string') {\n      if (target === TARGET_SELF) {\n        target = this.view && this.view.navigation;\n      } else if (target === TARGET_TOP) {\n        target = undefined;\n      } else {\n        // Custom target, open new window\n        return true;\n      }\n    }\n\n    // Custom target\n    if (supportsNavigation(target)) {\n      // Navigate using original non-mapped link\n      target.go(this.resourceLink);\n      return false;\n    } else {\n      // Default - navigate using page location\n      this.apiLocation.go(this.resourceLink);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceViewDirective.html":{"url":"directives/ResourceViewDirective.html","title":"directive - ResourceViewDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceViewDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-view.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        resource-view\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        current\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        render\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        data\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        data\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(viewContainer: ViewContainerRef, resolver: ComponentFactoryResolver)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:11\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              viewContainer\n                                                              \n                                                                        ViewContainerRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              resolver\n                                                              \n                                                                        ComponentFactoryResolver\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    data\n                                \n                                \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:18\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        render\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            render(viewData: ViewData)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              viewData\n                                                              \n                                                                      ViewData\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        current\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    current:     ComponentRef | null\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ComponentRef | null\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    data\n                                \n                            \n            \n            \n                            \n                                \n                                    setdata(value: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-view.ts:18\n                                            \n                                        \n                        \n                    \n            \n\n    \n\n\n    \n        import { ComponentFactoryResolver, ComponentRef, Directive, Input, ReflectiveInjector, ViewContainerRef } from '@angular/core';\nimport 'rxjs/add/operator/switchMap';\nimport { ViewData } from '../view-data';\n\n@Directive({\n  selector: 'resource-view'\n})\nexport class ResourceViewDirective {\n\n  protected current: ComponentRef | null;\n  private dataValue: ViewData;\n\n  constructor(protected viewContainer: ViewContainerRef,\n              protected resolver: ComponentFactoryResolver) {\n  }\n\n  @Input()\n  set data(value: ViewData) {\n    if (this.dataValue !== value) {\n      this.dataValue = value;\n      this.render(value);\n    }\n  }\n\n  render(viewData: ViewData) {\n    // Destroy current view\n    if (this.current) {\n      this.current.destroy();\n      this.current = null;\n    }\n\n    if (viewData && viewData.config && viewData.config.component) {\n      // Create nested component\n      const factory = this.resolver.resolveComponentFactory(viewData.config.component);\n      const providers = ReflectiveInjector.resolve([\n        {\n          provide: ViewData,\n          useValue: viewData\n        }\n      ]);\n\n      const injector = ReflectiveInjector.fromResolvedProviders(providers, this.viewContainer.parentInjector);\n      this.current = this.viewContainer.createComponent(factory, this.viewContainer.length, injector, []);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLocation.html":{"url":"injectables/ApiLocation.html","title":"injectable - ApiLocation","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ApiLocation\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-location.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\nProvides bindable url property, to be used with resource-outlet component.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        doNavigate\n                                    \n                                    \n                                        go\n                                    \n                                    \n                                        home\n                                    \n                                    \n                                            Protected\n                                        mapLocationUrlToApi\n                                    \n                                    \n                                            Protected\n                                        onLocationChanged\n                                    \n                                    \n                                        prepareExternalUrl\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        url\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiMapper: ApiMapper, location: Location)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiMapper\n                                                              \n                                                                        ApiMapper\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              location\n                                                              \n                                                                        Location\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        doNavigate\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    doNavigate(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:101\n                                        \n                                    \n            \n                            \n                                \n                                        Performs navigation to given view path.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              View path to navigate to. Should be already mapped from API URL.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        go\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            go(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:62\n                                        \n                                    \n            \n                            \n                                \n                                        Navigates to given URL in the API.\n            URL should be absolute, and provided by server (not constructed locally).\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              API url to navigate to. Cannot be null.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        home\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            home()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:81\n                                        \n                                    \n            \n                            \n                                \n                                        Navigates to root of the API, that is '/' view path.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        mapLocationUrlToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapLocationUrlToApi()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:117\n                                        \n                                    \n            \n                            \n                                \n                                        Takes current {@link Location#path()} and maps it to API url.\n            Might throw an {@link Error} if path() returns something unexpected, like null.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                Mapped url. Never null.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        onLocationChanged\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    onLocationChanged()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:125\n                                        \n                                    \n            \n                            \n                                \n                                        Updates currentUrl and fires next value for url observable.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        prepareExternalUrl\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            prepareExternalUrl(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:92\n                                        \n                                    \n            \n                            \n                                \n                                        This is just wrapper around {@link Location#prepareExternalUrl()} for convenience.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URL to be normalized for the link.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Normalized URL.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    url\n                                \n                            \n            \n                            \n                                \n                                    geturl()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/api-location.ts:33\n                                            \n                                        \n                                \n                                    \n                                            Resource URL that is being currently viewed.\n            Note: This should not be used to determine current data URL, since this always corresponds to the\n            primary view.\n            \n            \n                                            \n                                            \n                                            \n                                                Returns :     string\n            \n                                            \n                                    \n                                \n            \n                            \n                                \n                                    seturl(url: string)\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/api-location.ts:45\n                                            \n                                        \n                                \n                                    \n                                            Changes browser location (using configured strategy) to given resource url.\n            \n            \n            If the url is not in the configured API namespace, error is logged and nothing happens.\n            \n            \n            If the url equals to api prefix, it is performed redirect to page base href.\n            \n            \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                Type\n                                                                Optional\n                                                                Description\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                  url\n                                                                  \n                                                                          string\n                                                                  \n                                                                  \n                                                                  \n                                                                  API url. The navigation in browser is performed to the view URL, that is, without API prefix.\n            \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ApiMapper } from './api-mapper';\nimport { NavigationHandler } from './navigation-handler';\n\n// TODO normalize URL, using LocationStrategy\n\n/**\n * It maps view URLs to API and vice versa.\n * Provides bindable `url` property, to be used with `resource-outlet` component.\n */\n@Injectable()\nexport class ApiLocation implements NavigationHandler {\n\n  private urlValue = '';\n\n  constructor(private apiMapper: ApiMapper,\n              private location: Location) {\n    // Initialize\n    this.urlValue = this.mapLocationUrlToApi();\n\n    // Listen to Location changes\n    this.location.subscribe(() => this.onLocationChanged());\n  }\n\n  /**\n   * Resource URL that is being currently viewed.\n   * Note: This should not be used to determine current data URL, since this always corresponds to the\n   * primary view.\n   *\n   * @returns Resource URL that is being currently viewed.\n   */\n  get url(): string {\n    return this.urlValue;\n  }\n\n  /**\n   * Changes browser location (using configured strategy) to given resource url.\n   *\n   * * * If the `url` is not in the configured API namespace, error is logged and nothing happens.\n   * * If the `url` equals to api prefix, it is performed redirect to page base href.\n   *\n   * @param url API url. The navigation in browser is performed to the `view URL`, that is, without API prefix.\n   */\n  set url(url: string) {\n    // Normalize\n    url = this.location.normalize(url);\n\n    // Navigate only on change\n    if (url !== this.urlValue) {\n      // Note: This also sets urlValue to correct value\n      this.go(url);\n    }\n  }\n\n  /**\n   * Navigates to given URL in the API.\n   * URL should be absolute, and provided by server (not constructed locally).\n   *\n   * @param url API url to navigate to. Cannot be null.\n   */\n  go(url: string): void {\n    if (typeof url !== 'string') {\n      throw new Error('url must be a string');\n    }\n\n    // Map API url to View form\n    const path = this.apiMapper.mapApiToView(url);\n    if (!path) {\n      throw new Error(`Cannot navigate to URL '${url}', it cannot be mapped to known API prefix`);\n    }\n\n    // Navigate\n    this.doNavigate(path);\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  /**\n   * Navigates to root of the API, that is '/' view path.\n   */\n  home(): void {\n    // We don't need API url here, / leads to root of the api, always\n    this.doNavigate('/');\n  }\n\n  /**\n   * This is just wrapper around {@link Location#prepareExternalUrl()} for convenience.\n   *\n   * @param url URL to be normalized for the link.\n   * @returns {string} Normalized URL.\n   */\n  prepareExternalUrl(url: string): string {\n    return this.location.prepareExternalUrl(url);\n  }\n\n  /**\n   * Performs navigation to given view path.\n   *\n   * @param path View path to navigate to. Should be already mapped from API URL.\n   */\n  protected doNavigate(path: string) {\n    // Push state if needed\n    if (!this.location.isCurrentPathEqualTo(path)) {\n      this.location.go(path);\n    }\n\n    // Update our url\n    this.onLocationChanged();\n  }\n\n  /**\n   * Takes current {@link Location#path()} and maps it to API url.\n   * Might throw an {@link Error} if path() returns something unexpected, like null.\n   *\n   * @returns {string} Mapped url. Never null.\n   */\n  protected mapLocationUrlToApi() {\n    const path = this.location.path();\n    return this.apiMapper.mapViewToApi(path);\n  }\n\n  /**\n   * Updates `currentUrl` and fires next value for `url` observable.\n   */\n  protected onLocationChanged() {\n    this.urlValue = this.mapLocationUrlToApi();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserApiUrl.html":{"url":"injectables/BrowserApiUrl.html","title":"injectable - BrowserApiUrl","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BrowserApiUrl\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-url.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getBaseHref\n                                    \n                                    \n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(platformStrategy: LocationStrategy, document: Document)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/api-url.ts:67\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              platformStrategy\n                                                              \n                                                                        LocationStrategy\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              document\n                                                              \n                                                                        Document\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-url.ts:75\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-url.ts:80\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class ApiUrl {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param {string} url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns {string} Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseApiUrl extends ApiUrl {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns {string} Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns {LocationInfo} Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserApiUrl extends BaseApiUrl {\n\n  constructor(private platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private document: Document) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeaderViewTypeStrategy.html":{"url":"injectables/HeaderViewTypeStrategy.html","title":"injectable - HeaderViewTypeStrategy","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HeaderViewTypeStrategy\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n            \n                Description\n            \n            \n                Extracts type from the HTTP header. By default its Content-Type.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        headerName\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        extractType\n                                    \n                                    \n                                        normalizeMediaType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        extractType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            extractType(response: ViewTypeResponse)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:43\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                                      ViewTypeResponse\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        normalizeMediaType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            normalizeMediaType(contentType: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:49\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              contentType\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        headerName\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    headerName:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'content-type'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:41\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param {ViewTypeResponse} response Actual response.\n   * @returns {string} Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientViewDataLoader.html":{"url":"injectables/HttpClientViewDataLoader.html","title":"injectable - HttpClientViewDataLoader","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpClientViewDataLoader\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-data-loader.ts\n        \n\n            \n                Description\n            \n            \n                Default ViewDataLoader implementation, which uses HttpClient as backend.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        http\n                                    \n                                    \n                                            Public\n                                        registry\n                                    \n                                    \n                                            Public\n                                        strategy\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        fetch\n                                    \n                                    \n                                            Protected\n                                        get\n                                    \n                                    \n                                            Protected\n                                        parse\n                                    \n                                    \n                                            Protected\n                                        resolve\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(strategy: ViewTypeStrategy, registry: ResourceViewRegistry, http: HttpClient)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              strategy\n                                                              \n                                                                        ViewTypeStrategy\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              registry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              http\n                                                              \n                                                                        HttpClient\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        fetch\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            fetch(uri: string, navigation: NavigationHandler)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:43\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              uri\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              navigation\n                                                              \n                                                                      NavigationHandler\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        get\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    get(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:53\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        parse\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    parse(response: HttpResponse, config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:82\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                                      HttpResponse\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        resolve\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    resolve(requestUrl: string, response: HttpResponse, navigation: NavigationHandler)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:60\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              requestUrl\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              response\n                                                              \n                                                                      HttpResponse\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              navigation\n                                                              \n                                                                      NavigationHandler\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     ViewData\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        http\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    http:     HttpClient\n            \n                                \n                            \n                                \n                                    \n                                        Type :     HttpClient\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:39\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        registry\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    registry:     ResourceViewRegistry\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceViewRegistry\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:38\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        strategy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    strategy:     ViewTypeStrategy\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ViewTypeStrategy\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:37\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport { ResourceViewRegistry } from './resource-view-registry';\nimport { ViewTypeStrategy } from './view-type-strategy';\nimport { ViewData } from './view-data';\nimport { ViewDef } from './view-definition';\nimport { NavigationHandler } from './navigation-handler';\nimport { stringToJSON } from './utils/http-utils';\n\n\n/**\n * Component that retrieves the data for given URL.\n */\nexport abstract class ViewDataLoader {\n\n  /**\n   * Retrieves the data.\n   *\n   * @param {string} uri URI the data should be retrieved from. Usually it is URL for HTTP request.\n   * @param {NavigationHandler} navigation NavigationHandler instance, to be passed to ViewData constructor.\n   * @returns {Observable>} Retrieved ViewData instance.\n   */\n  abstract fetch(uri: string, navigation: NavigationHandler): Observable>;\n\n}\n\n/**\n * Default ViewDataLoader implementation, which uses HttpClient as backend.\n */\n@Injectable()\nexport class HttpClientViewDataLoader extends ViewDataLoader {\n\n  constructor(public strategy: ViewTypeStrategy,\n              public registry: ResourceViewRegistry,\n              public http: HttpClient) {\n    super();\n  }\n\n  fetch(uri: string, navigation: NavigationHandler): Observable> {\n    // Send request\n    return this\n      .get(uri)\n      // Swallow errors, treat them as normal response\n      .catch(response => Observable.of(response))\n      // This might throw exception, e.g. when response is malformed - it produces failed Observable then\n      .map(response => this.resolve(uri, response, navigation));\n  }\n\n  protected get(url: string): Observable> {\n    // Note: We need to set responseType to text, because if set to json,\n    // Angular will return error when response is not a valid JSON - We will rather parse it here.\n    // Its not nice, since we are duplicating bit of HttpClient, but I'm not aware of other way\n    return this.http.get(url, {observe: 'response', responseType: 'text'});\n  }\n\n  protected resolve(requestUrl: string, response: HttpResponse, navigation: NavigationHandler): ViewData {\n    // Resolve type, if possible\n    const type = this.strategy.extractType(response) || '';\n    // Find view\n    const config = this.registry.match(type, response.status);\n    // Parse body\n    const body = this.parse(response, config);\n\n    // Construct and return ViewData\n    return new ViewData(\n      navigation,\n      config,\n      type,\n      response.url || requestUrl,\n      response.status,\n      response.statusText,\n      response.headers,\n      body,\n    );\n  }\n\n  // noinspection JSMethodCanBeStatic\n  protected parse(response: HttpResponse, config: ViewDef): any | null {\n    // Don't parse empty body\n    if (!response.body) {\n      return null;\n    }\n\n    const responseType = config.responseType || 'json';\n    switch (responseType) {\n      case 'json':\n        // Parse JSON - this assumes body is a string\n        return stringToJSON(response.body);\n\n      case 'text':\n        // Return as-is - this assumes body is already string\n        return response.body;\n\n      default:\n        throw new Error(`Unsupported responseType: ${responseType}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockApiUrl.html":{"url":"injectables/MockApiUrl.html","title":"injectable - MockApiUrl","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MockApiUrl\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/testing/src/mock-api-url.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        internalBaseHref\n                                    \n                                    \n                                        internalHost\n                                    \n                                    \n                                        internalPathname\n                                    \n                                    \n                                        internalProtocol\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getBaseHref\n                                    \n                                    \n                                        getLocation\n                                    \n                                    \n                                        init\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-api-url.ts:21\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-api-url.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        init\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            init(protocol: string, host: string, pathname: string, baseHref: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-api-url.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              protocol\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              host\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              pathname\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              baseHref\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     this\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalBaseHref:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : ''\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-api-url.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalHost\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalHost:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'localhost'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-api-url.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalPathname\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalPathname:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : '/'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-api-url.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalProtocol\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalProtocol:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'http:'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-api-url.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BaseApiUrl, LocationInfo } from 'angular-resource-router';\n\n@Injectable()\nexport class MockApiUrl extends BaseApiUrl {\n\n  internalProtocol = 'http:';\n  internalHost = 'localhost';\n  internalPathname = '/';\n  internalBaseHref = '';\n\n  init(protocol: string, host: string, pathname: string, baseHref: string) {\n    this.internalProtocol = protocol;\n    this.internalHost = host;\n    this.internalPathname = pathname;\n    this.internalBaseHref = baseHref;\n\n    return this;\n  }\n\n  getBaseHref(): string {\n    return this.internalBaseHref;\n  }\n\n  getLocation(): LocationInfo {\n    return {\n      protocol: this.internalProtocol,\n      host: this.internalHost,\n      pathname: this.internalPathname\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceViewRegistry.html":{"url":"injectables/ResourceViewRegistry.html","title":"injectable - ResourceViewRegistry","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceViewRegistry\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-view-registry.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        addView\n                                    \n                                    \n                                        addViews\n                                    \n                                    \n                                        match\n                                    \n                                    \n                                            Protected\n                                        validateViewDefinition\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        length\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(views?: any, typeQualityEvaluator?: TypeQualityEvaluator)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:39\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              views\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              typeQualityEvaluator\n                                                              \n                                                                        TypeQualityEvaluator\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        addView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    addView(config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:90\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        addViews\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            addViews(config: ViewDef | [])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:79\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef | []\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        match\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            match(type: string, status: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:57\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              type\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     ViewDef\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        validateViewDefinition\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    validateViewDefinition(config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:108\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    length\n                                \n                            \n            \n                            \n                                \n                                    getlength()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-view-registry.ts:53\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ViewDef } from './view-definition';\nimport { SortedArray } from './utils/sorted-array';\nimport { wildcardToRegex } from './utils/wildcard-to-regex';\nimport { simpleTypeQualityEvaluator, statusQualityEvaluator, TypeQualityEvaluator } from './quality-evaluator';\n\n\nexport const RESOURCE_VIEWS = new InjectionToken('RESOURCE_VIEWS');\nexport const TYPE_QUALITY_EVALUATOR = new InjectionToken('TYPE_QUALITY_EVALUATOR');\n\n\n// Private classes\nclass ViewsByStatus {\n  readonly status: string;\n  readonly statusExp: RegExp;\n  readonly quality: number;\n  readonly types = new SortedArray(qualityComparator);\n\n  constructor(status: string) {\n    this.status = status;\n    this.statusExp = wildcardToRegex(status);\n    this.quality = statusQualityEvaluator(status);\n  }\n}\n\ninterface ParsedViewDef {\n  readonly config: ViewDef;\n  readonly quality: number;\n  readonly typeExp: RegExp;\n}\n\n\n// Public class\n@Injectable()\nexport class ResourceViewRegistry {\n\n  private readonly typeQualityEvaluator: TypeQualityEvaluator;\n  private readonly viewsByStatus = new SortedArray(qualityComparator);\n  private _length = 0;\n\n  constructor(@Inject(RESOURCE_VIEWS) @Optional() views?: any,\n              @Inject(TYPE_QUALITY_EVALUATOR) @Optional() typeQualityEvaluator?: TypeQualityEvaluator) {\n    // Initialize quality evaluator - must be before addViews\n    this.typeQualityEvaluator = typeQualityEvaluator || simpleTypeQualityEvaluator;\n\n    // Ignore if no view is defined - this is supported path for later registration\n    if (views) {\n      // Register views\n      this.addViews(views);\n    }\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  match(type: string, status: number): ViewDef {\n    // Convert number to padded string\n    const statusStr = normalizeStatus(status);\n\n    // Find all matching groups by status\n    for (const group of this.viewsByStatus.array) {\n      // Match\n      if (!group.statusExp.test(statusStr)) {\n        continue;\n      }\n\n      // Find view in the group\n      const view = group.types.array.find(v => v.typeExp.test(type));\n      if (view) {\n        return view.config;\n      }\n    }\n\n    // Not found\n    throw new Error(`No view definition found for type ${type} and status ${status} - please register default view`);\n  }\n\n  addViews(config: ViewDef | ViewDef[]) {\n    // Flatten array\n    if (Array.isArray(config)) {\n      // Recursive call\n      config.forEach(this.addViews, this);\n    } else if (config) {\n      // Single view\n      this.addView(config);\n    }\n  }\n\n  protected addView(config: ViewDef) {\n    // Sanity check\n    this.validateViewDefinition(config);\n\n    // All permutations of status and type\n    toArray(config.status || '2??').forEach(status => {\n      // Get status group\n      const normalizedStatus = normalizeStatusExpression('' + status);\n      const group = this.getViewsByStatus(normalizedStatus);\n\n      // Types\n      toArray(config.type).forEach(type => {\n        this.addSingleView(config, group, type);\n      });\n    });\n  }\n\n  //noinspection JSMethodCanBeStatic\n  protected validateViewDefinition(config: ViewDef) {\n    // Component\n    if (!config.component || typeof config.component !== 'function') {\n      throw newValidationError(config, 'component is mandatory and must be a type');\n    }\n\n    // Type\n    validateType(config);\n\n    // Status\n    validateStatus(config);\n\n    // Quality\n    if (config.quality && typeof config.quality !== 'number') {\n      throw newValidationError(config, 'quality must be a number');\n    }\n  }\n\n  private addSingleView(config: ViewDef, group: ViewsByStatus, type: string) {\n    // Copy of definition, with specific status and type only\n    // See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest\n    config = {\n      ...config, ...{\n        status: group.status,\n        type: type\n      }\n    };\n\n    // Evaluate quality if needed\n    const quality = typeof config.quality === 'number' ? config.quality : this.typeQualityEvaluator(type);\n\n    // Add to the group\n    group.types.push({\n      config: Object.freeze(config),\n      typeExp: wildcardToRegex(type),\n      quality: quality\n    });\n\n    // Increment count\n    this._length++;\n  }\n\n  private getViewsByStatus(status: string) {\n    let byStatus = this.viewsByStatus.array.find(s => s.status === status);\n\n    if (!byStatus) {\n      byStatus = new ViewsByStatus(status);\n      this.viewsByStatus.push(byStatus);\n    }\n\n    return byStatus;\n  }\n}\n\n\n// Validation functions\nfunction validateType(config: ViewDef) {\n  if (Array.isArray(config.type)) {\n    if (config.type.find(t => typeof t !== 'string')) {\n      throw newValidationError(config, 'type array must consist only of strings');\n    }\n  } else if (typeof config.type !== 'string') {\n    throw newValidationError(config, 'type must be a string or array of strings');\n  }\n}\n\nfunction validateStatus(config: ViewDef) {\n  if (config.status) {\n    if (Array.isArray(config.status)) {\n      // Validate array of values\n      config.status.forEach(status => validateStatusExpression(config, '' + status));\n    } else if (typeof config.status === 'string' || typeof config.status === 'number') {\n      // Validate single value\n      validateStatusExpression(config, '' + config.status);\n    } else {\n      // Invalid\n      throw newValidationError(config, 'status must be either string, number or array of them');\n    }\n  }\n}\n\nfunction validateStatusExpression(config: ViewDef, status: string) {\n  if (status.length  3) {\n    throw newValidationError(config, 'status pattern must be between 1 and 3 characters long');\n  }\n\n  if (/[^x\\d?*]/.test(status)) {\n    throw newValidationError(config, 'status pattern contains invalid characters');\n  }\n\n  if (!/^\\d*[?x]*\\**$/.test(status)) {\n    throw newValidationError(config, 'status pattern can contain wildcards only at the end of the pattern');\n  }\n}\n\nfunction newValidationError(config: any, text: string): Error {\n  return new Error('Invalid view configuration, ' + text + ':\\n' + JSON.stringify(config));\n}\n\n// Utils\nexport function normalizeStatusExpression(pattern: string): string {\n  // Handle * wildcard\n  if (pattern.endsWith('*')) {\n    if (pattern.length > 3) {\n      throw new Error('Wildcard * is not supported for status expressions longer then 3 characters: ' + pattern);\n    }\n\n    return (pattern.replace(/\\*/g, '') + '???').substr(0, 3);\n  }\n\n  // Replace x to ?\n  pattern = pattern.replace(/x/g, '?');\n\n  // Pad left with zeroes\n  return pattern.length (value: T | T[]): Array {\n  return Array.isArray(value) ? value as T[] : [value] as T[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingleApiMapper.html":{"url":"injectables/SingleApiMapper.html","title":"injectable - SingleApiMapper","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SingleApiMapper\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/single-api-mapper.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        prefix\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        mapApiToView\n                                    \n                                    \n                                        mapViewToApi\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiUrl: ApiUrl, prefix: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiUrl\n                                                              \n                                                                        ApiUrl\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              prefix\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mapApiToView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mapApiToView(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:48\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mapViewToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mapViewToApi(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:34\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        prefix\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    prefix:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                    API URL prefix. It's absolute URL, includes base href (if applicable).\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { ApiUrl } from './api-url';\nimport { ApiMapper } from './api-mapper';\n\n\n/**\n * Prefix for the URL. Can be base-relative, host-relative or absolute.\n * Always should however end with slash ('/').\n *\n * @type {InjectionToken}\n */\nexport const APP_API_PREFIX = new InjectionToken('APP_API_PREFIX');\n\n\n/**\n * It maps view URLs to API and vice versa.\n */\n@Injectable()\nexport class SingleApiMapper extends ApiMapper {\n\n  /**\n   * API URL prefix. It's absolute URL, includes base href (if applicable).\n   */\n  readonly prefix: string;\n\n  constructor(apiUrl: ApiUrl,\n              @Inject(APP_API_PREFIX) prefix: string) {\n    super();\n\n    // Normalize prefix\n    this.prefix = apiUrl.normalize(prefix);\n  }\n\n  mapViewToApi(path: string): string {\n    // This is for diagnostics only, but might be useful\n    if (/^\\w+:/.test(path)) {\n      throw new Error('path must be relative');\n    }\n\n    // Strip leading slash\n    path = path.replace(/^\\//, '');\n\n    // Join\n    // Note: API prefix MUST end with a slash, otherwise it will work as configured, which is most likely wrong.\n    return (this.prefix + path).replace(/\\/$/, '');\n  }\n\n  mapApiToView(url: string): string | null {\n    // Remove prefix\n    if (url.startsWith(this.prefix)) {\n      // Strip prefix, prepend /, remove trailing /\n      return '/' + url.substring(this.prefix.length).replace(/\\/$/, '');\n    }\n\n    // Unable to map\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiMapper.html":{"url":"classes/ApiMapper.html","title":"class - ApiMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiMapper\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-mapper.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        mapApiToView\n                                    \n                                    \n                                            \n                                        mapViewToApi\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        mapApiToView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapApiToView(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-mapper.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                        Maps resource URL to view path. Can be overridden during configuration.\n            By default it maps API url to view paths one to one.\n            Counterpart to {@link #mapViewToApi}.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              Resource url. It must be inside API namespace. If it is not, null is returned.\n            If the url equals to api prefix, empty string is returned.\n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                View path.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        mapViewToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapViewToApi(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-mapper.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        Maps view path to resource URL. Can be overridden during configuration.\n            By default it maps path to API one to one.\n            Counterpart to {@link #mapApiToView}.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              View path, as in $location.path().\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Resource url, for e.g. HTTP requests.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export abstract class ApiMapper {\n\n  /**\n   * Maps view path to resource URL. Can be overridden during configuration.\n   * By default it maps path to API one to one.\n   *\n   * Counterpart to {@link #mapApiToView}.\n   *\n   * @param {String} path View path, as in `$location.path()`.\n   * @returns {String} Resource url, for e.g. HTTP requests.\n   */\n  abstract mapViewToApi(path: string): string;\n\n  /**\n   * Maps resource URL to view path. Can be overridden during configuration.\n   * By default it maps API url to view paths one to one.\n   *\n   * Counterpart to {@link #mapViewToApi}.\n   *\n   * @param {String} url Resource url. It must be inside API namespace. If it is not, `null` is returned.\n   *                     If the url equals to api prefix, empty string is returned.\n   * @returns {String} View path.\n   */\n  abstract mapApiToView(url: string): string | null;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiUrl.html":{"url":"classes/ApiUrl.html","title":"class - ApiUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiUrl\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-url.ts\n        \n\n            \n                Description\n            \n            \n                Component for API URLs normalization.\nTakes in account base-href, location etc.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        normalize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        normalize\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    normalize(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-url.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        Normalizes the URL, using current base-href.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URL to normalize. Might be relative, host-relative or protocol-relative.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Normalized absolute URL.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class ApiUrl {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param {string} url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns {string} Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseApiUrl extends ApiUrl {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns {string} Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns {LocationInfo} Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserApiUrl extends BaseApiUrl {\n\n  constructor(private platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private document: Document) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseApiUrl.html":{"url":"classes/BaseApiUrl.html","title":"class - BaseApiUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseApiUrl\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-url.ts\n        \n\n            \n                Description\n            \n            \n                Generic implementation of ApiUrl.\nDefault is BrowserApiUrl.\n\n            \n\n            \n                Extends\n            \n            \n                    ApiUrl\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        getBaseHref\n                                    \n                                    \n                                            \n                                        getLocation\n                                    \n                                    \n                                        normalize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-url.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        Returns base href.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Context path of the application. Protocol and host excluded.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-url.ts:63\n                                        \n                                    \n            \n                            \n                                \n                                        Returns current location. It is used to resolve baseHref.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                            \n                                                Context path of the application.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        normalize\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            normalize(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-url.ts:28\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class ApiUrl {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param {string} url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns {string} Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseApiUrl extends ApiUrl {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns {string} Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns {LocationInfo} Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserApiUrl extends BaseApiUrl {\n\n  constructor(private platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private document: Document) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceDataContext.html":{"url":"classes/ResourceDataContext.html","title":"class - ResourceDataContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceDataContext\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-data.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Public\n                                        $implicit\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor($implicit: ViewData)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:13\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              $implicit\n                                                              \n                                                                        ViewData\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        $implicit\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    $implicit:     ViewData\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ViewData\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Directive, EventEmitter, Input, OnInit, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport 'rxjs/add/operator/switchMap';\nimport { Observable } from 'rxjs/Observable';\nimport { ViewDataLoader } from '../view-data-loader';\nimport { ViewData } from '../view-data';\nimport { NavigationHandler } from '../navigation-handler';\nimport { ResourceViewRegistry } from '../resource-view-registry';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_ERROR, MEDIA_TYPE_ROUTER_LOADING } from '../system-media-types';\nimport { Subject } from 'rxjs/Subject';\nimport { NO_HEADERS } from '../read-only-headers';\n\n\nexport class ResourceDataContext {\n  constructor(public $implicit: ViewData) {\n  }\n}\n\n\n@Directive({\n  selector: '[resourceData][resourceDataOf]'\n})\nexport class ResourceDataDirective implements OnInit, NavigationHandler {\n\n  @Output()\n  readonly urlChange = new EventEmitter();\n\n  private urlValue = '';\n  private urlSubject = new Subject();\n  private context: ResourceDataContext;\n\n  constructor(protected viewContainer: ViewContainerRef,\n              protected templateRef: TemplateRef,\n              protected loader: ViewDataLoader,\n              protected registry: ResourceViewRegistry) {\n    this.context = new ResourceDataContext(this.mockView('', MEDIA_TYPE_ROUTER_LOADING, 204, 'OK'));\n\n    // Handle url changes\n    this.urlSubject\n      .switchMap(url => this.load(url))\n      .subscribe(data => {\n        // Update data\n        this.context.$implicit = data;\n\n        // This propagates back the actual url when server-side redirect was performed\n        if (data.url !== this.urlValue) {\n          this.urlValue = data.url;\n          this.urlChange.emit(this.urlValue);\n        }\n      });\n  }\n\n  // Unused but needed when used in decomposed notation directly on \n  // noinspection JSUnusedLocalSymbols\n  @Input()\n  set resourceData(value: any) {\n  }\n\n  @Input()\n  set resourceDataOf(value: string) {\n    this.url = value;\n  }\n\n  get url(): string {\n    return this.urlValue;\n  }\n\n  set url(value: string) {\n    // This is needed check, since during runtime binding, we cannot be sure value isn't null\n    if (!value) {\n      value = '';\n    }\n\n    // Emit event if value has actually changed\n    if (this.urlValue !== value) {\n      this.urlValue = value;\n      this.urlSubject.next(value);\n    }\n  }\n\n  load(url: string): Observable> {\n    if (url) {\n      return this.loader\n        .fetch(url, this)\n        .catch(err => {\n          // Log it, this should not happen normally\n          console.error(err);\n          // Return error view\n          return Observable.of(this.mockView(url, MEDIA_TYPE_ROUTER_ERROR, 999, 'Routing Error', err));\n        });\n    } else {\n      return Observable.of(this.mockView('', MEDIA_TYPE_ROUTER_EMPTY, 204, 'OK'));\n    }\n  }\n\n  ngOnInit() {\n    this.viewContainer.createEmbeddedView(this.templateRef, this.context);\n  }\n\n  go(url: string): void {\n    // Update property if changed\n    if (this.urlValue !== url) {\n      this.urlValue = url;\n      this.urlChange.emit(url);\n    }\n\n    // Load data (always)\n    this.urlSubject.next(this.urlValue);\n  }\n\n  private mockView(url: string, type: string, status: number, statusText: string, body?: any): ViewData {\n    const config = this.registry.match(type, status);\n    return new ViewData(this, config, type, url, status, statusText, NO_HEADERS, body);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortedArray.html":{"url":"classes/SortedArray.html","title":"class - SortedArray","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortedArray\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/sorted-array.ts\n        \n\n            \n                Description\n            \n            \n                Simple array wrapper that sorts on insert, and maintains insert-order for equal elements.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        array\n                                    \n                                    \n                                            Public\n                                        comparer\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        push\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(comparer: Comparer)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              comparer\n                                                              \n                                                                        Comparer\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        push\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            push(value: T)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        Inserts the value while maintaining order defined by the comparer.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              value\n                                                              \n                                                                      T\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        array\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    array:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : []\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        comparer\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    comparer:     Comparer\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Comparer\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export type Comparer = (a: T, b: T) => number;\n\n/**\n * Simple array wrapper that sorts on insert, and maintains insert-order for equal elements.\n */\nexport class SortedArray {\n  array: Array = [];\n\n  constructor(public comparer: Comparer) {\n  }\n\n  /**\n   * Inserts the value while maintaining order defined by the comparer.\n   *\n   * @param value\n   */\n  push(value: T) {\n    const i = insertLocation(value, this.array, this.comparer);\n    this.array.splice(i + 1, 0, value);\n  }\n}\n\n/**\n * Compare values using (a: T, b: T) {\n  if (a === b) {\n    return 0;\n  }\n  return a (element: T, array: T[], comparer: Comparer, start: number, end: number): number {\n  if (array.length === 0) {\n    return -1;\n  }\n\n  const pivot = Math.floor((start + end) / 2);\n  const c = comparer(element, array[pivot]);\n\n  if (end - start (element: T, array: T[], comparer: Comparer): number {\n  // Find possible insert location\n  let i = locationFor(element, array, comparer, 0, array.length);\n\n  // We need to do append and maintain insert order\n  if (i >= 0) {\n    while (i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewData.html":{"url":"classes/ViewData.html","title":"class - ViewData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewData\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-data.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        body\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        config\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        headers\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        navigation\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        status\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        statusText\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        type\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        url\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(navigation: NavigationHandler, config: ViewDef, type: string, url: string, status: number, statusText: string | null, headers: ReadOnlyHeaders, body?: T)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              navigation\n                                                              \n                                                                        NavigationHandler\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              config\n                                                              \n                                                                        ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              type\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              url\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              statusText\n                                                              \n                                                                        string | null\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                                        ReadOnlyHeaders\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              body\n                                                              \n                                                                        T\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        body\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    body:     T\n            \n                                \n                            \n                                \n                                    \n                                        Type :     T\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        config\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    config:     ViewDef\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ViewDef\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        headers\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    headers:     ReadOnlyHeaders\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ReadOnlyHeaders\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        navigation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    navigation:     NavigationHandler\n            \n                                \n                            \n                                \n                                    \n                                        Type :     NavigationHandler\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        status\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    status:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        statusText\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    statusText:     string | null\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string | null\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        type\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    type:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        url\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    url:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { ViewDef } from './view-definition';\nimport { NavigationHandler } from './navigation-handler';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n\nexport class ViewData {\n\n  constructor(public readonly navigation: NavigationHandler,\n              public readonly config: ViewDef,\n              public readonly type: string,\n              public readonly url: string,\n              public readonly status: number,\n              public readonly statusText: string | null,\n              public readonly headers: ReadOnlyHeaders,\n              public readonly body?: T) {\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewDataLoader.html":{"url":"classes/ViewDataLoader.html","title":"class - ViewDataLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewDataLoader\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-data-loader.ts\n        \n\n            \n                Description\n            \n            \n                Component that retrieves the data for given URL.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        fetch\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        fetch\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    fetch(uri: string, navigation: NavigationHandler)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-data-loader.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                        Retrieves the data.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              uri\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URI the data should be retrieved from. Usually it is URL for HTTP request.\n            \n                                                            \n                                                            \n                                                              navigation\n                                                              \n                                                                      NavigationHandler\n                                                              \n                                                              \n                                                              \n                                                              NavigationHandler instance, to be passed to ViewData constructor.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                Retrieved ViewData instance.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport { ResourceViewRegistry } from './resource-view-registry';\nimport { ViewTypeStrategy } from './view-type-strategy';\nimport { ViewData } from './view-data';\nimport { ViewDef } from './view-definition';\nimport { NavigationHandler } from './navigation-handler';\nimport { stringToJSON } from './utils/http-utils';\n\n\n/**\n * Component that retrieves the data for given URL.\n */\nexport abstract class ViewDataLoader {\n\n  /**\n   * Retrieves the data.\n   *\n   * @param {string} uri URI the data should be retrieved from. Usually it is URL for HTTP request.\n   * @param {NavigationHandler} navigation NavigationHandler instance, to be passed to ViewData constructor.\n   * @returns {Observable>} Retrieved ViewData instance.\n   */\n  abstract fetch(uri: string, navigation: NavigationHandler): Observable>;\n\n}\n\n/**\n * Default ViewDataLoader implementation, which uses HttpClient as backend.\n */\n@Injectable()\nexport class HttpClientViewDataLoader extends ViewDataLoader {\n\n  constructor(public strategy: ViewTypeStrategy,\n              public registry: ResourceViewRegistry,\n              public http: HttpClient) {\n    super();\n  }\n\n  fetch(uri: string, navigation: NavigationHandler): Observable> {\n    // Send request\n    return this\n      .get(uri)\n      // Swallow errors, treat them as normal response\n      .catch(response => Observable.of(response))\n      // This might throw exception, e.g. when response is malformed - it produces failed Observable then\n      .map(response => this.resolve(uri, response, navigation));\n  }\n\n  protected get(url: string): Observable> {\n    // Note: We need to set responseType to text, because if set to json,\n    // Angular will return error when response is not a valid JSON - We will rather parse it here.\n    // Its not nice, since we are duplicating bit of HttpClient, but I'm not aware of other way\n    return this.http.get(url, {observe: 'response', responseType: 'text'});\n  }\n\n  protected resolve(requestUrl: string, response: HttpResponse, navigation: NavigationHandler): ViewData {\n    // Resolve type, if possible\n    const type = this.strategy.extractType(response) || '';\n    // Find view\n    const config = this.registry.match(type, response.status);\n    // Parse body\n    const body = this.parse(response, config);\n\n    // Construct and return ViewData\n    return new ViewData(\n      navigation,\n      config,\n      type,\n      response.url || requestUrl,\n      response.status,\n      response.statusText,\n      response.headers,\n      body,\n    );\n  }\n\n  // noinspection JSMethodCanBeStatic\n  protected parse(response: HttpResponse, config: ViewDef): any | null {\n    // Don't parse empty body\n    if (!response.body) {\n      return null;\n    }\n\n    const responseType = config.responseType || 'json';\n    switch (responseType) {\n      case 'json':\n        // Parse JSON - this assumes body is a string\n        return stringToJSON(response.body);\n\n      case 'text':\n        // Return as-is - this assumes body is already string\n        return response.body;\n\n      default:\n        throw new Error(`Unsupported responseType: ${responseType}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewTypeStrategy.html":{"url":"classes/ViewTypeStrategy.html","title":"class - ViewTypeStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewTypeStrategy\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        extractType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        extractType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    extractType(response: ViewTypeResponse)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                        Extracts type from the server response, understandable by application.\n            Default implementation uses Content-Type header.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                                      ViewTypeResponse\n                                                              \n                                                              \n                                                              \n                                                              Actual response.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                Found response type. Null if not found.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param {ViewTypeResponse} response Actual response.\n   * @returns {string} Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewsByStatus.html":{"url":"classes/ViewsByStatus.html","title":"class - ViewsByStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewsByStatus\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-view-registry.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        quality\n                                    \n                                    \n                                            Readonly\n                                        status\n                                    \n                                    \n                                            Readonly\n                                        statusExp\n                                    \n                                    \n                                            Readonly\n                                        types\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(status: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              status\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        quality\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    quality:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        status\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    status:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        statusExp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    statusExp:     RegExp\n            \n                                \n                            \n                                \n                                    \n                                        Type :     RegExp\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        types\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    types:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : new SortedArray(qualityComparator)\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ViewDef } from './view-definition';\nimport { SortedArray } from './utils/sorted-array';\nimport { wildcardToRegex } from './utils/wildcard-to-regex';\nimport { simpleTypeQualityEvaluator, statusQualityEvaluator, TypeQualityEvaluator } from './quality-evaluator';\n\n\nexport const RESOURCE_VIEWS = new InjectionToken('RESOURCE_VIEWS');\nexport const TYPE_QUALITY_EVALUATOR = new InjectionToken('TYPE_QUALITY_EVALUATOR');\n\n\n// Private classes\nclass ViewsByStatus {\n  readonly status: string;\n  readonly statusExp: RegExp;\n  readonly quality: number;\n  readonly types = new SortedArray(qualityComparator);\n\n  constructor(status: string) {\n    this.status = status;\n    this.statusExp = wildcardToRegex(status);\n    this.quality = statusQualityEvaluator(status);\n  }\n}\n\ninterface ParsedViewDef {\n  readonly config: ViewDef;\n  readonly quality: number;\n  readonly typeExp: RegExp;\n}\n\n\n// Public class\n@Injectable()\nexport class ResourceViewRegistry {\n\n  private readonly typeQualityEvaluator: TypeQualityEvaluator;\n  private readonly viewsByStatus = new SortedArray(qualityComparator);\n  private _length = 0;\n\n  constructor(@Inject(RESOURCE_VIEWS) @Optional() views?: any,\n              @Inject(TYPE_QUALITY_EVALUATOR) @Optional() typeQualityEvaluator?: TypeQualityEvaluator) {\n    // Initialize quality evaluator - must be before addViews\n    this.typeQualityEvaluator = typeQualityEvaluator || simpleTypeQualityEvaluator;\n\n    // Ignore if no view is defined - this is supported path for later registration\n    if (views) {\n      // Register views\n      this.addViews(views);\n    }\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  match(type: string, status: number): ViewDef {\n    // Convert number to padded string\n    const statusStr = normalizeStatus(status);\n\n    // Find all matching groups by status\n    for (const group of this.viewsByStatus.array) {\n      // Match\n      if (!group.statusExp.test(statusStr)) {\n        continue;\n      }\n\n      // Find view in the group\n      const view = group.types.array.find(v => v.typeExp.test(type));\n      if (view) {\n        return view.config;\n      }\n    }\n\n    // Not found\n    throw new Error(`No view definition found for type ${type} and status ${status} - please register default view`);\n  }\n\n  addViews(config: ViewDef | ViewDef[]) {\n    // Flatten array\n    if (Array.isArray(config)) {\n      // Recursive call\n      config.forEach(this.addViews, this);\n    } else if (config) {\n      // Single view\n      this.addView(config);\n    }\n  }\n\n  protected addView(config: ViewDef) {\n    // Sanity check\n    this.validateViewDefinition(config);\n\n    // All permutations of status and type\n    toArray(config.status || '2??').forEach(status => {\n      // Get status group\n      const normalizedStatus = normalizeStatusExpression('' + status);\n      const group = this.getViewsByStatus(normalizedStatus);\n\n      // Types\n      toArray(config.type).forEach(type => {\n        this.addSingleView(config, group, type);\n      });\n    });\n  }\n\n  //noinspection JSMethodCanBeStatic\n  protected validateViewDefinition(config: ViewDef) {\n    // Component\n    if (!config.component || typeof config.component !== 'function') {\n      throw newValidationError(config, 'component is mandatory and must be a type');\n    }\n\n    // Type\n    validateType(config);\n\n    // Status\n    validateStatus(config);\n\n    // Quality\n    if (config.quality && typeof config.quality !== 'number') {\n      throw newValidationError(config, 'quality must be a number');\n    }\n  }\n\n  private addSingleView(config: ViewDef, group: ViewsByStatus, type: string) {\n    // Copy of definition, with specific status and type only\n    // See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest\n    config = {\n      ...config, ...{\n        status: group.status,\n        type: type\n      }\n    };\n\n    // Evaluate quality if needed\n    const quality = typeof config.quality === 'number' ? config.quality : this.typeQualityEvaluator(type);\n\n    // Add to the group\n    group.types.push({\n      config: Object.freeze(config),\n      typeExp: wildcardToRegex(type),\n      quality: quality\n    });\n\n    // Increment count\n    this._length++;\n  }\n\n  private getViewsByStatus(status: string) {\n    let byStatus = this.viewsByStatus.array.find(s => s.status === status);\n\n    if (!byStatus) {\n      byStatus = new ViewsByStatus(status);\n      this.viewsByStatus.push(byStatus);\n    }\n\n    return byStatus;\n  }\n}\n\n\n// Validation functions\nfunction validateType(config: ViewDef) {\n  if (Array.isArray(config.type)) {\n    if (config.type.find(t => typeof t !== 'string')) {\n      throw newValidationError(config, 'type array must consist only of strings');\n    }\n  } else if (typeof config.type !== 'string') {\n    throw newValidationError(config, 'type must be a string or array of strings');\n  }\n}\n\nfunction validateStatus(config: ViewDef) {\n  if (config.status) {\n    if (Array.isArray(config.status)) {\n      // Validate array of values\n      config.status.forEach(status => validateStatusExpression(config, '' + status));\n    } else if (typeof config.status === 'string' || typeof config.status === 'number') {\n      // Validate single value\n      validateStatusExpression(config, '' + config.status);\n    } else {\n      // Invalid\n      throw newValidationError(config, 'status must be either string, number or array of them');\n    }\n  }\n}\n\nfunction validateStatusExpression(config: ViewDef, status: string) {\n  if (status.length  3) {\n    throw newValidationError(config, 'status pattern must be between 1 and 3 characters long');\n  }\n\n  if (/[^x\\d?*]/.test(status)) {\n    throw newValidationError(config, 'status pattern contains invalid characters');\n  }\n\n  if (!/^\\d*[?x]*\\**$/.test(status)) {\n    throw newValidationError(config, 'status pattern can contain wildcards only at the end of the pattern');\n  }\n}\n\nfunction newValidationError(config: any, text: string): Error {\n  return new Error('Invalid view configuration, ' + text + ':\\n' + JSON.stringify(config));\n}\n\n// Utils\nexport function normalizeStatusExpression(pattern: string): string {\n  // Handle * wildcard\n  if (pattern.endsWith('*')) {\n    if (pattern.length > 3) {\n      throw new Error('Wildcard * is not supported for status expressions longer then 3 characters: ' + pattern);\n    }\n\n    return (pattern.replace(/\\*/g, '') + '???').substr(0, 3);\n  }\n\n  // Replace x to ?\n  pattern = pattern.replace(/x/g, '?');\n\n  // Pad left with zeroes\n  return pattern.length (value: T | T[]): Array {\n  return Array.isArray(value) ? value as T[] : [value] as T[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-definition.ts\n        \n\n\n\n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [name: string]:    any\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:4\n                                        \n                                    \n                        \n                    \n            \n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\n\nexport interface Data {\n  readonly [name: string]: any;\n}\n\nexport type StatusType = number | string;\n\n/**\n * Defines view for given type.\n */\nexport interface ViewDef {\n\n  /**\n   * Component that is viewed when this view definition is matched against response.\n   * Mandatory. Don't forget to add it to modules `declarations`.\n   */\n  readonly component: Type;\n\n  /**\n   * Media type of the response.\n   * It supports wildcard characters '?' (any single character), '*' (zero or more characters).\n   *\n   * Unless status is set, this matches only 2xx (successful) status codes (see `status` property).\n   *\n   * To match any type (that is, fallback view), set the type to '*'.\n   */\n  readonly type: string | string[];\n\n  /**\n   * HTTP response status code, which is 3-digit integer.\n   * It supports wildcard characters '?' (any single character) at the end of the string - that is,\n   * expression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\n   * Wildcard character '*' is also supported, but has different meaning than usual - expression is still\n   * expanded to 3 characters. Which means, '2*' == '2??', and '*' == '???'.\n   * It might be array of values, handling multiple disjunct values.\n   *\n   * Default is '2xx', that is >=200 and \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationInfo.html":{"url":"interfaces/LocationInfo.html","title":"interface - LocationInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocationInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/parse-url.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        pathname\n                                \n                                \n                                        protocol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathname\n                                    \n                                \n                                \n                                    \n                                        pathname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        const URL_PATTERN = /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/;\n\nexport interface LocationInfo {\n  readonly protocol?: string;\n  readonly host?: string;\n  readonly pathname?: string;\n}\n\nexport interface UrlInfo extends LocationInfo {\n  readonly pathrelative?: string;\n}\n\n/**\n * Rough URL parser.\n *\n * @param {string} url URL to be parsed. Must be well-formed.\n * @returns {LocationInfo | null} Parsed object or null for relative\n */\nexport function parseUrl(url: string): UrlInfo {\n  const match = url.match(URL_PATTERN);\n\n  if (match) {\n    // URL parsed\n    const info: {\n      protocol?: string;\n      host?: string;\n      pathname?: string;\n    } = {};\n\n    if (match[1] !== undefined) {\n      info.protocol = match[1];\n    }\n    if (match[2] !== undefined) {\n      info.host = match[2];\n    }\n    if (match[3] !== undefined) {\n      info.pathname = match[3];\n    }\n\n    return info;\n  } else if (url [0] === '/') {\n    // Absolute url\n    return {\n      pathname: url\n    };\n  } else {\n    // Relative\n    return {\n      pathrelative: url\n    };\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationHandler.html":{"url":"interfaces/NavigationHandler.html","title":"interface - NavigationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavigationHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/navigation-handler.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    go\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        go\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            go(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/navigation-handler.ts:4\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/navigation-handler.ts:2\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface NavigationHandler {\n  url: string;\n\n  go(url: string): void;\n}\n\nexport function supportsNavigation(obj: any): obj is NavigationHandler {\n  return obj && typeof obj.go === 'function';\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedViewDef.html":{"url":"interfaces/ParsedViewDef.html","title":"interface - ParsedViewDef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParsedViewDef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-view-registry.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        quality\n                                \n                                \n                                        typeExp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     ViewDef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewDef\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:27\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                    \n                                \n                                \n                                    \n                                        quality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:28\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeExp\n                                    \n                                \n                                \n                                    \n                                        typeExp:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:29\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ViewDef } from './view-definition';\nimport { SortedArray } from './utils/sorted-array';\nimport { wildcardToRegex } from './utils/wildcard-to-regex';\nimport { simpleTypeQualityEvaluator, statusQualityEvaluator, TypeQualityEvaluator } from './quality-evaluator';\n\n\nexport const RESOURCE_VIEWS = new InjectionToken('RESOURCE_VIEWS');\nexport const TYPE_QUALITY_EVALUATOR = new InjectionToken('TYPE_QUALITY_EVALUATOR');\n\n\n// Private classes\nclass ViewsByStatus {\n  readonly status: string;\n  readonly statusExp: RegExp;\n  readonly quality: number;\n  readonly types = new SortedArray(qualityComparator);\n\n  constructor(status: string) {\n    this.status = status;\n    this.statusExp = wildcardToRegex(status);\n    this.quality = statusQualityEvaluator(status);\n  }\n}\n\ninterface ParsedViewDef {\n  readonly config: ViewDef;\n  readonly quality: number;\n  readonly typeExp: RegExp;\n}\n\n\n// Public class\n@Injectable()\nexport class ResourceViewRegistry {\n\n  private readonly typeQualityEvaluator: TypeQualityEvaluator;\n  private readonly viewsByStatus = new SortedArray(qualityComparator);\n  private _length = 0;\n\n  constructor(@Inject(RESOURCE_VIEWS) @Optional() views?: any,\n              @Inject(TYPE_QUALITY_EVALUATOR) @Optional() typeQualityEvaluator?: TypeQualityEvaluator) {\n    // Initialize quality evaluator - must be before addViews\n    this.typeQualityEvaluator = typeQualityEvaluator || simpleTypeQualityEvaluator;\n\n    // Ignore if no view is defined - this is supported path for later registration\n    if (views) {\n      // Register views\n      this.addViews(views);\n    }\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  match(type: string, status: number): ViewDef {\n    // Convert number to padded string\n    const statusStr = normalizeStatus(status);\n\n    // Find all matching groups by status\n    for (const group of this.viewsByStatus.array) {\n      // Match\n      if (!group.statusExp.test(statusStr)) {\n        continue;\n      }\n\n      // Find view in the group\n      const view = group.types.array.find(v => v.typeExp.test(type));\n      if (view) {\n        return view.config;\n      }\n    }\n\n    // Not found\n    throw new Error(`No view definition found for type ${type} and status ${status} - please register default view`);\n  }\n\n  addViews(config: ViewDef | ViewDef[]) {\n    // Flatten array\n    if (Array.isArray(config)) {\n      // Recursive call\n      config.forEach(this.addViews, this);\n    } else if (config) {\n      // Single view\n      this.addView(config);\n    }\n  }\n\n  protected addView(config: ViewDef) {\n    // Sanity check\n    this.validateViewDefinition(config);\n\n    // All permutations of status and type\n    toArray(config.status || '2??').forEach(status => {\n      // Get status group\n      const normalizedStatus = normalizeStatusExpression('' + status);\n      const group = this.getViewsByStatus(normalizedStatus);\n\n      // Types\n      toArray(config.type).forEach(type => {\n        this.addSingleView(config, group, type);\n      });\n    });\n  }\n\n  //noinspection JSMethodCanBeStatic\n  protected validateViewDefinition(config: ViewDef) {\n    // Component\n    if (!config.component || typeof config.component !== 'function') {\n      throw newValidationError(config, 'component is mandatory and must be a type');\n    }\n\n    // Type\n    validateType(config);\n\n    // Status\n    validateStatus(config);\n\n    // Quality\n    if (config.quality && typeof config.quality !== 'number') {\n      throw newValidationError(config, 'quality must be a number');\n    }\n  }\n\n  private addSingleView(config: ViewDef, group: ViewsByStatus, type: string) {\n    // Copy of definition, with specific status and type only\n    // See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest\n    config = {\n      ...config, ...{\n        status: group.status,\n        type: type\n      }\n    };\n\n    // Evaluate quality if needed\n    const quality = typeof config.quality === 'number' ? config.quality : this.typeQualityEvaluator(type);\n\n    // Add to the group\n    group.types.push({\n      config: Object.freeze(config),\n      typeExp: wildcardToRegex(type),\n      quality: quality\n    });\n\n    // Increment count\n    this._length++;\n  }\n\n  private getViewsByStatus(status: string) {\n    let byStatus = this.viewsByStatus.array.find(s => s.status === status);\n\n    if (!byStatus) {\n      byStatus = new ViewsByStatus(status);\n      this.viewsByStatus.push(byStatus);\n    }\n\n    return byStatus;\n  }\n}\n\n\n// Validation functions\nfunction validateType(config: ViewDef) {\n  if (Array.isArray(config.type)) {\n    if (config.type.find(t => typeof t !== 'string')) {\n      throw newValidationError(config, 'type array must consist only of strings');\n    }\n  } else if (typeof config.type !== 'string') {\n    throw newValidationError(config, 'type must be a string or array of strings');\n  }\n}\n\nfunction validateStatus(config: ViewDef) {\n  if (config.status) {\n    if (Array.isArray(config.status)) {\n      // Validate array of values\n      config.status.forEach(status => validateStatusExpression(config, '' + status));\n    } else if (typeof config.status === 'string' || typeof config.status === 'number') {\n      // Validate single value\n      validateStatusExpression(config, '' + config.status);\n    } else {\n      // Invalid\n      throw newValidationError(config, 'status must be either string, number or array of them');\n    }\n  }\n}\n\nfunction validateStatusExpression(config: ViewDef, status: string) {\n  if (status.length  3) {\n    throw newValidationError(config, 'status pattern must be between 1 and 3 characters long');\n  }\n\n  if (/[^x\\d?*]/.test(status)) {\n    throw newValidationError(config, 'status pattern contains invalid characters');\n  }\n\n  if (!/^\\d*[?x]*\\**$/.test(status)) {\n    throw newValidationError(config, 'status pattern can contain wildcards only at the end of the pattern');\n  }\n}\n\nfunction newValidationError(config: any, text: string): Error {\n  return new Error('Invalid view configuration, ' + text + ':\\n' + JSON.stringify(config));\n}\n\n// Utils\nexport function normalizeStatusExpression(pattern: string): string {\n  // Handle * wildcard\n  if (pattern.endsWith('*')) {\n    if (pattern.length > 3) {\n      throw new Error('Wildcard * is not supported for status expressions longer then 3 characters: ' + pattern);\n    }\n\n    return (pattern.replace(/\\*/g, '') + '???').substr(0, 3);\n  }\n\n  // Replace x to ?\n  pattern = pattern.replace(/x/g, '?');\n\n  // Pad left with zeroes\n  return pattern.length (value: T | T[]): Array {\n  return Array.isArray(value) ? value as T[] : [value] as T[];\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyHeaders.html":{"url":"interfaces/ReadOnlyHeaders.html","title":"interface - ReadOnlyHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyHeaders\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/read-only-headers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                                \n                                    getAll\n                                \n                                \n                                    has\n                                \n                                \n                                    keys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        get\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            get(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:10\n                                        \n                                    \n            \n                            \n                                \n                                        Returns first header that matches given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAll\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAll(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:20\n                                        \n                                    \n            \n                            \n                                \n                                        Returns list of header values for a given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     [] | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        has\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            has(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:5\n                                        \n                                    \n            \n                            \n                                \n                                        Checks for existence of header by given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        keys\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            keys()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the names of the headers\n            \n            \n                                        \n                                            Returns :     string[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ReadOnlyHeaders {\n  /**\n   * Checks for existence of header by given name.\n   */\n  has(name: string): boolean;\n\n  /**\n   * Returns first header that matches given name.\n   */\n  get(name: string): string | null;\n\n  /**\n   * Returns the names of the headers\n   */\n  keys(): string[];\n\n  /**\n   * Returns list of header values for a given name.\n   */\n  getAll(name: string): string[] | null;\n}\n\n/**\n * Dummy implementation of ReadOnlyHeaders that never returns anything.\n *\n * @type ReadOnlyHeaders\n */\nexport const NO_HEADERS: ReadOnlyHeaders = {\n  has(name: string): boolean {\n    return false;\n  },\n\n  get(name: string): string | null {\n    return null;\n  },\n\n  keys(): string[] {\n    return [];\n  },\n\n  getAll(name: string): string[] | null {\n    return null;\n  }\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceRouterOptions.html":{"url":"interfaces/ResourceRouterOptions.html","title":"interface - ResourceRouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceRouterOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-router-module.ts\n        \n\n            \n                Description\n            \n            \n                Set of global configuration options for ResourceRouterModule.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        prefix\n                                \n                                \n                                        useHash\n                                \n                                \n                                        viewDataLoader\n                                \n                                \n                                        viewTypeStrategy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:40\n                                        \n                                    \n\n                            \n                                \n                                    Prefix for the URL. Can be base-relative, host-relative or absolute.\nAlways should however end with slash ('/').\nWhen using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\nThat is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\nAnother way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useHash\n                                    \n                                \n                                \n                                    \n                                        useHash:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:47\n                                        \n                                    \n\n                            \n                                \n                                    Enables hash-bang navigation mode. Default is HTML5 mode.\nRead {@link #prefix} details when setting to true.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewDataLoader\n                                    \n                                \n                                \n                                    \n                                        viewDataLoader:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:59\n                                        \n                                    \n\n                            \n                                \n                                    Changes implementation of ViewDataLoader.\nDefault is HttpClientViewDataLoader.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewTypeStrategy\n                                    \n                                \n                                \n                                    \n                                        viewTypeStrategy:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:53\n                                        \n                                    \n\n                            \n                                \n                                    Changes implementation of ViewTypeStrategy.\nDefault is HeaderViewTypeStrategy using Content-Type header.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  APP_BASE_HREF, CommonModule, HashLocationStrategy, Location, LocationStrategy, PathLocationStrategy,\n  PlatformLocation\n} from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional, Type } from '@angular/core';\nimport { ApiMapper } from './api-mapper';\nimport { ApiLocation } from './api-location';\nimport { HeaderViewTypeStrategy, ViewTypeStrategy } from './view-type-strategy';\nimport { RESOURCE_VIEWS, ResourceViewRegistry } from './resource-view-registry';\nimport { ViewDef } from './view-definition';\nimport { ResourceLinkDirective } from './directives/resource-link';\nimport { ResourceLinkWithHrefDirective } from './directives/resource-link-with-href';\nimport { ResourceOutletComponent } from './directives/resource-outlet';\nimport { HttpClientViewDataLoader, ViewDataLoader } from './view-data-loader';\nimport { ResourceDataDirective } from './directives/resource-data';\nimport { ResourceViewDirective } from './directives/resource-view';\nimport { DefaultEmptyComponent } from './components/default-empty.component';\nimport { DefaultErrorComponent } from './components/default-error.component';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING } from './system-media-types';\nimport { ApiUrl, BrowserApiUrl } from './api-url';\nimport { APP_API_PREFIX, SingleApiMapper } from './single-api-mapper';\n\n\nexport const RESOURCE_ROUTER_CONFIGURATION = new InjectionToken('RESOURCE_ROUTER_CONFIGURATION');\n\n\n/**\n * Set of global configuration options for {@link ResourceRouterModule}.\n */\nexport interface ResourceRouterOptions {\n  /**\n   * Prefix for the URL. Can be base-relative, host-relative or absolute.\n   * Always should however end with slash ('/').\n   *\n   * When using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\n   * That is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\n   *\n   * Another way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n   */\n  readonly prefix: string;\n\n  /**\n   * Enables hash-bang navigation mode. Default is HTML5 mode.\n   *\n   * Read {@link #prefix} details when setting to true.\n   */\n  readonly useHash?: boolean;\n\n  /**\n   * Changes implementation of {@link ViewTypeStrategy}.\n   * Default is {@link HeaderViewTypeStrategy} using `Content-Type` header.\n   */\n  readonly viewTypeStrategy?: Type;\n\n  /**\n   * Changes implementation of {@link ViewDataLoader}.\n   * Default is {@link HttpClientViewDataLoader}.\n   */\n  readonly viewDataLoader?: Type;\n}\n\n\n@NgModule({\n  declarations: [\n    ResourceOutletComponent,\n    ResourceDataDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective,\n    DefaultEmptyComponent,\n    DefaultErrorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ResourceOutletComponent,\n    ResourceDataDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective\n  ]\n})\nexport class ResourceRouterModule {\n\n  static configure(options: ResourceRouterOptions): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], RESOURCE_ROUTER_CONFIGURATION\n          ]\n        },\n        Location,\n        {\n          provide: ApiUrl,\n          useClass: BrowserApiUrl\n        },\n        {\n          provide: ApiMapper,\n          useClass: SingleApiMapper\n        },\n        ApiLocation,\n        ResourceViewRegistry,\n        {\n          provide: APP_API_PREFIX,\n          useValue: options.prefix\n        },\n        {\n          provide: RESOURCE_ROUTER_CONFIGURATION,\n          useValue: options\n        },\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: [emptyView(), errorView()],\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: [DefaultErrorComponent, DefaultEmptyComponent],\n          multi: true\n        },\n        {\n          provide: ViewTypeStrategy,\n          useClass: options.viewTypeStrategy || HeaderViewTypeStrategy\n        },\n        {\n          provide: ViewDataLoader,\n          useClass: options.viewDataLoader || HttpClientViewDataLoader\n        }\n      ]\n    };\n  }\n\n  static forTypes(views: ViewDef[]): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: views,\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: views,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function provideLocationStrategy(platformLocationStrategy: PlatformLocation, baseHref: string, options: ResourceRouterOptions) {\n  return options.useHash\n    ? new HashLocationStrategy(platformLocationStrategy, baseHref)\n    : new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function emptyView(): ViewDef {\n  return {\n    component: DefaultEmptyComponent,\n    status: 204,\n    type: [MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING],\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function errorView(): ViewDef {\n  return {\n    component: DefaultErrorComponent,\n    status: '*',\n    type: '*',\n    responseType: 'text',\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlInfo.html":{"url":"interfaces/UrlInfo.html","title":"interface - UrlInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UrlInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/parse-url.ts\n        \n\n\n            \n                Extends\n            \n            \n                    LocationInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pathrelative\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pathrelative\n                                    \n                                \n                                \n                                    \n                                        pathrelative:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        const URL_PATTERN = /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/;\n\nexport interface LocationInfo {\n  readonly protocol?: string;\n  readonly host?: string;\n  readonly pathname?: string;\n}\n\nexport interface UrlInfo extends LocationInfo {\n  readonly pathrelative?: string;\n}\n\n/**\n * Rough URL parser.\n *\n * @param {string} url URL to be parsed. Must be well-formed.\n * @returns {LocationInfo | null} Parsed object or null for relative\n */\nexport function parseUrl(url: string): UrlInfo {\n  const match = url.match(URL_PATTERN);\n\n  if (match) {\n    // URL parsed\n    const info: {\n      protocol?: string;\n      host?: string;\n      pathname?: string;\n    } = {};\n\n    if (match[1] !== undefined) {\n      info.protocol = match[1];\n    }\n    if (match[2] !== undefined) {\n      info.host = match[2];\n    }\n    if (match[3] !== undefined) {\n      info.pathname = match[3];\n    }\n\n    return info;\n  } else if (url [0] === '/') {\n    // Absolute url\n    return {\n      pathname: url\n    };\n  } else {\n    // Relative\n    return {\n      pathrelative: url\n    };\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewDef.html":{"url":"interfaces/ViewDef.html","title":"interface - ViewDef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewDef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-definition.ts\n        \n\n            \n                Description\n            \n            \n                Defines view for given type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                        data\n                                \n                                \n                                        noWildcards\n                                \n                                \n                                        quality\n                                \n                                \n                                        resolve\n                                \n                                \n                                        responseType\n                                \n                                \n                                        status\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    Component that is viewed when this view definition is matched against response.\nMandatory. Don't forget to add it to modules declarations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:88\n                                        \n                                    \n\n                            \n                                \n                                    Values that are passed to the view. These values are not resolved in any way - observables remains observables,\nfunctions are not called.\nTo have resolved data, use resolve property.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noWildcards\n                                    \n                                \n                                \n                                    \n                                        noWildcards:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:100\n                                        \n                                    \n\n                            \n                                \n                                    Disables wildcard character parsing in type property.\nNote: Wildcards in status will still work.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                    \n                                \n                                \n                                    \n                                        quality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:71\n                                        \n                                    \n\n                            \n                                \n                                    Similar to quality in Accept header, except it accepts any number, not just range 0..1.\nUsually it won't have to be overridden, since typical application configuration is to have many specific types\nand one wildcard as the fallback view.\nIf undefined, it is calculated from type` by following rules:\n\nType equal to '*' has quality of 0.0.\nType with any wildcard has quality of 0.5\nType without wildcard has quality of 1.0.\nNumber of wildcards is insignificant.\n\nOtherwise it maintains order of definition (note that you should never rely on this across modules).\nIt is recommended to define views with low quality only on application module level, domain-specific modules\nshould always match domain-specific types.\nExample:\nTODO show how same wildcards are treated and how to override quality.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:93\n                                        \n                                    \n\n                            \n                                \n                                    TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                    \n                                \n                                \n                                    \n                                        responseType:     \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"json\" | \"text\"\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:81\n                                        \n                                    \n\n                            \n                                \n                                    Type of the parser, which should be used to produce final body.\nDefault is 'json'. If other response type is required (like blob for images), it must be set accordingly.\nNote that 'arraybuffer' and 'blob' are not supported right now. For proper support, responseType must be set before\nrequest is sent, however we don't know what view will consume the given request, so we don't know responseType\nwhen the request is being sent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     StatusType | []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StatusType | []\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:50\n                                        \n                                    \n\n                            \n                                \n                                    HTTP response status code, which is 3-digit integer.\nIt supports wildcard characters '?' (any single character) at the end of the string - that is,\nexpression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\nWildcard character '' is also supported, but has different meaning than usual - expression is still\nexpanded to 3 characters. Which means, '2' == '2??', and '*' == '???'.\nIt might be array of values, handling multiple disjunct values.\nDefault is '2xx', that is >=200 and \nSpecificity is calculated by number of wildcard positions (since there is 3 character limit):\n\n999\n99?\n9??\n???\n\nNote that both status and type must be matched. To match specific status without any type, set type to ''.\nTo match anything, set both to ''.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string | []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | []\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    Media type of the response.\nIt supports wildcard characters '?' (any single character), '*' (zero or more characters).\nUnless status is set, this matches only 2xx (successful) status codes (see status property).\nTo match any type (that is, fallback view), set the type to '*'.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n\nexport interface Data {\n  readonly [name: string]: any;\n}\n\nexport type StatusType = number | string;\n\n/**\n * Defines view for given type.\n */\nexport interface ViewDef {\n\n  /**\n   * Component that is viewed when this view definition is matched against response.\n   * Mandatory. Don't forget to add it to modules `declarations`.\n   */\n  readonly component: Type;\n\n  /**\n   * Media type of the response.\n   * It supports wildcard characters '?' (any single character), '*' (zero or more characters).\n   *\n   * Unless status is set, this matches only 2xx (successful) status codes (see `status` property).\n   *\n   * To match any type (that is, fallback view), set the type to '*'.\n   */\n  readonly type: string | string[];\n\n  /**\n   * HTTP response status code, which is 3-digit integer.\n   * It supports wildcard characters '?' (any single character) at the end of the string - that is,\n   * expression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\n   * Wildcard character '*' is also supported, but has different meaning than usual - expression is still\n   * expanded to 3 characters. Which means, '2*' == '2??', and '*' == '???'.\n   * It might be array of values, handling multiple disjunct values.\n   *\n   * Default is '2xx', that is >=200 and \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewTypeResponse.html":{"url":"interfaces/ViewTypeResponse.html","title":"interface - ViewTypeResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewTypeResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n            \n                Description\n            \n            \n                Helper interface with subset of HttpResponse fields, for better abstraction.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    The response body, or null if one was not returned.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     ReadOnlyHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadOnlyHeaders\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    All response headers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Response status code.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param {ViewTypeResponse} response Actual response.\n   * @returns {string} Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultComparer\n                        \n                        \n                            emptyView\n                        \n                        \n                            errorView\n                        \n                        \n                            escapeRegExpPattern\n                        \n                        \n                            insertLocation\n                        \n                        \n                            locationFor\n                        \n                        \n                            newValidationError\n                        \n                        \n                            normalizeMediaType\n                        \n                        \n                            normalizeStatus\n                        \n                        \n                            normalizeStatusExpression\n                        \n                        \n                            parseUrl\n                        \n                        \n                            provideLocationStrategy\n                        \n                        \n                            qualityComparator\n                        \n                        \n                            simpleTypeQualityEvaluator\n                        \n                        \n                            statusQualityEvaluator\n                        \n                        \n                            stringToJSON\n                        \n                        \n                            supportsNavigation\n                        \n                        \n                            toArray\n                        \n                        \n                            validateStatus\n                        \n                        \n                            validateStatusExpression\n                        \n                        \n                            validateType\n                        \n                        \n                            wildcardToRegex\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/utils/sorted-array.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                defaultComparer\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    defaultComparer(a: typeReference, b: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Compare values using \n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      a\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      First value to be compared.\n    \n                                                    \n                                                    \n                                                      b\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      Second value to be compared.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                insertLocation\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    insertLocation(element: typeReference, array: undefined, comparer: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      element\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      array\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      comparer\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                locationFor\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    locationFor(element: typeReference, array: undefined, comparer: typeReference, start: number, end: number)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      element\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      array\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      comparer\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      start\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      end\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/resource-router-module.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                emptyView\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    emptyView()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                errorView\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    errorView()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                provideLocationStrategy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    provideLocationStrategy(platformLocationStrategy: typeReference, baseHref: string, options: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Internal factory function, exported only for AOT support.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      platformLocationStrategy\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      baseHref\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      options\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/wildcard-to-regex.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                escapeRegExpPattern\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    escapeRegExpPattern(s: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Converts any string to regular expression, which matches it. Handles special RegExp characters.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      s\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Any string.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                wildcardToRegex\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    wildcardToRegex(wildcard: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Converts wildcard pattern with ? and * characters to regular expression.\n    Usage:\n    wildcardToRegex('*.js').test('foo.js') == true\n    wildcardToRegex('*.js').test('foo.jsx') == false\n    wildcardToRegex('image/*').test('image/png') == true\n    wildcardToRegex('image/*').test('text/plain') == false\n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      wildcard\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Wildcard pattern, supports ? and * characters.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/resource-view-registry.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                newValidationError\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    newValidationError(config: any, text: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      config\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      text\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                normalizeStatus\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    normalizeStatus(status: number)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      status\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                normalizeStatusExpression\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    normalizeStatusExpression(pattern: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      pattern\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                qualityComparator\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    qualityComparator(a: undefined, b: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      a\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      b\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                toArray\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    toArray(value: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Returns value if it is array, otherwise it wraps the value in the array.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      value\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      Single value or array of values.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                validateStatus\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    validateStatus(config: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      config\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                validateStatusExpression\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    validateStatusExpression(config: typeReference, status: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      config\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      status\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                validateType\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    validateType(config: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      config\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/normalize-media-type.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                normalizeMediaType\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    normalizeMediaType(mimeType: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Normalizes the media type. Removes format suffix (everything after +), and prepends application/ if there is\n    just subtype provided.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      mimeType\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Media type to match.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/parse-url.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                parseUrl\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    parseUrl(url: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Rough URL parser.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      url\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      URL to be parsed. Must be well-formed.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/quality-evaluator.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                simpleTypeQualityEvaluator\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    simpleTypeQualityEvaluator(type: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                View type evaluator function, that returns:\n    0 for pure wildcard types (like '')\n    0.5 for types containing wildcard (like 'aaa/')\n    1 for types without wildcard characters.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                statusQualityEvaluator\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    statusQualityEvaluator(status: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Response status code pattern quality evaluator.\n    0 for pure wildcard patterns (like '*' or '???')\n    1 for exact values (like '204')\n    otherwise its ration of wildcard to number characters. That is '2??' is 0.333, '20?' is 0.666.\n    This function assumes all status strings has constant length. Otherwise values would be inconsistent.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      status\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/http-utils.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                stringToJSON\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    stringToJSON(input: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Parses text as JSON, removing XSSI prefix, if present.\n    Follows Angular internal JSON handling.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      input\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Source string.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/navigation-handler.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                supportsNavigation\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    supportsNavigation(obj: any)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      obj\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_API_PREFIX\n                        \n                        \n                            MEDIA_TYPE_NORMALIZER\n                        \n                        \n                            MEDIA_TYPE_ROUTER_EMPTY\n                        \n                        \n                            MEDIA_TYPE_ROUTER_ERROR\n                        \n                        \n                            MEDIA_TYPE_ROUTER_LOADING\n                        \n                        \n                            NO_HEADERS\n                        \n                        \n                            RESOURCE_ROUTER_CONFIGURATION\n                        \n                        \n                            RESOURCE_VIEWS\n                        \n                        \n                            TARGET_SELF\n                        \n                        \n                            TARGET_TOP\n                        \n                        \n                            TYPE_QUALITY_EVALUATOR\n                        \n                        \n                            URL_PATTERN\n                        \n                        \n                            XSSI_PREFIX\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/single-api-mapper.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                APP_API_PREFIX\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            APP_API_PREFIX:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('APP_API_PREFIX')\n                            \n                        \n    \n                    \n                        \n                            Prefix for the URL. Can be base-relative, host-relative or absolute.\n    Always should however end with slash ('/').\n    \n                        \n                    \n    \n                \n            \n    \n    src/lib/src/utils/normalize-media-type.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_NORMALIZER\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_NORMALIZER:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /\\s*[+;].*$/\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/system-media-types.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_EMPTY\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_EMPTY:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/empty'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_ERROR\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_ERROR:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/error'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_LOADING\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_LOADING:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/loading'\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/read-only-headers.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_HEADERS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_HEADERS:     ReadOnlyHeaders\n    \n                        \n                    \n                        \n                            \n                                Type :     ReadOnlyHeaders\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n      has(name: string): boolean {\n        return false;\n      },\n    \n      get(name: string): string | null {\n        return null;\n      },\n    \n      keys(): string[] {\n        return [];\n      },\n    \n      getAll(name: string): string[] | null {\n        return null;\n      }\n    }\n                            \n                        \n    \n                    \n                        \n                            Dummy implementation of ReadOnlyHeaders that never returns anything.\n    \n                        \n                    \n    \n                \n            \n    \n    src/lib/src/resource-router-module.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                RESOURCE_ROUTER_CONFIGURATION\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESOURCE_ROUTER_CONFIGURATION:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('RESOURCE_ROUTER_CONFIGURATION')\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/resource-view-registry.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                RESOURCE_VIEWS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESOURCE_VIEWS:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('RESOURCE_VIEWS')\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TYPE_QUALITY_EVALUATOR\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TYPE_QUALITY_EVALUATOR:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('TYPE_QUALITY_EVALUATOR')\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/directives/resource-link.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                TARGET_SELF\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TARGET_SELF:     \n    \n                        \n                    \n                        \n                            \n                                Default value : '_self'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TARGET_TOP\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TARGET_TOP:     \n    \n                        \n                    \n                        \n                            \n                                Default value : '_top'\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/utils/parse-url.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                URL_PATTERN\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            URL_PATTERN:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/utils/http-utils.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                XSSI_PREFIX\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            XSSI_PREFIX:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^\\)]}',?\\n/\n                            \n                        \n    \n                    \n                        \n                            Cross-site scripting prefix. Copied from HttpXhrBackend.\n    \n                        \n                    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparer\n                        \n                        \n                            StatusType\n                        \n                        \n                            TargetType\n                        \n                        \n                            TypeQualityEvaluator\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/utils/sorted-array.ts\n    \n            \n                \n                    \n                        \n                            \n                            Comparer\n                        \n                    \n                    \n                        \n                            Comparer()\n                        \n                    \n                \n            \n    \n    src/lib/src/view-definition.ts\n    \n            \n                \n                    \n                        \n                            \n                            StatusType\n                        \n                    \n                    \n                        \n                            StatusType:     number | string\n    \n                        \n                    \n                \n            \n    \n    src/lib/src/directives/resource-link.ts\n    \n            \n                \n                    \n                        \n                            \n                            TargetType\n                        \n                    \n                    \n                        \n                            TargetType:     NavigationHandler |  | \n    \n                        \n                    \n                \n            \n    \n    src/lib/src/quality-evaluator.ts\n    \n            \n                \n                    \n                        \n                            \n                            TypeQualityEvaluator\n                        \n                    \n                        \n                            \n                                Type evaluator function definition.\n    \n                            \n                        \n                    \n                        \n                            TypeQualityEvaluator()\n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/lib/src/api-location.ts\n            \n            \n                injectable\n            \n            \n                ApiLocation\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    src/lib/src/api-mapper.ts\n            \n            \n                class\n            \n            \n                ApiMapper\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/lib/src/api-url.ts\n            \n            \n                class\n            \n            \n                ApiUrl\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/lib/src/api-url.ts\n            \n            \n                class\n            \n            \n                BaseApiUrl\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/lib/src/api-url.ts\n            \n            \n                injectable\n            \n            \n                BrowserApiUrl\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/src/components/default-empty.component.ts\n            \n            \n                component\n            \n            \n                DefaultEmptyComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/components/default-error.component.ts\n            \n            \n                component\n            \n            \n                DefaultErrorComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-data.ts\n            \n            \n                directive\n            \n            \n                ResourceDataDirective\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-data.ts\n            \n            \n                class\n            \n            \n                ResourceDataContext\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link-with-href.ts\n            \n            \n                directive\n            \n            \n                ResourceLinkWithHrefDirective\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                directive\n            \n            \n                ResourceLinkDirective\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                variable\n            \n            \n                TARGET_SELF\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                variable\n            \n            \n                TARGET_TOP\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-outlet.ts\n            \n            \n                component\n            \n            \n                ResourceOutletComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-view.ts\n            \n            \n                directive\n            \n            \n                ResourceViewDirective\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/lib/src/navigation-handler.ts\n            \n            \n                interface\n            \n            \n                NavigationHandler\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/src/navigation-handler.ts\n            \n            \n                function\n            \n            \n                supportsNavigation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/quality-evaluator.ts\n            \n            \n                function\n            \n            \n                simpleTypeQualityEvaluator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/quality-evaluator.ts\n            \n            \n                function\n            \n            \n                statusQualityEvaluator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/read-only-headers.ts\n            \n            \n                interface\n            \n            \n                ReadOnlyHeaders\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/lib/src/read-only-headers.ts\n            \n            \n                variable\n            \n            \n                NO_HEADERS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                interface\n            \n            \n                ResourceRouterOptions\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                function\n            \n            \n                emptyView\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                function\n            \n            \n                errorView\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                function\n            \n            \n                provideLocationStrategy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                variable\n            \n            \n                RESOURCE_ROUTER_CONFIGURATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                class\n            \n            \n                ViewsByStatus\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                injectable\n            \n            \n                ResourceViewRegistry\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                interface\n            \n            \n                ParsedViewDef\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                newValidationError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                normalizeStatus\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                normalizeStatusExpression\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                qualityComparator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                toArray\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                validateStatus\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                validateStatusExpression\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                validateType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                variable\n            \n            \n                RESOURCE_VIEWS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                variable\n            \n            \n                TYPE_QUALITY_EVALUATOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/single-api-mapper.ts\n            \n            \n                injectable\n            \n            \n                SingleApiMapper\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    src/lib/src/single-api-mapper.ts\n            \n            \n                variable\n            \n            \n                APP_API_PREFIX\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_EMPTY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_ERROR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_LOADING\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/http-utils.ts\n            \n            \n                function\n            \n            \n                stringToJSON\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/http-utils.ts\n            \n            \n                variable\n            \n            \n                XSSI_PREFIX\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/normalize-media-type.ts\n            \n            \n                function\n            \n            \n                normalizeMediaType\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/normalize-media-type.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_NORMALIZER\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                interface\n            \n            \n                LocationInfo\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                interface\n            \n            \n                UrlInfo\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                function\n            \n            \n                parseUrl\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                variable\n            \n            \n                URL_PATTERN\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                class\n            \n            \n                SortedArray\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                function\n            \n            \n                defaultComparer\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                function\n            \n            \n                insertLocation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                function\n            \n            \n                locationFor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/wildcard-to-regex.ts\n            \n            \n                function\n            \n            \n                escapeRegExpPattern\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/wildcard-to-regex.ts\n            \n            \n                function\n            \n            \n                wildcardToRegex\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/view-data-loader.ts\n            \n            \n                class\n            \n            \n                ViewDataLoader\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/lib/src/view-data-loader.ts\n            \n            \n                injectable\n            \n            \n                HttpClientViewDataLoader\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                    src/lib/src/view-data.ts\n            \n            \n                class\n            \n            \n                ViewData\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/lib/src/view-definition.ts\n            \n            \n                interface\n            \n            \n                Data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/view-definition.ts\n            \n            \n                interface\n            \n            \n                ViewDef\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                class\n            \n            \n                ViewTypeStrategy\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                injectable\n            \n            \n                HeaderViewTypeStrategy\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                interface\n            \n            \n                ViewTypeResponse\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/lib/testing/src/mock-api-url.ts\n            \n            \n                injectable\n            \n            \n                MockApiUrl\n            \n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
