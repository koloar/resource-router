var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["access","aim","allow","angular","angular/cor","angular/platform","api","app","app.compon","appcompon","application/x.sampl","befor","bootstrap","bootstrapit","browser","browsermodul","build","buildaft","chang","changelog","class","client","complet","compon","config","configur","content","context","creat","data","declar","develop","directori","display","dist/angular","doc","drive","element","empti","engin","error","error.compon","errorcompon","etc","exampl","examplemodul","export","extern","follow","get","global","hateoa","header","hide","implement","import","index","instal","instead","itself","layout","librari","link","linux","load","local","match","media","name","navig","necessari","need","ngmodul","note","npm","origin","outlet","pass","path","perform","permiss","prefix","prevent","principl","publish","readm","regist","releas","replac","repositori","resolv","resourc","resourceroutermodul","resourceroutermodule.configur","resourceroutermodule.fortyp","respons","rest","result","rout","router","routerdemo","run","same","sampl","sample.compon","samplecompon","saveconfigur","see","server","similar","snippet","start","starttodo","statu","support","symlink","thing","time","todo","type","typedoc","under","unknown","us","user","veri","view","within","work"],"overview.html":["1","12","3","5","8","bootstrap","class","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","compon","declar","defaultemptycompon","defaulterrorcompon","depend","direct","export","inject","interfac","legend","match","modul","out","overview","provid","reset","resourcecontextdirect","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourceviewdirect","result","zoom"],"changelog.html":["02","04","1.0.0","12","13","15","17","2.1","2.3","2017","2018","21","22","23","30","4.0.0","4.1.0","4.x","6","7","9","abstract","accompani","activatedview","ad","allow","alpha.12","angular","angular/cli","api","apilink","apiloc","apimapp","apiurl","applic","argument","avail","blob","bodi","both","break","broken","bug","buggi","build","built","bump","bundl","chang","changelog","class","close","compil","compon","config","conform","constructor(publ","contain","context","convent","creat","custom","data","data.bodi","debuglog","default","deprec","describ","despit","develop","direct","endpoint","exampl","explicit","export","extend","extern","favour","featur","final","fix","function","futur","gener","get","gulp","hal","handl","http","httpclient","https://github.com/mdvorak/resourc","implement","inject","instead","interfac","intern","issu","json","key","lead","link","load","longer","mani","map","match","migrat","mode","model","more","move","mydata","name","navig","navigationhandl","need","nest","new","newer","ng","ngoninit","note","now","old","option","otherwis","packagr","page","pattern","prefix","problem","programmat","properli","properti","provid","public","rare","reactiv","refactor","relat","releas","reload","renam","replac","resolv","resourc","resourcecontext","resourcedata","resourcelink","responsetyp","result","reus","rout","router/pull/24/commit","run","samplecompon","script","see","semant","simpl","sourc","start","strictnullcheck","support","tag","text","this.data","this.view.data.subscribe(data","those","travi","true","typescript","umd","upgrad","url","us","v4.x","v5.x","valu","variou","veri","version","view","viewdata","void","whole","won't","work"],"license.html":["2017","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","dvorak","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","https://github.com/mdvorak/resourc","impli","includ","kind","liabil","liabl","licens","limit","match","merchant","merg","michal","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","router","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["brows","browser","match","modul","resourceroutermodul","result","support","svg"],"modules/ResourceRouterModule.html":["204","absolut","alway","analyze_for_entry_compon","angular/common","angular/cor","anoth","aot","api","apiloc","apimapp","app_api_prefix","app_base_href","bang","base","basehref","boolean","bootstrap","browserurlnorm","chang","class","client","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","commonmodul","compon","components/default","configur","configure(opt","const","content","context","data","declar","default","defaultemptycompon","defaulterrorcompon","definit","dep","depend","detail","directives/resourc","empty.compon","emptyview","enabl","end","error.compon","errorview","explicitli","export","factori","file","fortypes(view","full","function","global","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","header","headerviewtypestrategi","host","href","html5","http://example.com/my/context/api","httpresourcecli","implement","import","info","inject","inject(app_base_href","injectiontoken","injectiontoken('resource_router_configur","interfac","intern","legend","link","locat","locationstrategi","mapper","match","media","media_type_router_empti","media_type_router_load","mode","modul","module.t","modulewithprovid","multi","my/context/api","navig","new","ngmodul","normal","number.min_safe_integ","option","options.prefix","options.resourcecli","options.usehash","options.viewtypestrategi","out","outlet","path","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","platformloc","prefix","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","qualiti","read","readonli","registri","rel","reset","resourc","resource_router_configur","resource_view","resourcecli","resourcecontextdirect","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourcerouteropt","resourceviewdirect","resourceviewregistri","responsetyp","result","return","router","set","singl","singleapimapp","slash","sourc","src/lib/src/resourc","static","statu","strategi","string","support","system","tag","text","true","type","url","urlnorm","us","useclass","usefactori","usehash","usehash}=tru","usevalu","view","viewdef","viewtypestrategi","way","won't","work","zoom"],"components/DefaultEmptyComponent.html":["a[resourcelink]'},{'nam","actual_compon","angular/cor","class","compon","component_templ","defaultemptycompon","defaulterrorcompon","direct","dom","element","empty.component.t","export","file","html","import","info","legend","match","metadata","name","not(a)[resourcelink]'},{'nam","outlet","resourc","resourcecontext]'},{'nam","resourcecontextdirect","resourcedata][resourcedataof]'},{'nam","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceviewdirect","result","selector","sourc","src/lib/src/components/default","templat","tree","var","view"],"components/DefaultErrorComponent.html":["a[resourcelink]'},{'nam","activ","activatedview","actual_compon","angular/cor","class","compon","component_templ","constructor","constructor(publ","constructor(view","data","data.bodi","data.statu","data.statustext","data.typ","data.url","defaultemptycompon","defaulterrorcompon","defin","descript","direct","dom","element","error","error.component.t","error.component.ts:13","error.component.ts:15","error.component.ts:18","export","file","html","implement","import","index","info","legend","load","match","metadata","method","name","ngoninit","not(a)[resourcelink]'},{'nam","oninit","option","outlet","paramet","properti","public","resourc","resourcecontext]'},{'nam","resourcecontextdirect","resourcedata][resourcedataof]'},{'nam","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceviewdirect","result","return","selector","sourc","src/lib/src/components/default","templat","this.data","this.view.data.subscribe(data","tree","type","var","view","viewdata","void"],"components/ResourceOutletComponent.html":["a[resourcelink]'},{'nam","accessor","actual_compon","angular/cor","class","compon","component_templ","constructor","constructor(@self","constructor(resourc","data","decor","defaultemptycompon","defaulterrorcompon","defin","descript","direct","dom","element","event","eventemitt","export","file","getsrc","html","implement","import","index","info","input","legend","match","metadata","method","name","navig","new","ngondestroy","ngoninit","not(a)[resourcelink]'},{'nam","ondestroy","oninit","option","outlet","outlet.t","outlet.ts:19","outlet.ts:20","outlet.ts:22","outlet.ts:25","outlet.ts:29","outlet.ts:33","outlet.ts:38","output","paramet","privat","properti","provid","public","readonli","resourc","resourcecontext]'},{'nam","resourcecontextdirect","resourcedata","resourcedata][resourcedataof]'},{'nam","resourcedatanavigableref","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceviewdirect","result","return","rxjs/subscript","selector","self","set","setsrc(valu","sourc","src","src(valu","src/lib/src/directives/resourc","srcchang","string","subscript","subscription.empti","templat","this.resource.url","this.resource.urlchange.subscribe((valu","this.srcchange.emit(valu","this.subscript","this.subscription.unsubscrib","toplevelnavigableref","tree","type","valu","var","view","void"],"directives/ResourceContextDirective.html":["accessor","actual","altern","angular/cor","appcompon","applic","around","boundari","class","common","companion","compon","const","constructor(@self","context","context.t","context.ts:51","context.ts:54","data","defin","dep","descript","direct","directli","dure","easi","exactli","exampl","export","extend","factoryprovid","file","function","go","hard","html","import","index","info","input","intention","intern","isnavig","isnavigable(valu","isnavigable(value.target","link","load","match","metadata","more","navig","navigableref","new","next","noop_navig","note","op","phase","previou","programmat","properti","provid","public","readonli","replac","resort","resourc","resourcecontext","resourcecontext(valu","resourcecontextdirect","resourcecontextnavigableref","resourcecontextnavigablereffactori","resourcecontextnavigablereffactory(self","resourcedata","resourcedataof","resourcedataofdirect","result","return","see","selector","self","set","setresourcecontext(valu","setup","show","sourc","src/lib/src/directives/resourc","state","this.navig","toplevelnavigableref","ts","type","undefin","unusu","us","usefactori","useless","usual","valu","value.target","via","view","viewdata","way","work"],"directives/ResourceDataOfDirective.html":["15998]{@link","accessor","allow","along","angular","angular/cor","asterisk","automat","back","bind","bindurl","bindurl(valu","boolean","chang","class","complex","conjunct","constructor","constructor(@self","constructor(priv","constructor(resourc","contain","content","context","current","custom","data","decor","default","defin","depend","descript","direct","directli","doc","don't","emit","event","eventemitt","exampl","export","file","flag","gener","given","html","https://github.com/angular/angular/issues/15998","implement","implicit","import","index","info","input","intern","islocationrefer","islocationreference(valu","issu","jsunusedglobalsymbol","limit","link","listen","load","locat","locationrefer","locationreference#url","match","menu","metadata","method","more","name","navig","need","never","new","ngondestroy","ngoninit","noinspect","note","of.t","of.ts:112","of.ts:115","of.ts:117","of.ts:126","of.ts:136","of.ts:149","old","on","ondestroy","oninit","option","outlet","output","paramet","privat","propag","properti","provid","public","readonli","refer","remov","represent","reset","resolv","resourc","resourcecontextdirect","resourcedata","resourcedata#data","resourcedata#load","resourcedata#url","resourcedata][resourcedataof","resourcedatanavigableref","resourcedataof","resourcedataof(valu","resourcedataofcontext","resourcedataofcontext(resourc","resourcedataofdirect","resourceoutletcompon","result","return","rxjs/subscript","see","seen","selector","self","set","setresourcedataof(valu","show","simpl","sourc","sourcesubscript","src/lib/src/directives/resourc","store","string","structur","subscript","subscription.empti","support","syntax","templateref","this.context","this.resourc","this.resource.data","this.resource.load","this.resource.url","this.resource.urlchange.subscribe((valu","this.sourcesubscript","this.sourcesubscription.unsubscrib","this.urlchang","this.urlchange.emit(valu","this.urlsubscript","this.urlsubscription.unsubscrib","this.viewcontainer.createembeddedview(this.templateref","toplevelnavigableref","two","type","typeof","undefin","underli","until","url","urlchang","urlsubscript","us","valu","variabl","variant","view","viewcontain","viewcontainerref","viewdata","void","way","whenev"],"directives/ResourceLinkDirective.html":["_self","_top","angular/cor","boolean","cancel","class","click","compon","const","constructor","constructor(@opt","constructor(currentnavig","ctrl","current","currentnavig","debuglog","debuglog.warn('when","debuglog.warn(`when","defin","descript","direct","element","embed","error(`unsupport","export","extern","fallback","fals","file","handl","hostlisten","hostlistener('click","import","index","info","inject","inject(top_level_navig","input","instanc","instead","isnavig","isnavigable(target","key","level","limit","link.t","link.ts:21","link.ts:22","link.ts:29","log","match","metadata","name","navig","navigableref","new","not(a)[resourcelink","note","onclick","open","option","page","paramet","privat","readonli","resourc","resourcelink","resourcelinkdirect","result","return","selector","set","sourc","src/lib/src/directives/resourc","string","support","tag","target","target.go(this.resourcelink","target=\"_self","target_self","target_top","targettyp","this.currentnavig","this.currentnavigable.navig","this.resourcelink","this.target","this.toplevelnavig","throw","top","top_level_navig","toplevel","toplevel.navig","toplevelnavig","true","type","typeof","unavail","undefin","url","us","utils/debug","version","view","warn","window","work"],"directives/ResourceLinkWithHrefDirective.html":["0","200","a[resourcelink","angular/common","angular/cor","api","apimapp","applic","argument","boolean","browser","button","cancel","class","click","click(button","code","compon","const","constructor","constructor(apimapp","constructor(priv","ctrlkey","current","currentnavig","custom","debuglog","debuglog.warn('when","debuglog.warn(`when","default","defin","descript","direct","directive({selector","embed","event.button","event.ctrlkey","event.metakey","export","extern","fail","fallback","fals","file","handl","hostbind","hostlisten","hostlistener('click","href","href.t","href.ts:12","href.ts:13","href.ts:14","href.ts:15","href.ts:16","href.ts:17","href.ts:26","href.ts:56","implement","import","index","info","inject","inject(top_level_navig","input","instanc","isnavig","isnavigable(target","key","known","level","link","locat","log","manual","map","mapper","mark","match","mechan","metadata","metakey","method","name","navig","navigableref","new","ngonchang","non","note","number","onchang","onclick(button","open","option","origin","page","paramet","pointless","press","privat","readonli","registri","resourc","resourcelink","resourcelinkwithhrefdirect","resourceviewregistri","respons","result","return","selector","set","sourc","src/lib/src/directives/resourc","statu","store","string","success","support","target","target.go(this.resourcelink","target=\"_self","target_self","target_top","this.apimapper.mapapitoview(viewurl","this.currentnavig","this.currentnavigable.navig","this.extern","this.href","this.location.prepareexternalurl(viewurl","this.resourcelink","this.resourceviewregistry.match(this.typ","this.target","this.toplevelnavig","this.typ","this.unsupport","top","top_level_navig","toplevel","toplevel.navig","toplevelnavig","true","type","typeof","unavail","undefin","unsupport","url","us","utils/debug","valu","view","viewurl","void","warn","window","work"],"directives/ResourceViewDirective.html":["activ","activatedview","activatedview(target","angular/cor","behaviorsubject","behaviorsubject>(this.data","chang","class","compon","componentfactoryresolv","componentref","componenttyp","const","constructor","constructor(priv","constructor(publ","constructor(viewcontain","creat","creation","current","data","data.target","datasourc","defin","descript","destroy","direct","display","dure","export","factori","file","ignor","implement","import","index","info","injector","input","instead","match","metadata","method","name","navig","navigableref","new","next(valu","ngonchang","ngonchanges(chang","normal","note","noth","null","observ","old","on","onchang","option","paramet","prepar","privat","propag","provid","public","re","readonli","refer","reflectiveinjector","reflectiveinjector.fromresolvedproviders(provid","reflectiveinjector.resolv","render","resolv","resourc","resourceviewcontext","resourceviewcontext(compon","resourceviewdirect","result","return","rxjs/add/operator/switchmap","rxjs/behaviorsubject","same","selector","show","simplechang","sourc","src/lib/src/directives/resourc","store","target","this.component.componenttyp","this.curr","this.current.component.destroy","this.current.componenttyp","this.current.next(this.data","this.current.target","this.data","this.data.config","this.data.config.compon","this.data.next(valu","this.data.target","this.destroy","this.rend","this.resolver.resolvecomponentfactory(this.data.config.compon","this.viewcontainer.createcomponent(factori","this.viewcontainer.length","this.viewcontainer.parentinjector","true","type","us","usevalu","valu","view","view.t","view.ts:40","view.ts:42","view.ts:49","view.ts:69","view.ts:76","viewcontain","viewcontainerref","viewdata","visibl","void","won't"],"injectables/ApiLocation.html":["accessor","alreadi","alway","angular/common","angular/cor","api","apiloc","apimapp","around","base","be","bindabl","browser","chang","class","compon","configur","const","constructor","constructor(apimapp","constructor(priv","conveni","correspond","current","currenturl","data","defin","descript","determin","directli","donavig","donavigate(path","equal","error","error('url","error(`cannot","export","file","fire","form","geturl","given","happen","href","implement","import","index","info","initi","inject","known","link","listen","locat","location#path","location#prepareexternalurl","location.t","location.ts:102","location.ts:110","location.ts:17","location.ts:19","location.ts:38","location.ts:50","location.ts:77","location.ts:86","locationrefer","locationstrategi","log","map","maplocationurltoapi","mapper","match","mean","method","name","namespac","navig","need","never","new","next","normal","note","noth","null","observ","onlocationchang","option","outlet","page","param","paramet","path","perform","possibl","prefix","prepareexternalurl","prepareexternalurl(url","present","primari","privat","properti","protect","provid","push","readonli","redirect","refer","remov","resourc","result","return","rxjs/observ","rxjs/subject","set","seturl(url","slash","someth","sourc","src/lib/src/api","state","strategi","string","subject","take","this.apimapper.mapapitoview(url","this.apimapper.mapviewtoapi(path","this.donavigate(path","this.location.go(path","this.location.iscurrentpathequalto(path","this.location.normalize(url","this.location.path","this.location.prepareexternalurl(url","this.location.subscrib","this.maplocationurltoapi","this.onlocationchang","this.urlchang","this.urlchangesubject.asobserv","this.urlchangesubject.next(this.urlvalu","this.urlvalu","throw","todo","trail","type","typeof","unexpect","updat","url","url(url","urlchang","urlchangesubject","urlvalu","us","valu","versa","vice","view","void","without","wrapper"],"injectables/BrowserUrlNormalizer.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","basehref","baseurlnorm","browserapiurl","browserurlnorm","build","class","combin","compon","const","constructor","constructor(platformstrategi","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","normalizer.t","normalizer.ts:67","normalizer.ts:75","normalizer.ts:80","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","readonli","rel","replac","resolv","result","return","sourc","src/lib/src/url","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlnorm","us","utils/pars"],"injectables/HeaderViewTypeStrategy.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttyp","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","method","name","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","option","overrid","param","paramet","properti","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:41","strategy.ts:43","strategy.ts:49","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","valu","viewtyperespons","viewtypestrategi"],"injectables/HttpResourceClient.html":["abstract","alreadi","angular","angular/common/http","angular/cor","assum","awar","backend","bit","bodi","case","catch(respons","class","client.t","client.ts:35","client.ts:37","client.ts:38","client.ts:39","client.ts:43","client.ts:53","client.ts:60","client.ts:82","compon","config","config.responsetyp","const","construct","constructor","constructor(publ","constructor(strategi","data","default","defin","definit","descript","don't","duplic","e.g","empti","error","error(`unsupport","except","export","extend","fail","fetch","fetch(uri","file","find","get(uri","get(url","given","header","here","http","httpclient","httpresourcecli","httprespons","i'm","implement","import","index","info","inject","instanc","jsmethodcanbestat","json","malform","map(respons","match","method","name","navig","need","new","nice","noinspect","normal","note","null","observ","observable.of(respons","option","param","paramet","pars","parse(respons","pass","possibl","produc","properti","protect","public","readonli","registri","request","requesturl","resolv","resolve(requesturl","resourc","resourcecli","resourceviewregistri","respons","response.bodi","response.head","response.statu","response.statustext","response.url","responsetyp","result","retriev","return","rxjs/add/observable/of","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","send","set","sourc","src/lib/src/resourc","statu","statustext","strategi","string","stringtojson","stringtojson(response.bodi","super","swallow","switch","target","text","this.http.get(url","this.parse(respons","this.registry.match(typ","this.resolve(uri","this.strategy.extracttype(respons","throw","treat","type","uri","url","us","usual","util","utils/http","valid","view","viewdata","viewdef","viewtypestrategi","way"],"injectables/MockUrlNormalizer.html":["angular","angular/cor","basehref","baseurlnorm","class","default","defin","descript","export","extend","file","getbasehref","getloc","host","http","import","index","info","init","init(protocol","inject","internalbasehref","internalhost","internalpathnam","internalprotocol","localhost","locationinfo","match","method","mockurlnorm","name","normalizer.t","normalizer.ts:10","normalizer.ts:12","normalizer.ts:21","normalizer.ts:25","normalizer.ts:7","normalizer.ts:8","normalizer.ts:9","option","paramet","pathnam","properti","protocol","resourc","result","return","router","sourc","src/lib/testing/src/mock","string","this.internalbasehref","this.internalhost","this.internalpathnam","this.internalprotocol","type","url","valu"],"injectables/ResourceData.html":["1","204","999","accessor","actual","allow","alway","angular/cor","back","behaviorsubject","behaviorsubject>(initialdata","bind","bodi","catch(err","chang","class","client","combin","config","console.error(err","const","constructor","constructor(cli","constructor(publ","data","data.t","data.ts:21","data.ts:22","data.ts:28","data.ts:34","data.ts:36","data.ts:37","data.ts:66","data.ts:70","data.ts:74","data.ts:78","data.ts:91","data.url","datachang","datachangesourc","debuglog","default","defin","dep","descript","diagnost","don't","easili","empti","err","error","export","factoryprovid","fail","fals","fetch(url","file","function","getdata","getload","geturl","go","go(url","happen","header","here","id","identifi","implement","import","index","info","initi","initialdata","inject","intention","jsunusedglobalsymbol","latest","load","load(url","loaddataev","loadingvalu","locat","locationrefer","log","logic","makenavigableref","match","media","media_type_router_empti","media_type_router_error","media_type_router_load","method","mockviewdata(url","name","navig","navigableref","never","new","nextid","no_head","noinspect","normal","note","number","observ","observable.of(this.mockviewdata","observable.of(this.mockviewdata(url","ok","option","paramet","perform","possibl","print","privat","produc","product","propag","properti","provid","public","read","readonli","readonlyhead","redirect","refer","registri","reli","resourc","resourcecli","resourcedata","resourcedatanavigableref","resourceviewregistri","result","return","rout","rxjs/add/operator/catch","rxjs/add/operator/fin","rxjs/add/operator/switchmap","rxjs/behaviorsubject","rxjs/observ","rxjs/subject","self","server","set","seturl(valu","side","sourc","src/lib/src/resourc","start","statu","statustext","string","subject","subscribe(data","switchmap","switchmap(url","system","target","this.client","this.datachang","this.datachangesourc","this.datachangesource.asobserv","this.datachangesource.getvalu","this.datachangesource.next(data","this.load","this.load(url","this.loaddataev","this.loaddataevent.next(this.urlvalu","this.loaddataevent.next(valu","this.loadingvalu","this.mockviewdata","this.registry.match(typ","this.urlchang","this.urlchangesource.asobserv","this.urlchangesource.next(this.urlvalu","this.urlchangesource.next(url","this.urlvalu","true","type","typescript","undefin","updat","url","url(valu","urlchang","urlchangesourc","urlvalu","us","usefactori","valu","view","viewdata","void","well"],"injectables/ResourceViewRegistry.html":["0","1","1.html#object","2","2??').foreach(statu","3","_length","accessor","add","addsingleview(config","addview","addview(config","addviews(config","angular/cor","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","befor","between","bystatu","call","charact","check","class","compon","config","config.compon","config.foreach(this.addview","config.qu","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","consist","const","constructor","constructor(@inject(resource_view","constructor(statu","constructor(view","contain","continu","convert","copi","count","d*[?x]*\\**$/.test(statu","default","defin","definit","descript","end","error","error('invalid","error('wildcard","error(`no","evalu","export","express","file","find","flatten","found","function","getlength","getviewsbystatus(statu","group","group.statu","group.statusexp.test(statusstr","group.types.array.find(v","group.types.push","handl","https://www.typescriptlang.org/docs/handbook/releas","ignor","import","increment","index","info","initi","inject","inject(type_quality_evalu","injectiontoken","injectiontoken('resource_view","injectiontoken('type_quality_evalu","interfac","invalid","jsmethodcanbestat","json.stringify(config","later","left","length","long","longer","mandatori","match","match(typ","method","n","name","need","new","newvalidationerror(config","noinspect","normalizedstatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","notes/typescript","number","object.freeze(config","option","pad","paramet","parsedviewdef","path","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","permut","pleas","privat","protect","public","qualiti","readonli","recurs","regex","regexp","regist","registr","registry.t","registry.ts:108","registry.ts:39","registry.ts:53","registry.ts:57","registry.ts:79","registry.ts:90","replac","resource_view","resourceviewregistri","rest","result","return","s.statu","saniti","see","simpletypequalityevalu","singl","sortedarray","sortedarray(qualitycompar","sourc","specif","spread","src/lib/src/resourc","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","string","substr(0","support","t","text","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.getviewsbystatus(normalizedstatu","this.qual","this.statu","this.statusexp","this.typequalityevalu","this.typequalityevaluator(typ","this.validateviewdefinition(config","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","throw","toarray(config.statu","toarray(config.type).foreach(typ","true","type","type_quality_evalu","typeexp","typeof","typequalityevalu","util","utils/sort","utils/wildcard","v.typeexp.test(typ","valid","validatestatus(config","validatestatusexpression(config","validatetype(config","validateviewdefinit","validateviewdefinition(config","valu","view","view.config","viewdef","viewsbystatu","viewsbystatus(statu","void","wildcard","wildcardtoregex","wildcardtoregex(statu","wildcardtoregex(typ","x","x\\d?*]/.test(statu","zero"],"injectables/SingleApiMapper.html":["absolut","alway","angular/cor","api","apimapp","apiurl","apiurl.normalize(prefix","app_api_prefix","applic","base","class","configur","const","constructor","constructor(apiurl","defin","descript","diagnost","end","error('path","export","extend","file","host","href","import","includ","index","info","inject","inject(app_api_prefix","injectiontoken","injectiontoken('app_api_prefix","it'","join","lead","map","mapapitoview","mapapitoview(url","mapper","mapper.t","mapper.ts:22","mapper.ts:32","mapper.ts:46","mapviewtoapi","mapviewtoapi(path","match","method","name","new","normal","note","null","option","otherwis","paramet","path","path).replac","path.replac","prefix","prepend","properti","readonli","rel","remov","result","return","singleapimapp","slash","sourc","src/lib/src/singl","string","strip","super","this.prefix","throw","trail","type","unabl","url","url.startswith(this.prefix","url.substring(this.prefix.length).replac","urlnorm","us","versa","vice","view","w+:/.test(path","work","wrong"],"classes/ActivatedView.html":["_data","_data.asobserv","accessor","activatedview","activatedview.navigation.go(activatedview.snapshot.url","behaviorsubject","call","class","code","constructor","constructor(navig","constructor(publ","current","data","defin","descript","export","file","forc","getsnapshot","ident","import","index","info","match","method","name","navig","observ","option","paramet","privat","properti","public","readonli","reload","remain","result","return","rxjs/behaviorsubject","rxjs/observ","snapshot","sourc","src/lib/src/activ","this._data.getvalu","this.data","this.navigation.go(this.snapshot.url","type","url","view","view.t","view.ts:10","view.ts:15","view.ts:24","view.ts:8","viewdata","void"],"classes/ApiMapper.html":["abstract","api","apimapp","class","configur","counterpart","default","defin","descript","dure","e.g","empti","equal","export","file","http","index","info","insid","link","location.path","map","mapapitoview","mapapitoview(url","mapper.t","mapper.ts:15","mapper.ts:27","mapviewtoapi","mapviewtoapi(path","match","method","name","namespac","null","on","option","overridden","param","paramet","path","prefix","request","resourc","result","return","sourc","src/lib/src/api","string","type","url","versa","vice","view"],"classes/BaseUrlNormalizer.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","basehref","baseurlnorm","browserapiurl","browserurlnorm","build","class","combin","compon","const","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","normalizer.t","normalizer.ts:28","normalizer.ts:56","normalizer.ts:63","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","readonli","rel","replac","resolv","result","return","sourc","src/lib/src/url","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlnorm","us","utils/pars"],"classes/NavigableRef.html":["abstract","accessor","actual","alway","angular/cor","avail","be","cast","chang","class","compon","const","constructor(publ","creat","current","data","declar","defin","definit","dep","dereferenc","descript","doc","doesn't","exist","export","extend","factoryprovid","file","function","getnavig","given","go(url","guarante","honor","immut","import","info","inject","inject(top_level_navig","injectiontoken","injectiontoken('top_level_navig","instanc","instead","interfac","intern","isnavigable(obj","keep","level","link","makenavigableref(valu","match","navig","navigableref","navigablerefimpl","navigablerefimpl(valu","navigationref","nest","new","note","obj","obj.go","option","proper","provid","readonli","recommend","refer","regardless","requir","resourc","resourcedatanavigableref","result","return","root","safe","see","self","skipself","sourc","src/lib/src/navigable.t","src/lib/src/navigable.ts:29","string","super","therefor","token","top","top_level_navig","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","true","typeof","us","usag","usefactori","valu","void","won't"],"classes/NavigableRefImpl.html":["abstract","actual","alway","angular/cor","avail","be","cast","chang","class","compon","const","constructor","constructor(navig","constructor(publ","creat","current","data","declar","defin","definit","dep","dereferenc","descript","doc","doesn't","exist","export","extend","factoryprovid","file","function","given","go(url","guarante","honor","immut","import","index","info","inject","inject(top_level_navig","injectiontoken","injectiontoken('top_level_navig","instanc","instead","interfac","intern","isnavigable(obj","keep","level","link","makenavigableref(valu","match","name","navig","navigableref","navigablerefimpl","navigablerefimpl(valu","navigationref","nest","new","note","obj","obj.go","option","paramet","proper","properti","provid","public","readonli","recommend","refer","regardless","requir","resourc","resourcedatanavigableref","result","return","root","safe","see","self","skipself","sourc","src/lib/src/navigable.t","src/lib/src/navigable.ts:32","src/lib/src/navigable.ts:34","string","super","therefor","token","top","top_level_navig","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","true","type","typeof","us","usag","usefactori","valu","void","won't"],"classes/ResourceClient.html":["abstract","alreadi","angular","angular/common/http","angular/cor","assum","awar","backend","bit","bodi","case","catch(respons","class","client.t","client.ts:27","compon","config","config.responsetyp","const","construct","constructor","constructor(publ","data","default","defin","definit","descript","don't","duplic","e.g","empti","error","error(`unsupport","except","export","extend","fail","fetch","fetch(uri","file","find","get(uri","get(url","given","header","here","http","httpclient","httpresourcecli","httprespons","i'm","implement","import","index","info","inject","instanc","jsmethodcanbestat","json","malform","map(respons","match","method","name","navig","need","new","nice","noinspect","normal","note","null","observ","observable.of(respons","option","param","paramet","pars","parse(respons","pass","possibl","produc","protect","public","readonli","registri","request","requesturl","resolv","resolve(requesturl","resourc","resourcecli","resourceviewregistri","respons","response.bodi","response.head","response.statu","response.statustext","response.url","responsetyp","result","retriev","return","rxjs/add/observable/of","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","send","set","sourc","src/lib/src/resourc","statu","statustext","strategi","string","stringtojson","stringtojson(response.bodi","super","swallow","switch","target","text","this.http.get(url","this.parse(respons","this.registry.match(typ","this.resolve(uri","this.strategy.extracttype(respons","throw","treat","type","uri","url","us","usual","util","utils/http","valid","view","viewdata","viewdef","viewtypestrategi","way"],"classes/ResourceDataOfContext.html":["15998]{@link","accessor","allow","along","angular","angular/cor","asterisk","automat","back","bind","bindurl","bindurl(valu","boolean","chang","class","complex","conjunct","constructor","constructor(@self","constructor(priv","constructor(resourc","contain","content","context","current","custom","data","default","defin","depend","descript","direct","directli","doc","don't","emit","event","eventemitt","exampl","export","file","flag","gener","get$implicit","getdata","getload","given","html","https://github.com/angular/angular/issues/15998","implement","implicit","import","info","input","intern","islocationrefer","islocationreference(valu","issu","jsunusedglobalsymbol","limit","link","listen","load","locat","locationrefer","locationreference#url","match","menu","more","name","navig","need","never","new","ngondestroy","ngoninit","noinspect","note","of.t","of.ts:26","of.ts:37","of.ts:47","of.ts:55","old","on","ondestroy","oninit","option","outlet","output","paramet","privat","propag","provid","public","readonli","refer","remov","represent","reset","resolv","resourc","resourcecontextdirect","resourcedata","resourcedata#data","resourcedata#load","resourcedata#url","resourcedata][resourcedataof","resourcedatanavigableref","resourcedataof(valu","resourcedataofcontext","resourcedataofcontext(resourc","resourcedataofdirect","resourceoutletcompon","result","return","rxjs/subscript","see","seen","selector","self","set","show","simpl","sourc","sourcesubscript","src/lib/src/directives/resourc","store","string","structur","subscript","subscription.empti","support","syntax","templateref","this.context","this.resourc","this.resource.data","this.resource.load","this.resource.url","this.resource.urlchange.subscribe((valu","this.sourcesubscript","this.sourcesubscription.unsubscrib","this.urlchang","this.urlchange.emit(valu","this.urlsubscript","this.urlsubscription.unsubscrib","this.viewcontainer.createembeddedview(this.templateref","toplevelnavigableref","two","type","typeof","undefin","underli","until","url","urlchang","urlsubscript","us","valu","variabl","variant","view","viewcontain","viewcontainerref","viewdata","void","way","whenev"],"classes/ResourceViewContext.html":["accessor","activ","activatedview","activatedview(target","angular/cor","behaviorsubject","behaviorsubject>(this.data","chang","class","compon","componentfactoryresolv","componentref","componenttyp","const","constructor","constructor(compon","constructor(priv","constructor(publ","creat","creation","current","data","data.target","datasourc","defin","descript","destroy","direct","display","dure","export","factori","file","getcomponenttyp","ignor","implement","import","index","info","injector","input","instead","match","method","name","navig","navigableref","new","next","next(valu","ngonchanges(chang","normal","note","noth","null","observ","old","on","onchang","option","paramet","prepar","privat","propag","properti","provid","public","re","readonli","refer","reflectiveinjector","reflectiveinjector.fromresolvedproviders(provid","reflectiveinjector.resolv","render","resolv","resourc","resourceviewcontext","resourceviewcontext(compon","resourceviewdirect","result","return","rxjs/add/operator/switchmap","rxjs/behaviorsubject","same","selector","show","simplechang","sourc","src/lib/src/directives/resourc","store","target","this.component.componenttyp","this.curr","this.current.component.destroy","this.current.componenttyp","this.current.next(this.data","this.current.target","this.data","this.data.config","this.data.config.compon","this.data.next(valu","this.data.target","this.destroy","this.rend","this.resolver.resolvecomponentfactory(this.data.config.compon","this.viewcontainer.createcomponent(factori","this.viewcontainer.length","this.viewcontainer.parentinjector","type","us","usevalu","valu","view","view.t","view.ts:18","view.ts:20","view.ts:21","view.ts:22","view.ts:25","view.ts:29","viewcontain","viewcontainerref","viewdata","visibl","void","won't"],"classes/SortedArray.html":["0","1","2","append","array","array.length","array.t","array.ts:17","array.ts:7","array.ts:9","array[pivot","b","c","class","compar","comparer(el","const","constructor","constructor(compar","constructor(publ","default","defin","descript","element","end","equal","export","file","find","index","info","insert","insertlocation(valu","locat","locationfor(el","maintain","match","math.floor((start","method","name","need","number","option","order","param","paramet","pivot","possibl","properti","public","push","push(valu","result","return","simpl","sort","sortedarray","sourc","src/lib/src/utils/sort","start","t","this.array","this.array.splice(i","this.compar","type","us","valu","void","wrapper"],"classes/UrlNormalizer.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","basehref","baseurlnorm","browserapiurl","browserurlnorm","build","class","combin","compon","const","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","normalizer.t","normalizer.ts:18","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","readonli","rel","replac","resolv","result","return","sourc","src/lib/src/url","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlnorm","us","utils/pars"],"classes/ViewTypeStrategy.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttyp","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","method","name","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","option","overrid","param","paramet","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:32","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","viewtyperespons","viewtypestrategi"],"classes/ViewsByStatus.html":["0","1","1.html#object","2","2??').foreach(statu","3","_length","add","addsingleview(config","addview","addview(config","addviews(config","angular/cor","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","befor","between","bystatu","call","charact","check","class","compon","config","config.compon","config.foreach(this.addview","config.qu","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","consist","const","constructor","constructor(@inject(resource_view","constructor(statu","contain","continu","convert","copi","count","d*[?x]*\\**$/.test(statu","default","defin","definit","descript","end","error","error('invalid","error('wildcard","error(`no","evalu","export","express","file","find","flatten","found","function","getviewsbystatus(statu","group","group.statu","group.statusexp.test(statusstr","group.types.array.find(v","group.types.push","handl","https://www.typescriptlang.org/docs/handbook/releas","ignor","import","increment","index","info","initi","inject","inject(type_quality_evalu","injectiontoken","injectiontoken('resource_view","injectiontoken('type_quality_evalu","interfac","invalid","jsmethodcanbestat","json.stringify(config","later","left","length","long","longer","mandatori","match","match(typ","n","name","need","new","newvalidationerror(config","noinspect","normalizedstatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","notes/typescript","number","object.freeze(config","option","pad","paramet","parsedviewdef","path","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","permut","pleas","privat","properti","protect","public","qualiti","readonli","recurs","regex","regexp","regist","registr","registry.t","registry.ts:14","registry.ts:15","registry.ts:16","registry.ts:17","replac","resource_view","resourceviewregistri","rest","result","return","s.statu","saniti","see","simpletypequalityevalu","singl","sortedarray","sortedarray(qualitycompar","sourc","specif","spread","src/lib/src/resourc","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","string","substr(0","support","t","text","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.getviewsbystatus(normalizedstatu","this.qual","this.statu","this.statusexp","this.typequalityevalu","this.typequalityevaluator(typ","this.validateviewdefinition(config","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","throw","toarray(config.statu","toarray(config.type).foreach(typ","type","type_quality_evalu","typeexp","typeof","typequalityevalu","util","utils/sort","utils/wildcard","v.typeexp.test(typ","valid","validatestatus(config","validatestatusexpression(config","validatetype(config","validateviewdefinition(config","valu","view","view.config","viewdef","viewsbystatu","viewsbystatus(statu","wildcard","wildcardtoregex","wildcardtoregex(statu","wildcardtoregex(typ","x","x\\d?*]/.test(statu","zero"],"interfaces/Data.html":["00","2","200","2xx","3","add","against","alia","angular/cor","array","better","charact","code","compon","data","declar","default","defin","definit","definition.t","definition.ts:4","differ","digit","disjunct","don't","end","expand","export","express","fallback","file","forbidden","forget","given","handl","http","import","index","info","integ","interfac","mandatori","match","mean","media","modul","more","multipl","name","number","properti","readabl","readonli","respons","result","see","set","singl","sourc","src/lib/src/view","statu","statustyp","still","string","success","support","type","unless","usual","valu","view","viewdef","wildcard","x","zero"],"interfaces/Link.html":["08","accord","boolean","consid","date","defin","deprec","dereferenc","descript","draft]{@link","expect","export","fals","file","further","futur","hal","hint","href","hreflang","https://tools.ietf.org/html/draft","human","hyperlink","i.","identifi","index","indic","info","inform","intend","interfac","json","kelli","key","label","languag","link","link.t","link.ts:12","link.ts:17","link.ts:21","link.ts:25","link.ts:29","link.ts:37","link.ts:41","link.ts:8","match","media","name","object","object'","presenc","profil","properti","provid","readabl","readonli","relat","remov","resourc","result","rfc3986","rfc5988","same","secondari","select","share","sourc","specif","src/lib/src/hal","string","target","templat","titl","true","type","undefin","uri","url","us","valu"],"interfaces/LocationInfo.html":["0","absolut","built","const","defin","export","extend","file","form","function","host","index","info","info.host","info.pathnam","info.protocol","interfac","locationinfo","match","match[1","match[2","match[3","null","object","param","pars","parser","parseurl(url","pathnam","pathrel","properti","protocol","readonli","rel","result","return","rough","sourc","src/lib/src/utils/pars","string","type","undefin","url","url.match(url_pattern","url.t","url.ts:4","url.ts:5","url.ts:6","url_pattern","urlinfo","w+:)?\\/\\/([^/]+(?::\\d","well"],"interfaces/LocationReference.html":["action","bind","bindurl(sourc","both","cold","combin","defin","export","file","function","import","index","info","initi","instanceof","interfac","invok","islocationreference(obj","locationrefer","match","obj","obj.urlchang","observ","probabl","properti","reference.t","reference.ts:5","reference.ts:6","result","return","rxjs/observ","rxjs/subscript","s","s.add(target.urlchange.subscribe(url","set","sourc","source.url","source.urlchange.subscribe(url","src/lib/src/loc","string","subscrib","subscript","target","target.url","two","type","url","urlchang","valu","way"],"interfaces/Navigable.html":["abstract","actual","alway","angular/cor","avail","be","cast","chang","class","compon","const","constructor(publ","creat","current","data","declar","defin","definit","dep","dereferenc","descript","doc","doesn't","exist","export","extend","factoryprovid","file","function","given","go","go(url","guarante","honor","immut","import","index","info","inject","inject(top_level_navig","injectiontoken","injectiontoken('top_level_navig","instanc","instead","interfac","intern","isnavigable(obj","keep","level","link","makenavigableref(valu","match","method","name","navig","navigableref","navigablerefimpl","navigablerefimpl(valu","navigationref","nest","new","note","obj","obj.go","option","paramet","proper","provid","readonli","recommend","refer","regardless","requir","resourc","resourcedatanavigableref","result","return","root","safe","see","self","skipself","sourc","src/lib/src/navigable.t","src/lib/src/navigable.ts:6","string","super","therefor","token","top","top_level_navig","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","true","type","typeof","url","us","usag","usefactori","valu","void","won't"],"interfaces/ParsedViewDef.html":["0","1","1.html#object","2","2??').foreach(statu","3","_length","add","addsingleview(config","addview","addview(config","addviews(config","angular/cor","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","befor","between","bystatu","call","charact","check","class","compon","config","config.compon","config.foreach(this.addview","config.qu","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","consist","const","constructor(@inject(resource_view","constructor(statu","contain","continu","convert","copi","count","d*[?x]*\\**$/.test(statu","default","defin","definit","end","error","error('invalid","error('wildcard","error(`no","evalu","export","express","file","find","flatten","found","function","getviewsbystatus(statu","group","group.statu","group.statusexp.test(statusstr","group.types.array.find(v","group.types.push","handl","https://www.typescriptlang.org/docs/handbook/releas","ignor","import","increment","index","info","initi","inject","inject(type_quality_evalu","injectiontoken","injectiontoken('resource_view","injectiontoken('type_quality_evalu","interfac","invalid","jsmethodcanbestat","json.stringify(config","later","left","length","long","longer","mandatori","match","match(typ","n","need","new","newvalidationerror(config","noinspect","normalizedstatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","notes/typescript","number","object.freeze(config","option","pad","parsedviewdef","path","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","permut","pleas","privat","properti","protect","public","qualiti","readonli","recurs","regex","regexp","regist","registr","registry.t","registry.ts:27","registry.ts:28","registry.ts:29","replac","resource_view","resourceviewregistri","rest","result","return","s.statu","saniti","see","simpletypequalityevalu","singl","sortedarray","sortedarray(qualitycompar","sourc","specif","spread","src/lib/src/resourc","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","string","substr(0","support","t","text","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.getviewsbystatus(normalizedstatu","this.qual","this.statu","this.statusexp","this.typequalityevalu","this.typequalityevaluator(typ","this.validateviewdefinition(config","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","throw","toarray(config.statu","toarray(config.type).foreach(typ","type","type_quality_evalu","typeexp","typeof","typequalityevalu","util","utils/sort","utils/wildcard","v.typeexp.test(typ","valid","validatestatus(config","validatestatusexpression(config","validatetype(config","validateviewdefinition(config","valu","view","view.config","viewdef","viewsbystatu","viewsbystatus(statu","wildcard","wildcardtoregex","wildcardtoregex(statu","wildcardtoregex(typ","x","x\\d?*]/.test(statu","zero"],"interfaces/ReadOnlyHeaders.html":["accessor","allow","anyth","boolean","check","collect","const","custom","decoupl","defin","descript","dummi","easi","empti","exist","export","fals","file","first","get(nam","getal","getall(nam","given","has(nam","header","headers.t","headers.ts:11","headers.ts:16","headers.ts:21","headers.ts:26","http","httpheader","implement","index","info","interfac","key","link","list","match","method","name","never","no_head","null","option","paramet","provid","read","readonlyhead","result","return","serv","sourc","src/lib/src/read","string","type","valu"],"interfaces/ResourceRouterOptions.html":["204","absolut","alway","analyze_for_entry_compon","angular/common","angular/cor","anoth","aot","api","apiloc","apimapp","app_api_prefix","app_base_href","bang","base","basehref","boolean","browserurlnorm","chang","class","client","commonmodul","compon","components/default","configur","configure(opt","const","content","context","data","declar","default","defaultemptycompon","defaulterrorcompon","defin","definit","dep","descript","detail","directives/resourc","empty.compon","emptyview","enabl","end","error.compon","errorview","explicitli","export","factori","file","fortypes(view","full","function","global","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","header","headerviewtypestrategi","host","href","html5","http://example.com/my/context/api","httpresourcecli","implement","import","index","info","inject","inject(app_base_href","injectiontoken","injectiontoken('resource_router_configur","interfac","intern","link","locat","locationstrategi","mapper","match","media","media_type_router_empti","media_type_router_load","mode","module.t","module.ts:46","module.ts:53","module.ts:59","module.ts:65","modulewithprovid","multi","my/context/api","navig","new","ngmodul","normal","number.min_safe_integ","option","options.prefix","options.resourcecli","options.usehash","options.viewtypestrategi","outlet","path","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","platformloc","prefix","properti","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","qualiti","read","readonli","registri","rel","resourc","resource_router_configur","resource_view","resourcecli","resourcecontextdirect","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourcerouteropt","resourceviewdirect","resourceviewregistri","responsetyp","result","return","router","set","singl","singleapimapp","slash","sourc","src/lib/src/resourc","static","statu","strategi","string","support","system","tag","text","true","type","url","urlnorm","us","useclass","usefactori","usehash","usehash}=tru","usevalu","view","viewdef","viewtypestrategi","way","won't","work"],"interfaces/UrlInfo.html":["0","absolut","built","const","defin","export","extend","file","form","function","host","index","info","info.host","info.pathnam","info.protocol","interfac","locationinfo","match","match[1","match[2","match[3","null","object","param","pars","parser","parseurl(url","pathnam","pathrel","properti","protocol","readonli","rel","result","return","rough","sourc","src/lib/src/utils/pars","string","type","undefin","url","url.match(url_pattern","url.t","url.ts:10","url_pattern","urlinfo","w+:)?\\/\\/([^/]+(?::\\d","well"],"interfaces/ViewData.html":["bodi","config","data.t","data.ts:10","data.ts:11","data.ts:12","data.ts:13","data.ts:14","data.ts:15","data.ts:8","data.ts:9","defin","definit","export","file","header","import","index","info","interfac","match","navig","number","properti","read","readonli","readonlyhead","result","sourc","src/lib/src/view","statu","statustext","string","t","target","type","url","view","viewdata","viewdef"],"interfaces/ViewDef.html":["0..1","0.0","0.5","00","1.0","2","200","2xx","3","9","99","999","accept","accordingli","add","against","alia","alway","angular/cor","anyth","applic","array","arraybuff","be","befor","behavior","better","blob","bodi","boolean","both","calcul","call","charact","code","compon","configur","consum","data","declar","default","defin","definit","definition.t","definition.ts:102","definition.ts:19","definition.ts:29","definition.ts:50","definition.ts:73","definition.ts:83","definition.ts:90","definition.ts:95","descript","determinist","differ","digit","disabl","disjunct","domain","don't","end","equal","exampl","except","expand","export","express","fallback","file","final","follow","forbidden","forget","function","given","handl","hard","header","http","imag","import","index","info","insignific","integ","interfac","json","know","level","limit","low","maintain","make","mandatori","mani","match","mean","media","modul","more","multipl","name","never","non","note","now","nowildcard","number","observ","on","order","otherwis","overrid","overridden","pars","parser","pass","posit","produc","proper","properti","qualiti","rang","readabl","readonli","recommend","reli","remain","request","requir","resolv","respons","responsetyp","result","right","rule","same","see","sent","set","show","similar","singl","sourc","specif","src/lib/src/view","statu","statustyp","still","string","success","support","text","todo","treat","type","typic","undefin","unless","us","usual","valu","view","viewdef","way","wildcard","without","won't","work","x","zero"],"interfaces/ViewTypeResponse.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","overrid","param","properti","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:12","strategy.ts:16","strategy.ts:20","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","viewtyperespons","viewtypestrategi"],"miscellaneous/functions.html":["0","0.333","0.5","0.666","1","2","20","204","aaa","angular","aot","applic","arg","array","array.t","assum","b","basehref","bindurl","bindurl(sourc","cast","charact","code","compar","config","constant","contain","context.t","convert","creat","current","data.t","defaultcompar","defaultcomparer(a","descript","element","emptyview","end","errorview","escaperegexppattern","escaperegexppattern(","evalu","evaluator.t","everyth","exact","exist","export","express","factori","fals","first","follow","form","format","function","given","handl","immut","inconsist","index","input","insertloc","insertlocation(el","instanc","intern","islocationrefer","islocationreference(obj","isnavig","isnavigable(obj","json","length","locationfor","locationfor(el","log.t","makenavigableref","makenavigableref(valu","match","media","messag","mimetyp","miscellan","module.t","name","navig","navigableref","newvalidationerror","newvalidationerror(config","nooplogfn","nooplogfn(messag","normal","normalizemediatyp","normalizemediatype(mimetyp","normalizestatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","number","obj","option","otherwis","paramet","pars","parser","parseurl","parseurl(url","pattern","platformlocationstrategi","prefix","prepend","present","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","pure","qualiti","qualitycompar","qualitycomparator(a","ration","reference.t","regex.t","regexp","registry.t","regular","remov","resourcecontextnavigableref","resourcecontextnavigablereffactori","resourcecontextnavigablereffactory(self","resourcedatanavigableref","respons","result","return","rough","router","s","safe","second","self","simpletypequalityevalu","simpletypequalityevaluator(typ","singl","sourc","special","src/lib/src/directives/resourc","src/lib/src/loc","src/lib/src/navigable.t","src/lib/src/qual","src/lib/src/resourc","src/lib/src/utils/debug","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","start","statu","statusqualityevalu","statusqualityevaluator(statu","string","stringtojson","stringtojson(input","subtyp","suffix","support","target","text","toarray","toarray(valu","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","true","type","type.t","typerefer","undefin","url","url.t","us","usag","utils.t","validatestatu","validatestatus(config","validatestatusexpress","validatestatusexpression(config","validatetyp","validatetype(config","valu","view","well","wildcard","wildcardtoregex","wildcardtoregex('*.js').test('foo.j","wildcardtoregex('*.js').test('foo.jsx","wildcardtoregex('image/*').test('image/png","wildcardtoregex('image/*').test('text/plain","wildcardtoregex(wildcard","without","wrap","xssi"],"miscellaneous/variables.html":["1","_self","_top","absolut","alway","anyth","api","app_api_prefix","base","boolean","compon","consol","context.t","copi","cross","data.t","debuglog","default","doc","dummi","end","error","fals","get(nam","getall(nam","go","has(nam","headers.t","host","httpxhrbackend","implement","index","injectiontoken('app_api_prefix","injectiontoken('resource_router_configur","injectiontoken('resource_view","injectiontoken('top_level_navig","injectiontoken('type_quality_evalu","instanc","isdevmod","key","level","link","link.t","liter","log","log.t","mapper.t","match","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","miscellan","module.t","n","navig","navigableref","never","new","nextid","no_head","noop_navig","nooplogfn","null","object","prefix","proper","provid","readonlyhead","registry.t","rel","resource_router_configur","resource_view","result","return","root","router","router/empti","router/error","router/load","s","script","see","site","slash","src/lib/src/directives/resourc","src/lib/src/navigable.t","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/utils/debug","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","string","target_self","target_top","token","top","top_level_navig","toplevelnavigableref","type","type.t","type_quality_evalu","typeof","types.t","url","url.t","url_pattern","us","usag","utils.t","valu","variabl","view","w+:)?\\/\\/([^/]+(?::\\d","warn","xssi_prefix"],"miscellaneous/typealiases.html":["alias","array.t","compar","definit","definition.t","evalu","evaluator.t","function","index","link.t","log.t","logfntyp","match","miscellan","navig","number","result","src/lib/src/directives/resourc","src/lib/src/qual","src/lib/src/utils/debug","src/lib/src/utils/sort","src/lib/src/view","statustyp","string","targettyp","type","typealias","typequalityevalu"],"coverage.html":["0","0/1","0/2","0/3","0/4","0/5","0/6","0/7","0/8","0/9","1/1","1/2","1/3","1/4","1/5","1/8","1/9","100","11","12","2/2","2/5","20","25","3/3","3/4","3/7","33","4/4","40","42","5/5","5/7","50","71","75","9/9","activatedview","api","apiloc","apimapp","app_api_prefix","array.t","baseurlnorm","bindurl","browserurlnorm","class","client.t","compon","context.t","coverag","data","data.t","debuglog","defaultcompar","defaultemptycompon","defaulterrorcompon","definition.t","direct","document","empty.component.t","emptyview","error.component.t","errorview","escaperegexppattern","evaluator.t","file","function","headers.t","headerviewtypestrategi","href.t","httpresourcecli","identifi","inject","insertloc","interfac","islocationrefer","isnavig","link","link.t","location.t","locationfor","locationinfo","locationrefer","log.t","makenavigableref","mapper.t","match","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","mockurlnorm","module.t","navig","navigableref","navigablerefimpl","new","newvalidationerror","nextid","no_head","noop_navig","nooplogfn","normalizemediatyp","normalizer.t","normalizestatu","normalizestatusexpress","of.t","outlet.t","parsedviewdef","parseurl","providelocationstrategi","qualitycompar","readonlyhead","reference.t","regex.t","registry.t","resource_router_configur","resource_view","resourcecli","resourcecontextdirect","resourcecontextnavigableref","resourcecontextnavigablereffactori","resourcedata","resourcedatanavigableref","resourcedataofcontext","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourcerouteropt","resourceviewcontext","resourceviewdirect","resourceviewregistri","result","router","simpletypequalityevalu","singleapimapp","sortedarray","src/lib/src/activ","src/lib/src/api","src/lib/src/components/default","src/lib/src/directives/resourc","src/lib/src/hal","src/lib/src/loc","src/lib/src/navigable.t","src/lib/src/qual","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/url","src/lib/src/utils/debug","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","src/lib/src/view","src/lib/testing/src/mock","statement","statusqualityevalu","strategy.t","stringtojson","tabl","tablesort(document.getelementbyid('coverag","target_self","target_top","toarray","top_level_navig","toplevelnavigablefactori","toplevelnavigableref","type","type.t","type_quality_evalu","types.t","url","url.t","url_pattern","urlinfo","urlnorm","utils.t","validatestatu","validatestatusexpress","validatetyp","variabl","view","view.t","viewdata","viewdef","viewsbystatu","viewtyperespons","viewtypestrategi","wildcardtoregex","xssi_prefix"]},"length":50},"tokenStore":{"root":{"0":{"0":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"8":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0831858407079646}},".":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"3":{"3":{"3":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}},"docs":{}},"docs":{}},"5":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}},"6":{"6":{"6":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}},"docs":{}},"docs":{}},"docs":{},".":{"1":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.05486725663716814}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.049557522123893805}}},"docs":{}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"2":{"docs":{"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"5":{"9":{"9":{"8":{"docs":{},"]":{"docs":{},"{":{"docs":{},"@":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},".":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"docs":{}}},"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.035398230088495575}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"docs":{}}},"2":{"0":{"0":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}},"1":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"docs":{}},"4":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}},"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},".":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"docs":{}},"?":{"docs":{},"?":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"x":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}}}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"docs":{}}},"3":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.009727626459143969},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.010548523206751054}},"/":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"docs":{}}},"4":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341}}},"docs":{}}},"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"docs":{}}},"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341}}}},"/":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"docs":{}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669}},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"docs":{}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"7":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"8":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669}}},"9":{"9":{"9":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"/":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}},"docs":{}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}},"o":{"docs":{},"r":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}},"p":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}}}},"r":{"docs":{},"d":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.010526315789473684}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.03592814371257485},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":5.015267175572519},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},".":{"1":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}},"i":{"docs":{},"a":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.025380710659898477},"changelog.html":{"ref":"changelog.html","tf":0.023411371237458192},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}}}}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"z":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00847457627118644},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.03406813627254509},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.052884615384615384},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.046632124352331605},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010309278350515464},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"o":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":5.004008016032064},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.016},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012024048096192385},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":5.010362694300518},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.015228426395939087},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.015873015873015872}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015544041450777202},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.022123893805309734},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023529411764705882}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013377926421404682}},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.06349206349206349},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.013618677042801557},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.014553014553014554},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.01289134438305709}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}}}}}}},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}},"s":{"docs":{},":":{"1":{"7":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}},"docs":{}},"7":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}},"9":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}},"docs":{}}}}},"[":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"u":{"docs":{},"m":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"k":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}},"o":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}},"a":{"docs":{},"a":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"b":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.015873015873015872},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007366482504604052}},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006012024048096192},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.030534351145038167},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02158273381294964}},">":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.017543859649122806},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}},"d":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.016587677725118485},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.022435897435897436},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.03529411764705882}}}},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules.html":{"ref":"modules.html","tf":0.1},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01002004008016032}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":5.009345794392523},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.016722408026755852}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.025380710659898477},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}},"g":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"m":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371}}}},"s":{"docs":{},"e":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.028037383177570093},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.029045643153526972},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.035398230088495575},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":5.012448132780083},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.019762845849802372},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316}}}}}}}}},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.026755852842809364},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":3.3366778149386844}}}}}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.061068702290076333},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.04008438818565401},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009208103130755065}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.016722408026755852},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.011904761904761904},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":5.015267175572519},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":5.010362694300518},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":5.016597510373444},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":5.030042918454936},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":5.021929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":5.009615384615385},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":5.008130081300813},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":5.010791366906475},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":5.01058201058201},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":5.017699115044247},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":5.0186335403726705},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":5.009727626459144},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.018433179723502304},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.021238938053097345}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.013605442176870748},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}},".":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}},"s":{"docs":{},":":{"2":{"7":{"docs":{"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}},"docs":{}},"3":{"5":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}},"7":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}},"8":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}},"9":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}},"docs":{}},"4":{"3":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}},"docs":{}},"5":{"3":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}},"docs":{}},"6":{"0":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}},"docs":{}},"8":{"2":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}},"docs":{}},"docs":{}}}}}}}},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.018433179723502304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939}}},"x":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.020066889632107024},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":5.073529411764706},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":5.029940119760479},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":5.023041474654378},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022988505747126436},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.03597122302158273},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01532567049808429},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02158273381294964}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}}}}},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.10052910052910052},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.01289134438305709},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.075}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.016587677725118485},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.016025641025641024},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.009727626459143969},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.016632016632016633},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007366482504604052}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.027472527472527472},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.024844720496894408},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278}},".":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}},"s":{"docs":{},":":{"5":{"1":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}},"4":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}},"docs":{}},"docs":{}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"s":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022988505747126436},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.009478672985781991},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.01282051282051282},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02158273381294964},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.015873015873015872},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.022123893805309734},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.01556420233463035},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.016632016632016633},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}},"o":{"docs":{},"r":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938}},"(":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726}}}}}}}}}}}}},"@":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576}}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}},"a":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}},"o":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}},"d":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},"u":{"docs":{},"m":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}},"r":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}},"p":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.04040404040404041},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304}}}}}}}}},"d":{"docs":{},"e":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.001769911504425}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.014028056112224449},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}},"s":{"docs":{},"e":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641}}},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.015228426395939087},"changelog.html":{"ref":"changelog.html","tf":0.013377926421404682},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.03592814371257485},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01984126984126984},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.043478260869565216},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022988505747126436},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.009478672985781991},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.013605442176870748},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.05343511450381679},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.022435897435897436},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.04607046070460705},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.03237410071942446},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":5.015267175572519},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0189873417721519},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425}}}}}}}}}}}},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}},"y":{"docs":{},"p":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"1":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"2":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"3":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"4":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"5":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"docs":{}},"2":{"1":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"2":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"8":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{}},"3":{"4":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"6":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"7":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{}},"6":{"6":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{}},"7":{"0":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"4":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"8":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{}},"8":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"9":{"1":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"docs":{}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},"e":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"o":{"docs":{},"r":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.015228426395939087},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.02197802197802198},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0071090047393364926},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.07692307692307693}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.02912621359223301},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01694915254237288},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":5.0588235294117645},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.02912621359223301},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01694915254237288},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":5.023952095808383},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023952095808383235},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.03686635944700461},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.011904761904761904},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01383399209486166},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.018433179723502304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.021333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019157088122605363},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01603206412825651},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.018957345971563982},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.046052631578947366},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.024943310657596373},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.019230769230769232},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.03816793893129771},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02158273381294964},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.031746031746031744},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.042105263157894736},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.023121387283236993},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.06451612903225806},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.02531645569620253},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941}},"i":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}},"s":{"docs":{},":":{"1":{"0":{"2":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"9":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"2":{"9":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"4":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542}}},"5":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"7":{"3":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"8":{"3":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"9":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"5":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"docs":{}}}}}}}}}}}}},"p":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.028070175438596492}}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"`":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"p":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01002004008016032},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.014218009478672985},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.019230769230769232},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015544041450777202},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.015873015873015872},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.023121387283236993},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04788213627992634}}}}}}},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022988505747126436},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482}}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.023411371237458192},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":5.0436507936507935},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":5.029644268774703},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":5.013824884792626},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":5.005333333333334},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":5.011494252873563},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.032520325203252036},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"coverage.html":{"ref":"coverage.html","tf":0.008849557522123894}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.012711864406779662},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556}}}}}}}}}}},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}}}},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},"{":{"docs":{},"@":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"k":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"*":{"docs":{},"[":{"docs":{},"?":{"docs":{},"x":{"docs":{},"]":{"docs":{},"*":{"docs":{},"\\":{"docs":{},"*":{"docs":{},"*":{"docs":{},"$":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.021164021164021163},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}},"i":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.015873015873015872},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}},"r":{"docs":{},"r":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"s":{"docs":{},":":{"1":{"3":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617}}},"5":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809}}},"8":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}},"(":{"docs":{},"`":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}},"n":{"docs":{},"o":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"'":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.023809523809523808},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01383399209486166},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"l":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.025423728813559324},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01984126984126984},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.018433179723502304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.007220216606498195},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.030042918454935622},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.03070175438596491},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.031914893617021274},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.03225806451612903},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.020618556701030927},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.016}}}},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.017167381974248927},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.017543859649122806},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.018433179723502304},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.011857707509881422},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013824884792626729},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}}}},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007366482504604052},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}},"l":{"docs":{},"i":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},".":{"docs":{},"g":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"license.html":{"ref":"license.html","tf":0.010101010101010102},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}}}}},"m":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"a":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"c":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083}}},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.024844720496894408},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}}}}}}},"s":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}},"i":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013377926421404682}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0071090047393364926},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.009615384615384616}}},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512}}},"l":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"r":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}},"s":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.012711864406779662},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02575107296137339},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.02631578947368421},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.013618677042801557},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.027649769585253458},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.014553014553014554},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.675874769797421},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.05486725663716814}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}}},"l":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}},"a":{"docs":{},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232}}}}}}},"$":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}},"u":{"docs":{},"l":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.01556420233463035},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.016632016632016633}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}},"o":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.03468208092485549},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}}},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}},"r":{"docs":{},"d":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.03296703296703297},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.037267080745341616},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.05202312138728324},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.04032258064516129},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.052941176470588235}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":5.010989010989011},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.02197802197802198},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"6":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"docs":{}},"2":{"1":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"6":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"docs":{}},"docs":{}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}},"n":{"docs":{},"t":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.016587677725118485},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.009615384615384616},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.02132701421800948},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.01282051282051282}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"d":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"k":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"1":{"5":{"9":{"9":{"8":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"/":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":5.004739336492891},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.016587677725118485},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.009615384615384616},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}}}}}},"m":{"docs":{},"l":{"5":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}},"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"s":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.03289473684210526},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.04},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.022123893805309734},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}},".":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"s":{"docs":{},":":{"1":{"2":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"3":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"4":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"5":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"6":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"7":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"docs":{}},"2":{"6":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"docs":{}},"5":{"6":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"docs":{}},"docs":{}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.03553299492385787},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.0423728813559322},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01984126984126984},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.015810276679841896},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018666666666666668},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022988505747126436},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012024048096192385},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.02843601895734597},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.031746031746031744},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.030534351145038167},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.038461538461538464},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02168021680216802},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02158273381294964},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.009727626459143969},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.041237113402061855},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.024193548387096774},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02145922746781116},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"a":{"docs":{},"g":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025}}}},"i":{"docs":{},"c":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}},"n":{"docs":{},"c":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.034334763948497854},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.02631578947368421},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.01282051282051282},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.027649769585253458},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}},"i":{"docs":{},"d":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.05291005291005291}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}},"e":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":5.006012024048096},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":5.018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":5.016483516483516},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":5.007109004739337},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":5.019736842105263},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":5.006802721088436},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":5.007220216606498},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":5.019230769230769},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.01415929203539823}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":5.022900763358779},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":5.007017543859649},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":5.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":5.0212765957446805},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":5.009216589861751},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":5.004158004158004},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":5.017341040462428},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":5.004123711340206},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":5.027522935779817},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":5.016129032258065},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":5.006329113924051},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":5.023529411764706},"coverage.html":{"ref":"coverage.html","tf":0.021238938053097345}}}}},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"d":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}}},"g":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"r":{"docs":{},"m":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.015873015873015872},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.02304147465437788},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018666666666666668},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01532567049808429},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"i":{"docs":{},"t":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}},"o":{"docs":{},"k":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}},"'":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"'":{"docs":{},"m":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}},".":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.015228426395939087}}}}}}},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.0211864406779661},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.011904761904761904},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.03359683794466403},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.04},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01603206412825651},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.04721030042918455},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.04824561403508772},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02710027100271003},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":5.035087719298246},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.05069124423963134},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.026804123711340205},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}},".":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"7":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}},"2":{"1":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"2":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152}}},"5":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"9":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}},"3":{"7":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}},"4":{"1":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}},"8":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}}}}}},"u":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":3.343434343434343}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"s":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}},"e":{"docs":{},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01984126984126984},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.021739130434782608},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.011337868480725623},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02981029810298103}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.021333333333333333},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.022044088176352707},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.022123893805309734},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.009881422924901186},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":5.053191489361702},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"#":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}},"#":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"s":{"docs":{},":":{"1":{"0":{"2":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}},"docs":{}},"1":{"0":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}},"docs":{}},"7":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}},"9":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}},"docs":{}},"3":{"8":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}},"docs":{}},"5":{"0":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}},"docs":{}},"7":{"7":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}},"docs":{}},"8":{"6":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}},"docs":{}},"docs":{}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.019736842105263157},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":5.024},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"i":{"docs":{},"c":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}},"f":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.075}}}}}}}},"w":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}},"f":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512},"license.html":{"ref":"license.html","tf":0.020202020202020204},"modules.html":{"ref":"modules.html","tf":0.2},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010830324909747292},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.03816793893129771},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.023121387283236993},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.03669724770642202},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.016129032258064516},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.02531645569620253},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007366482504604052},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"[":{"1":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"2":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"3":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"docs":{}}}},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}}},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.02004008016032064},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.046632124352331605}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}},".":{"docs":{},"t":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}},"s":{"docs":{},":":{"1":{"5":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676}}},"docs":{}},"2":{"2":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616}}},"7":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676}}},"docs":{}},"3":{"2":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}},"docs":{}},"4":{"6":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}},"docs":{}},"docs":{}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256}}}}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}}}}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}},"l":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}},"k":{"docs":{},"e":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611},"coverage.html":{"ref":"coverage.html","tf":0.008849557522123894}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}}}}}},"n":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}},"a":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"modules.html":{"ref":"modules.html","tf":10.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":5.004237288135593},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.010548523206751054}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.008849557522123894}},"s":{"docs":{},":":{"4":{"6":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}},"docs":{}},"5":{"3":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}},"9":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}},"docs":{}},"6":{"5":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278}}}}}}}}}}}}}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556}},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013377926421404682}}}},"c":{"docs":{},"k":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":5.0131578947368425},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.335174953959484},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.337858220211161},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.358333333333333}}}}}}}}}},"y":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00847457627118644},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371}},"p":{"docs":{},"l":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}}},"n":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.07352941176470588},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.03592814371257485},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.027649769585253458},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.011848341232227487},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.08092485549132948},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04788213627992634}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.016722408026755852},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.06349206349206349},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.03225806451612903},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.024},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.018036072144288578},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.023696682464454975},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.0916030534351145},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.06437768240343347},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.08333333333333333},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.028846153846153848},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.025179856115107913},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":5.055299539170507},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.04032258064516129},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.011904761904761904},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.03225806451612903},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018666666666666668},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.02681992337164751},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":5.060085836909871},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.05701754385964912},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.055299539170506916},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":5.008771929824562},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.009881422924901186},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01059322033898305},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019157088122605363},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006012024048096192},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02575107296137339},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.02631578947368421},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.017985611510791366},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.017509727626459144},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.027649769585253458},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.016632016632016633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010309278350515464},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.02262443438914027},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.016245487364620937},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.017509727626459144},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.018711018711018712},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00847457627118644},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023952095808383235},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.015873015873015872},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.015810276679841896},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02145922746781116},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.023411371237458192},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}}}}}}}}}},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012024048096192385},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.024896265560165973},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.04424778761061947},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584}}}}}},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"2":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"8":{"docs":{"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}},"docs":{}},"2":{"1":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"5":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"8":{"docs":{"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996}}},"docs":{}},"5":{"6":{"docs":{"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996}}},"docs":{}},"6":{"3":{"docs":{"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996}}},"7":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682}}},"docs":{}},"7":{"5":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682}}},"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"8":{"0":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682}}},"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"9":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"docs":{}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"f":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.03553299492385787}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.021660649819494584},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.023346303501945526},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.02494802494802495},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.024193548387096774},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.01289134438305709},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025}},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.038461538461538464},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0071090047393364926},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.049689440993788817},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.046242774566473986},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.041176470588235294},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01809954751131222}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"license.html":{"ref":"license.html","tf":0.010101010101010102},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02030456852791878},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013824884792626729},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}},".":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"s":{"docs":{},":":{"1":{"9":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}},"docs":{}},"2":{"0":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}},"2":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}},"5":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}},"9":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}},"docs":{}},"3":{"3":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}},"8":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152}}},"docs":{}},"docs":{}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.009708737864077}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}},"p":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01059322033898305},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01532567049808429},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.011848341232227487},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01444043321299639},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.014388489208633094},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.05156537753222836}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384}}}}}}}}},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012024048096192385},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.018957345971563982},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.02040816326530612},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.030534351145038167},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.022435897435897436},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.05319148936170213},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.031914893617021274},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}},"'":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}},".":{"docs":{},"g":{"docs":{},"o":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}}}}}}}}},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04145077720207254},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013824884792626729},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013824884792626729},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256}}}}}}}}}}}}}}}},"f":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}},"s":{"docs":{},":":{"1":{"1":{"2":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237}}},"5":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237}}},"7":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237}}},"docs":{}},"2":{"6":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237}}},"docs":{}},"3":{"6":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237}}},"docs":{}},"4":{"9":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474}}},"docs":{}},"docs":{}},"2":{"6":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"3":{"7":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"4":{"7":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"5":{"5":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"docs":{}}}}}},"k":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.022044088176352707},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.07253886010362694},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.03289473684210526},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.048},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.045871559633027525}}}}},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010830324909747292},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.012474012474012475},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009208103130755065}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"*":{"docs":{},"/":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"x":{"docs":{},"/":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}}},"g":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}},"a":{"docs":{},"m":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006012024048096192},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"e":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.011848341232227487},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.04788213627992634}}}}}},"s":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.014218009478672985},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.01282051282051282},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":5.004158004158004},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}},"r":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012024048096192385},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"u":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01002004008016032},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0673076923076923},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.016494845360824743},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}}}}},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}},"c":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.009881422924901186},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006012024048096192},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.018140589569160998},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010830324909747292},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.012474012474012475}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"license.html":{"ref":"license.html","tf":0.010101010101010102},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.029661016949152543},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.03571428571428571},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.015810276679841896},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.017167381974248927},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.017543859649122806},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02168021680216802},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.018433179723502304},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.026804123711340205},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"t":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.016129032258064516},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}},"a":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.018036072144288578},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.02132701421800948},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010830324909747292},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.009615384615384616},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.019736842105263157},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.04},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.015228426395939087},"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.029940119760479042},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.018957345971563982},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.031746031746031744},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.03816793893129771},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02877697841726619},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}},"s":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}},"i":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}},"r":{"docs":{},"e":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00847457627118644},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.015810276679841896},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022988505747126436},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012024048096192385},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.02132701421800948},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.04081632653061224},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.016245487364620937},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.05343511450381679},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.009615384615384616},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.016260162601626018},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.04316546762589928},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.033073929961089495},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.028070175438596492},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.018711018711018712},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.03669724770642202},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.06451612903225806},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941}}},"y":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":5.023121387283237},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023529411764705882},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.016587677725118485},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.015873015873015872},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.023008849557522124}},"s":{"docs":{},":":{"1":{"0":{"8":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"4":{"docs":{"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938}}},"5":{"docs":{"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938}}},"6":{"docs":{"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938}}},"7":{"docs":{"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876}}},"docs":{}},"2":{"7":{"docs":{"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"8":{"docs":{"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"9":{"docs":{"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"docs":{}},"3":{"9":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"5":{"3":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"7":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"7":{"9":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"9":{"0":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488}}},"docs":{}},"docs":{}}}}}}}}}},"e":{"docs":{},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}}}}},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.030973451327433628},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341}}}}},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.04580152671755725}}}}},"i":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0071090047393364926},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.02030456852791878},"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.029940119760479042},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.04608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.023809523809523808},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.017786561264822136},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.014028056112224449},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04145077720207254},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.016260162601626018},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"overview.html":{"ref":"overview.html","tf":0.23300970873786409},"modules.html":{"ref":"modules.html","tf":0.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":5.061440677966102},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010309278350515464}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":5.008247422680412},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.031746031746031744}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.025423728813559324},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":5.015873015873016},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00847457627118644},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.009478672985781991},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.013605442176870748},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":5.012820512820513},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.016494845360824743},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.03686635944700461},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.027777777777777776},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.023715415019762844},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":5.006802721088436},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02710027100271003},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"o":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.025423728813559324},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01984126984126984},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":5.0059288537549405},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":5.008130081300813},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}},"]":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}},"#":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013377926421404682},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.03225806451612903},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.025423728813559324},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":5.009216589861751},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.025423728813559324},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":5.005333333333334},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.025423728813559324},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":5.018433179723503},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.025423728813559324},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":5.007662835249042},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018666666666666668},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.014218009478672985},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.013605442176870748},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":5.003610108303249},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":5.010791366906475},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.04395604395604396},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.02132701421800948},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.019230769230769232},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.06832298136645963},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.014767932489451477},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.014218009478672985},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.019230769230769232},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.010548523206751054}}}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"license.html":{"ref":"license.html","tf":0.020202020202020204},"modules.html":{"ref":"modules.html","tf":0.2},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.016129032258064516},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}}},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.017167381974248927},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}},"s":{"docs":{},":":{"5":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}},"6":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}},"docs":{}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019157088122605363},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}},"u":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01059322033898305},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013824884792626729},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.011857707509881422},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022988505747126436},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.028056112224448898},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.06074766355140187},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.03296703296703297},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.03317535545023697},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.039473684210526314},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.024943310657596373},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.019855595667870037},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.02403846153846154},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04145077720207254},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.06639004149377593},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02575107296137339},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.021929824561403508},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.035256410256410256},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.016260162601626018},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.014388489208633094},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.021164021164021163},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.05309734513274336},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.031055900621118012},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.013618677042801557},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.04},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.0425531914893617},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.027649769585253458},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.014553014553014554},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.08670520231213873},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010309278350515464},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.045871559633027525},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.029411764705882353},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.02262443438914027}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.009478672985781991},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.02564102564102564}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.009615384615384616},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}},"i":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.030456852791878174},"license.html":{"ref":"license.html","tf":0.010101010101010102},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010309278350515464},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.008849557522123894}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"/":{"2":{"4":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}}}}}},"docs":{}},"docs":{}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}},"g":{"docs":{},"h":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"o":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.015228426395939087},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"l":{"docs":{},"e":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"n":{"docs":{},"g":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"x":{"docs":{},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}}}}}}}},"f":{"docs":{},"c":{"3":{"9":{"8":{"6":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}},"docs":{}},"docs":{}},"docs":{}},"5":{"9":{"8":{"8":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"s":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.031914893617021274},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.015228426395939087},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"f":{"docs":{},"e":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02145922746781116},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.021929824561403508},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.02304147465437788},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"r":{"docs":{},"v":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}},"o":{"docs":{},"r":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.11764705882352941},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.04790419161676647},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.04608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.011904761904761904},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.016877637130801686}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"p":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01532567049808429},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":5.009615384615385},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}},"t":{"docs":{},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.022900763358778626}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.338409475465313},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}}},"t":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.039711191335740074},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.04669260700389105},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.030534351145038167},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.04158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.029535864978902954},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.03529411764705882},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.01289134438305709}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903}}}}},"y":{"docs":{},"p":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.075}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.007782101167315175},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"i":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}},"e":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.02304147465437788},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.011857707509881422},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.02666666666666667},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.03006012024048096},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.03271028037383177},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.04395604395604396},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.02843601895734597},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.09210526315789473},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.024943310657596373},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.03429602888086643},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.07692307692307693},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.06217616580310881},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.04149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.02564102564102564},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.03982300884955752},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.031055900621118012},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.04085603112840467},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.04580152671755725},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.10175438596491228},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.112},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.031914893617021274},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.035343035343035345},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.11560693641618497},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.09174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.07258064516129033},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.016877637130801686},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023529411764705882},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.05156537753222836},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027149321266968326},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025}},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}},"p":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.014218009478672985},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}},"6":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}},"docs":{}},"2":{"0":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}},"docs":{}},"3":{"2":{"docs":{"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602}}},"docs":{}},"4":{"1":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495}}},"3":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495}}},"9":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495}}},"docs":{}},"docs":{}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.011857707509881422},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512},"modules.html":{"ref":"modules.html","tf":0.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.016877637130801686},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"r":{"docs":{},"(":{"0":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}},"docs":{}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.0425531914893617}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}}}}}}}},"b":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"y":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09090909090909091}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":5.01058201058201},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"r":{"docs":{},"e":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}},"o":{"docs":{},"w":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.014423076923076924},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.02304147465437788}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.02132701421800948},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.027210884353741496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.008316008316008316},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.010309278350515464},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.04070796460176991}}}}}}},"a":{"docs":{},"d":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.028901734104046242},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.029940119760479042},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.041474654377880185},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.015873015873015872},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.015810276679841896},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.02304147465437788},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.024},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022988505747126436},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.025179856115107913},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00904977375565611},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.023008849557522124}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.018036072144288578},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015544041450777202},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.04580152671755725},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.02197802197802198},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.07258064516129033},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0189873417721519},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023529411764705882},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.010619469026548672}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.02403846153846154},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.01415929203539823}},"s":{"docs":{},":":{"2":{"9":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232}}},"docs":{}},"3":{"2":{"docs":{"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015}}},"4":{"docs":{"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015}}},"docs":{}},"6":{"docs":{"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}},"docs":{}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.031578947368421054},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.031914893617021274},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.025},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.05263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.013824884792626729}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.010548523206751054}}},"a":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}}}}}}},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.0582010582010582},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.009727626459143969},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.024193548387096774}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.01079136690647482}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}}}},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.011904761904761904}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01532567049808429},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.014388489208633094}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.015873015873015872}}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.018050541516245487},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.02079002079002079}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}},"t":{"docs":{},"l":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}}}},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.017167381974248927},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.017543859649122806},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.018433179723502304},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.030456852791878174},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01694915254237288},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.017964071856287425},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.018433179723502304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.024},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01002004008016032},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.08791208791208792},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.030805687203791468},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.022675736961451247},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.036101083032490974},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.019230769230769232},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.022900763358778626},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.019230769230769232},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.017985611510791366},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.08074534161490683},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.04085603112840467},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.061068702290076333},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.056140350877192984},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.035343035343035345},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.03505154639175258},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.0967741935483871},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.07805907172995781},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.08235294117647059},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06261510128913444},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.02262443438914027},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.010033444816053512},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}}}}},"o":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01263537906137184},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.013618677042801557},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.014553014553014554},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.018050541516245487},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.012474012474012475},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.075}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06261510128913444}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}},"i":{"docs":{},"c":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.08294930875576037},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.042666666666666665},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011494252873563218},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.026066350710900472},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.028846153846153848},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02877697841726619},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.02127659574468085}}}}}},"=":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.075}}}}}}}}},"k":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}}},"b":{"docs":{},"l":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0071090047393364926},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.009615384615384616},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.009216589861751152},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01383399209486166},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"i":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}},"u":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.01059322033898305},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.007366482504604052}}}},"e":{"docs":{},"e":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.005988023952095809},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576}}},"a":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"s":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}},"w":{"docs":{},"o":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.011857707509881422},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}},"l":{"docs":{},"i":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.011049723756906077}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}}}}},"u":{"docs":{},"s":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}},"b":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.02666666666666667}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.020066889632107024},"license.html":{"ref":"license.html","tf":0.020202020202020204},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006355932203389831},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01984126984126984},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.014028056112224449},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.004739336492890996},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.011337868480725623},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.017699115044247787},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00847457627118644},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002061855670103093}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371}},"}":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.012711864406779662},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}}}}},"a":{"docs":{},"g":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}},"m":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006012024048096192},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}}}},"r":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.09218436873747494},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.04672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.009478672985781991},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.05263157894736842},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.022675736961451247},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.04326923076923077},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.07772020725388601},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.04564315352697095},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.016025641025641024},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.06637168141592921},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.064},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.07446808510638298},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006185567010309278},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.07339449541284404},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0055248618784530384},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.019230769230769232},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":5.013274336283186},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.011857707509881422},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008016032064128256},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.05319148936170213}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":5.027522935779817},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}},"t":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.007079646017699115}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}},"docs":{}},"4":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"5":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"6":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"docs":{}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0071090047393364926},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.01282051282051282},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0035398230088495575}}}}}}}}},"v":{"4":{"docs":{},".":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"5":{"docs":{},".":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152}}}}},"a":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.01015228426395939},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.012711864406779662},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.0658682634730539},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019157088122605363},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.028056112224448898},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.011848341232227487},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.036101083032490974},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.05699481865284974},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.016025641025641024},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.014388489208633094},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.03501945525291829},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.030534351145038167},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.033264033264033266},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012371134020618556},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.02531645569620253},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.023008849557522124}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023952095808383235},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.011904761904761904},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01532567049808429},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.014218009478672985},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.022435897435897436},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.017985611510791366},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":5.016129032258065},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00847457627118644},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.009478672985781991},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.032490974729241874},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.021400778210116732},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.02702702702702703},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008247422680412371},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":5.0042194092827},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00847457627118644},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.014218009478672985},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.00641025641025641},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":5.0186335403726705},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.016494845360824743},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.027472527472527472},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.031055900621118012},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":5.023529411764706},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.005928853754940711},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007662835249042145},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.007905138339920948},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01532567049808429},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666}}}}},".":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"coverage.html":{"ref":"coverage.html","tf":0.005309734513274336}},"s":{"docs":{},":":{"1":{"0":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542}}},"5":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542}}},"8":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}},"docs":{}},"2":{"0":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}},"1":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}},"2":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}},"4":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542}}},"5":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}},"9":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}},"docs":{}},"4":{"0":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726}}},"2":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726}}},"9":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726}}},"docs":{}},"6":{"9":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726}}},"docs":{}},"7":{"6":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726}}},"docs":{}},"8":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083}}},"docs":{}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":5.007782101167315},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},"a":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736}}}}}},"c":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.009615384615384616},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.004608294930875576},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01383399209486166},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.015873015873015872},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.009025270758122744},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02710027100271003},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.047619047619047616},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.011673151750972763},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.06315789473684211},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.010395010395010396},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022099447513812154},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.07692307692307693}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.005836575875486381},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.006237006237006237},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.058823529411764705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.023952095808383235},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.671191553544494},"coverage.html":{"ref":"coverage.html","tf":0.03008849557522124}}}},"n":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.011976047904191617},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.018433179723502304},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.009881422924901186},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.01532567049808429},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006012024048096192},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005415162454873646},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.015267175572519083},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007194244604316547},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0036101083032490976},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0038910505836575876},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.004158004158004158},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.03164556962025317},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.014732965009208104}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}},"'":{"docs":{},"*":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},".":{"docs":{},"j":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"s":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"*":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.005076142131979695},"changelog.html":{"ref":"changelog.html","tf":0.006688963210702341},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.003968253968253968},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.0038314176245210726},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035971223021582736},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.003952569169960474},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}}}}},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}},"y":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00211864406779661},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.007936507936507936},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.017786561264822136},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010638297872340425},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004008016032064128},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}},"+":{"docs":{},":":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}}}}}}}}},")":{"docs":{},"?":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"(":{"docs":{},"[":{"docs":{},"^":{"docs":{},"/":{"docs":{},"]":{"docs":{},"+":{"docs":{},"(":{"docs":{},"?":{"docs":{},":":{"docs":{},":":{"docs":{},"\\":{"docs":{},"d":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.011848341232227487},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.016025641025641024},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.001976284584980237},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.002369668246445498},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.003205128205128205},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004807692307692308}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0033444816053511705},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.028901734104046242},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}},"e":{"docs":{},"p":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002004008016032064}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.00423728813559322},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.018050541516245487},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.02529182879377432},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.02702702702702703},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004123711340206186},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0189873417721519},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.003683241252302026},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.004524886877828055}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.022900763358778626}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.007633587786259542}}}}}}}}}}}}}}}},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"\\":{"docs":{},"d":{"docs":{},"?":{"docs":{},"*":{"docs":{},"]":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0018050541516245488},"classes/ViewsByStatus.html":{"ref":"classes/ViewsByStatus.html","tf":0.0019455252918287938},"interfaces/ParsedViewDef.html":{"ref":"interfaces/ParsedViewDef.html","tf":0.002079002079002079}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.001841620626151013}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.013574660633484163},"coverage.html":{"ref":"coverage.html","tf":0.0017699115044247787}}}}}}}}}}}}}},"length":5494},"corpusTokens":["0","0..1","0.0","0.333","0.5","0.666","0/1","0/2","0/3","0/4","0/5","0/6","0/7","0/8","0/9","00","02","04","08","1","1.0","1.0.0","1.html#object","1/1","1/2","1/3","1/4","1/5","1/8","1/9","100","11","12","13","15","15998]{@link","17","2","2.1","2.3","2/2","2/5","20","200","2017","2018","204","21","22","23","25","2??').foreach(statu","2xx","3","3/3","3/4","3/7","30","33","4.0.0","4.1.0","4.x","4/4","40","42","5","5/5","5/7","50","6","7","71","75","8","9","9/9","99","999","_data","_data.asobserv","_length","_self","_top","a[resourcelink","a[resourcelink]'},{'nam","aaa","abov","absolut","abstract","accept","access","accessor","accompani","accord","accordingli","account","action","activ","activatedview","activatedview(target","activatedview.navigation.go(activatedview.snapshot.url","actual","actual_compon","ad","add","addsingleview(config","addview","addview(config","addviews(config","against","aim","alia","alias","allow","along","alpha.12","alreadi","altern","alway","analyz","analyze_for_entry_compon","and/or","angular","angular/cli","angular/common","angular/common/http","angular/cor","angular/platform","anoth","anyth","aot","api","apilink","apiloc","apimapp","apiurl","apiurl.normalize(prefix","app","app.compon","app_api_prefix","app_base_href","appcompon","append","applic","application/x.sampl","arg","argument","aris","around","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","array.length","array.t","array.ts:17","array.ts:7","array.ts:9","array[pivot","arraybuff","associ","assum","asterisk","author","automat","avail","awar","b","back","backend","bang","base","base.pathrel","basehref","baseurlnorm","be","befor","behavior","behaviorsubject","behaviorsubject>(initialdata","behaviorsubject>(this.data","better","between","bind","bindabl","bindurl","bindurl(sourc","bindurl(valu","bit","blob","bodi","boolean","bootstrap","bootstrapit","both","boundari","break","broken","brows","browser","browserapiurl","browsermodul","browserurlnorm","bug","buggi","build","buildaft","built","bump","bundl","button","bystatu","c","calcul","call","cancel","case","cast","catch(err","catch(respons","chang","changelog","charact","charg","check","claim","class","click","click(button","client","client.t","client.ts:27","client.ts:35","client.ts:37","client.ts:38","client.ts:39","client.ts:43","client.ts:53","client.ts:60","client.ts:82","close","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","code","cold","collect","combin","common","commonmodul","companion","compar","comparer(el","compil","complet","complex","compon","component_templ","componentfactoryresolv","componentref","components/default","componenttyp","condit","config","config.compon","config.foreach(this.addview","config.qu","config.responsetyp","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","configure(opt","conform","conjunct","connect","consid","consist","consol","console.error(err","const","constant","construct","constructor","constructor(@inject(resource_view","constructor(@opt","constructor(@self","constructor(apimapp","constructor(apiurl","constructor(cli","constructor(compar","constructor(compon","constructor(currentnavig","constructor(navig","constructor(platformstrategi","constructor(priv","constructor(publ","constructor(resourc","constructor(statu","constructor(strategi","constructor(view","constructor(viewcontain","consum","contain","content","contenttyp","context","context.t","context.ts:51","context.ts:54","continu","contract","conveni","convent","convert","copi","copyright","correspond","count","counterpart","coverag","creat","creation","cross","ctrl","ctrlkey","current","currentnavig","currenturl","custom","d*[?x]*\\**$/.test(statu","damag","data","data.bodi","data.statu","data.statustext","data.t","data.target","data.ts:10","data.ts:11","data.ts:12","data.ts:13","data.ts:14","data.ts:15","data.ts:21","data.ts:22","data.ts:28","data.ts:34","data.ts:36","data.ts:37","data.ts:66","data.ts:70","data.ts:74","data.ts:78","data.ts:8","data.ts:9","data.ts:91","data.typ","data.url","datachang","datachangesourc","datasourc","date","deal","debuglog","debuglog.warn('when","debuglog.warn(`when","declar","decor","decoupl","default","defaultcompar","defaultcomparer(a","defaultemptycompon","defaulterrorcompon","defin","definit","definition.t","definition.ts:102","definition.ts:19","definition.ts:29","definition.ts:4","definition.ts:50","definition.ts:73","definition.ts:83","definition.ts:90","definition.ts:95","dep","depend","deprec","dereferenc","describ","descript","despit","destroy","detail","determin","determinist","develop","diagnost","differ","digit","direct","directive({selector","directives/resourc","directli","directori","disabl","disjunct","display","dist/angular","distribut","doc","document","doesn't","dom","domain","don't","donavig","donavigate(path","draft]{@link","drive","dummi","duplic","dure","dvorak","e.g","easi","easili","element","embed","emit","empti","empty.compon","empty.component.t","emptyview","enabl","end","endpoint","engin","equal","err","error","error('invalid","error('path","error('url","error('wildcard","error(`cannot","error(`no","error(`unsupport","error.compon","error.component.t","error.component.ts:13","error.component.ts:15","error.component.ts:18","errorcompon","errorview","escaperegexppattern","escaperegexppattern(","etc","evalu","evaluator.t","event","event.button","event.ctrlkey","event.metakey","eventemitt","everyth","exact","exactli","exampl","examplemodul","except","exclud","exist","expand","expect","explicit","explicitli","export","express","extend","extern","extract","extracttyp","extracttype(respons","factori","factoryprovid","fail","fallback","fals","favour","featur","fetch","fetch(uri","fetch(url","field","file","final","find","fire","first","fit","fix","flag","flatten","follow","forbidden","forc","forget","form","format","fortypes(view","found","free","full","function","furnish","further","futur","gener","get","get$implicit","get(nam","get(uri","get(url","getal","getall(nam","getbasehref","getcomponenttyp","getdata","getdom().getbasehref","getlength","getload","getloc","getnavig","getsnapshot","getsrc","geturl","getviewsbystatus(statu","given","global","go","go(url","grant","group","group.statu","group.statusexp.test(statusstr","group.types.array.find(v","group.types.push","guarante","gulp","hal","handl","happen","hard","has(nam","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","hateoa","header","headernam","headers.t","headers.ts:11","headers.ts:16","headers.ts:21","headers.ts:26","headerviewtypestrategi","helper","here","herebi","hide","hint","holder","honor","host","hostbind","hostlisten","hostlistener('click","href","href.t","href.ts:12","href.ts:13","href.ts:14","href.ts:15","href.ts:16","href.ts:17","href.ts:26","href.ts:56","hreflang","html","html5","http","http://example.com/my/context/api","httpclient","httpheader","httpresourcecli","httprespons","https://github.com/angular/angular/issues/15998","https://github.com/mdvorak/resourc","https://tools.ietf.org/html/draft","https://www.typescriptlang.org/docs/handbook/releas","httpxhrbackend","human","hyperlink","i'm","i.","id","ident","identifi","ignor","imag","immut","implement","impli","implicit","import","includ","inconsist","increment","index","indic","info","info.host","info.pathnam","info.protocol","inform","init","init(protocol","initi","initialdata","inject","inject(app_api_prefix","inject(app_base_href","inject(docu","inject(top_level_navig","inject(type_quality_evalu","injectiontoken","injectiontoken('app_api_prefix","injectiontoken('resource_router_configur","injectiontoken('resource_view","injectiontoken('top_level_navig","injectiontoken('type_quality_evalu","injector","input","insert","insertloc","insertlocation(el","insertlocation(valu","insid","insignific","instal","instanc","instanceof","instead","integ","intend","intention","interfac","intern","internalbasehref","internalhost","internalpathnam","internalprotocol","invalid","invok","isdevmod","islocationrefer","islocationreference(obj","islocationreference(valu","isnavig","isnavigable(obj","isnavigable(target","isnavigable(valu","isnavigable(value.target","issu","it'","itself","join","jsmethodcanbestat","json","json.stringify(config","jsunusedglobalsymbol","keep","kelli","key","kind","know","known","label","languag","later","latest","layout","lead","left","legend","length","level","liabil","liabl","librari","licens","limit","link","link.t","link.ts:12","link.ts:17","link.ts:21","link.ts:22","link.ts:25","link.ts:29","link.ts:37","link.ts:41","link.ts:8","linux","list","listen","liter","load","load(url","loaddataev","loadingvalu","local","localhost","locat","location#path","location#prepareexternalurl","location.path","location.t","location.ts:102","location.ts:110","location.ts:17","location.ts:19","location.ts:38","location.ts:50","location.ts:77","location.ts:86","locationfor","locationfor(el","locationinfo","locationrefer","locationreference#url","locationstrategi","log","log.t","logfntyp","logic","long","longer","low","maintain","make","makenavigableref","makenavigableref(valu","malform","mandatori","mani","manual","map","map(respons","mapapitoview","mapapitoview(url","maplocationurltoapi","mapper","mapper.t","mapper.ts:15","mapper.ts:22","mapper.ts:27","mapper.ts:32","mapper.ts:46","mapviewtoapi","mapviewtoapi(path","mark","match","match(typ","match[1","match[2","match[3","math.floor((start","mean","mechan","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","menu","merchant","merg","messag","metadata","metakey","method","michal","migrat","mimetyp","miscellan","mit","mock","mockurlnorm","mockviewdata(url","mode","model","modifi","modul","module.t","module.ts:46","module.ts:53","module.ts:59","module.ts:65","modulewithprovid","more","move","multi","multipl","my/context/api","mydata","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","namespac","navig","navigableref","navigablerefimpl","navigablerefimpl(valu","navigationhandl","navigationref","necessari","need","nest","never","new","newer","newvalidationerror","newvalidationerror(config","next","next(valu","nextid","ng","ngmodul","ngonchang","ngonchanges(chang","ngondestroy","ngoninit","nice","no_head","noinspect","non","noninfring","noop_navig","nooplogfn","nooplogfn(messag","normal","normalize(url","normalizedstatu","normalizemediatyp","normalizemediatype(contenttyp","normalizemediatype(mimetyp","normalizer.t","normalizer.ts:10","normalizer.ts:12","normalizer.ts:18","normalizer.ts:21","normalizer.ts:25","normalizer.ts:28","normalizer.ts:56","normalizer.ts:63","normalizer.ts:67","normalizer.ts:7","normalizer.ts:75","normalizer.ts:8","normalizer.ts:80","normalizer.ts:9","normalizestatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","not(a)[resourcelink","not(a)[resourcelink]'},{'nam","note","notes/typescript","noth","notic","now","nowildcard","npm","null","number","number.min_safe_integ","obj","obj.go","obj.urlchang","object","object'","object.freeze(config","observ","observable.of(respons","observable.of(this.mockviewdata","observable.of(this.mockviewdata(url","obtain","of.t","of.ts:112","of.ts:115","of.ts:117","of.ts:126","of.ts:136","of.ts:149","of.ts:26","of.ts:37","of.ts:47","of.ts:55","ok","old","on","onchang","onclick","onclick(button","ondestroy","oninit","onlocationchang","op","open","option","options.prefix","options.resourcecli","options.usehash","options.viewtypestrategi","order","origin","otherwis","out","outlet","outlet.t","outlet.ts:19","outlet.ts:20","outlet.ts:22","outlet.ts:25","outlet.ts:29","outlet.ts:33","outlet.ts:38","output","overrid","overridden","overview","packagr","pad","page","param","paramet","pars","parse(respons","parsedviewdef","parser","parseurl","parseurl(this.getbasehref","parseurl(url","particular","pass","path","path).replac","path.replac","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","pathnam","pathrel","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","perform","permiss","permit","permut","person","phase","pivot","platformloc","platformlocationstrategi","platformstrategi","pleas","pointless","portion","posit","possibl","prefix","prepar","prepareexternalurl","prepareexternalurl(url","prepend","presenc","present","press","prevent","previou","primari","principl","print","privat","probabl","problem","produc","product","profil","programmat","propag","proper","properli","properti","protect","protocol","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","public","publish","pure","purpos","push","push(valu","qualiti","qualitycompar","qualitycomparator(a","rang","rare","ration","re","reactiv","read","readabl","readm","readonli","readonlyhead","recommend","recurs","redirect","refactor","refer","reference.t","reference.ts:5","reference.ts:6","reflectiveinjector","reflectiveinjector.fromresolvedproviders(provid","reflectiveinjector.resolv","regardless","regex","regex.t","regexp","regist","registr","registri","registry.t","registry.ts:108","registry.ts:14","registry.ts:15","registry.ts:16","registry.ts:17","registry.ts:27","registry.ts:28","registry.ts:29","registry.ts:39","registry.ts:53","registry.ts:57","registry.ts:79","registry.ts:90","regular","rel","relat","releas","reli","reload","remain","remov","renam","render","replac","repositori","represent","request","requesturl","requir","reset","resolv","resolve(requesturl","resort","resourc","resource_router_configur","resource_view","resourcecli","resourcecontext","resourcecontext(valu","resourcecontext]'},{'nam","resourcecontextdirect","resourcecontextnavigableref","resourcecontextnavigablereffactori","resourcecontextnavigablereffactory(self","resourcedata","resourcedata#data","resourcedata#load","resourcedata#url","resourcedata][resourcedataof","resourcedata][resourcedataof]'},{'nam","resourcedatanavigableref","resourcedataof","resourcedataof(valu","resourcedataofcontext","resourcedataofcontext(resourc","resourcedataofdirect","resourcelink","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourceroutermodule.configur","resourceroutermodule.fortyp","resourcerouteropt","resourceviewcontext","resourceviewcontext(compon","resourceviewdirect","resourceviewregistri","respons","response.bodi","response.head","response.headers.get(this.headernam","response.statu","response.statustext","response.url","responsetyp","rest","restrict","result","retriev","return","reus","rfc3986","rfc5988","right","root","rough","rout","router","router/empti","router/error","router/load","router/pull/24/commit","routerdemo","rule","run","rxjs/add/observable/of","rxjs/add/operator/catch","rxjs/add/operator/fin","rxjs/add/operator/map","rxjs/add/operator/switchmap","rxjs/behaviorsubject","rxjs/observ","rxjs/subject","rxjs/subscript","s","s.add(target.urlchange.subscribe(url","s.statu","safe","same","sampl","sample.compon","samplecompon","saniti","saveconfigur","script","second","secondari","see","seen","select","selector","self","sell","semant","send","sent","serv","server","set","setresourcecontext(valu","setresourcedataof(valu","setsrc(valu","setup","seturl(url","seturl(valu","shall","share","show","side","similar","simpl","simplechang","simpletypequalityevalu","simpletypequalityevaluator(typ","singl","singleapimapp","site","skipself","slash","snapshot","snippet","softwar","someth","sort","sortedarray","sortedarray(qualitycompar","sourc","source.url","source.urlchange.subscribe(url","sourcesubscript","special","specif","spread","src","src(valu","src/lib/src/activ","src/lib/src/api","src/lib/src/components/default","src/lib/src/directives/resourc","src/lib/src/hal","src/lib/src/loc","src/lib/src/navigable.t","src/lib/src/navigable.ts:29","src/lib/src/navigable.ts:32","src/lib/src/navigable.ts:34","src/lib/src/navigable.ts:6","src/lib/src/qual","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/url","src/lib/src/utils/debug","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","src/lib/src/view","src/lib/testing/src/mock","srcchang","start","starttodo","state","statement","static","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","statustext","statustyp","still","store","strategi","strategy.t","strategy.ts:12","strategy.ts:16","strategy.ts:20","strategy.ts:32","strategy.ts:41","strategy.ts:43","strategy.ts:49","strictnullcheck","string","stringtojson","stringtojson(input","stringtojson(response.bodi","strip","structur","subject","sublicens","subscrib","subscribe(data","subscript","subscription.empti","subset","substanti","substr(0","subtyp","success","suffix","super","support","svg","swallow","switch","switchmap","switchmap(url","symlink","syntax","system","t","tabl","tablesort(document.getelementbyid('coverag","tag","take","target","target.go(this.resourcelink","target.url","target=\"_self","target_self","target_top","targettyp","templat","templateref","test","text","therefor","thing","this._data.getvalu","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.apimapper.mapapitoview(url","this.apimapper.mapapitoview(viewurl","this.apimapper.mapviewtoapi(path","this.array","this.array.splice(i","this.client","this.compar","this.component.componenttyp","this.context","this.curr","this.current.component.destroy","this.current.componenttyp","this.current.next(this.data","this.current.target","this.currentnavig","this.currentnavigable.navig","this.data","this.data.config","this.data.config.compon","this.data.next(valu","this.data.target","this.datachang","this.datachangesourc","this.datachangesource.asobserv","this.datachangesource.getvalu","this.datachangesource.next(data","this.destroy","this.document.loc","this.donavigate(path","this.extern","this.getloc","this.getviewsbystatus(normalizedstatu","this.href","this.http.get(url","this.internalbasehref","this.internalhost","this.internalpathnam","this.internalprotocol","this.load","this.load(url","this.loaddataev","this.loaddataevent.next(this.urlvalu","this.loaddataevent.next(valu","this.loadingvalu","this.location.go(path","this.location.iscurrentpathequalto(path","this.location.normalize(url","this.location.path","this.location.prepareexternalurl(url","this.location.prepareexternalurl(viewurl","this.location.subscrib","this.maplocationurltoapi","this.mockviewdata","this.navig","this.navigation.go(this.snapshot.url","this.normalizemediatype(contenttyp","this.onlocationchang","this.parse(respons","this.platformstrategy.getbasehref","this.prefix","this.qual","this.registry.match(typ","this.rend","this.resolve(uri","this.resolver.resolvecomponentfactory(this.data.config.compon","this.resourc","this.resource.data","this.resource.load","this.resource.url","this.resource.urlchange.subscribe((valu","this.resourcelink","this.resourceviewregistry.match(this.typ","this.sourcesubscript","this.sourcesubscription.unsubscrib","this.srcchange.emit(valu","this.statu","this.statusexp","this.strategy.extracttype(respons","this.subscript","this.subscription.unsubscrib","this.target","this.toplevelnavig","this.typ","this.typequalityevalu","this.typequalityevaluator(typ","this.unsupport","this.urlchang","this.urlchange.emit(valu","this.urlchangesource.asobserv","this.urlchangesource.next(this.urlvalu","this.urlchangesource.next(url","this.urlchangesubject.asobserv","this.urlchangesubject.next(this.urlvalu","this.urlsubscript","this.urlsubscription.unsubscrib","this.urlvalu","this.validateviewdefinition(config","this.view.data.subscribe(data","this.viewcontainer.createcomponent(factori","this.viewcontainer.createembeddedview(this.templateref","this.viewcontainer.length","this.viewcontainer.parentinjector","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","those","throw","time","titl","toarray","toarray(config.statu","toarray(config.type).foreach(typ","toarray(valu","todo","token","top","top_level_navig","toplevel","toplevel.navig","toplevelnavig","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","tort","trail","travi","treat","tree","true","ts","two","type","type.t","type_quality_evalu","typealias","typedoc","typeexp","typeof","typequalityevalu","typerefer","types.t","typescript","typic","umd","unabl","unavail","undefin","under","underli","understand","unexpect","unknown","unless","unsupport","until","unusu","updat","upgrad","uri","url","url(url","url(valu","url.match(url_pattern","url.startswith(this.prefix","url.substring(this.prefix.length).replac","url.t","url.ts:10","url.ts:4","url.ts:5","url.ts:6","url_pattern","urlchang","urlchangesourc","urlchangesubject","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlnorm","urlsubscript","urlvalu","us","usag","useclass","usefactori","usehash","usehash}=tru","useless","user","usevalu","usual","util","utils.t","utils/debug","utils/http","utils/norm","utils/pars","utils/sort","utils/wildcard","v.typeexp.test(typ","v4.x","v5.x","valid","validatestatu","validatestatus(config","validatestatusexpress","validatestatusexpression(config","validatetyp","validatetype(config","validateviewdefinit","validateviewdefinition(config","valu","value.target","var","variabl","variant","variou","veri","versa","version","via","vice","view","view.config","view.t","view.ts:10","view.ts:15","view.ts:18","view.ts:20","view.ts:21","view.ts:22","view.ts:24","view.ts:25","view.ts:29","view.ts:40","view.ts:42","view.ts:49","view.ts:69","view.ts:76","view.ts:8","viewcontain","viewcontainerref","viewdata","viewdef","viewsbystatu","viewsbystatus(statu","viewtyperespons","viewtypestrategi","viewurl","visibl","void","w+:)?\\/\\/([^/]+(?::\\d","w+:/.test(path","warn","warranti","way","well","whenev","whether","whole","wildcard","wildcardtoregex","wildcardtoregex('*.js').test('foo.j","wildcardtoregex('*.js').test('foo.jsx","wildcardtoregex('image/*').test('image/png","wildcardtoregex('image/*').test('text/plain","wildcardtoregex(statu","wildcardtoregex(typ","wildcardtoregex(wildcard","window","within","without","won't","work","wrap","wrapper","wrong","x","x\\d?*]/.test(statu","xssi","xssi_prefix","zero","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nresource-router\n\nAngular routing engine that drive views by media types. It loads data itself, and by response Content-Type header\nit displays configured view. It is a replacement for original Angular Router (they cannot be used at the same time).\nThe aim of this library is to allow building of RESTful clients using Angular, following HATEOAS principle.\nSee CHANGELOG for release changes.\nInstallation\nnpm i angular-resource-router --saveConfiguration\nSample snippet how is the router configured.\nIt is very similar to original router, but instead of registering paths, we are registering media types.\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ResourceRouterModule } from 'angular-resource-router';\nimport { AppComponent } from './app.component';\nimport { SampleComponent } from './sample.component';\nimport { ErrorComponent } from './error.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SampleComponent\n  ],\n  imports: [\n    BrowserModule,\n    ResourceRouterModule.configure({\n      prefix: 'api/'\n    }),\n    ResourceRouterModule.forTypes([\n      {\n        type: 'application/x.sample',\n        component: SampleComponent\n      },\n      {\n        status: '*',\n        type: '*',\n        component: ErrorComponent\n      }\n    ])\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class ExampleModule {\n}How It Works\nTODO\nDevelopment\nBefore development, run\nnpm run bootstrapit will create necessary symlinks for build to pass.\nNote: Under linux, you need to change global npm prefix to user accessible directory, see How to Prevent Permissions Errors.\nLibrary\nBuild of the library is performed with\nnpm run buildAfter building, it can be published to NPM repository with\nnpm publish dist/angular-resource-routerDemo app\nLocal development server can be started with\nnpm startTODO\nThings that are yet to be implemented\n\nComplete README\nComplete example\nSupport for resolve and data route configs\nSupport for outlet layouts, outlet resolve\nOutlet context data (name etc)\nNavigation within outlet\nHide element if empty link\nExternal navigation for unknown type\nBuild and publish docs\nTypedoc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceRouterModule\n\n\n\ncluster_ResourceRouterModule_declarations\n\n\n\ncluster_ResourceRouterModule_exports\n\n\n\n\nResourceOutletComponent\n\nResourceOutletComponent\n\n\n\nResourceRouterModule\n\nResourceRouterModule\n\nResourceRouterModule -->\n\nResourceOutletComponent->ResourceRouterModule\n\n\n\n\n\nResourceDataOfDirective\n\nResourceDataOfDirective\n\nResourceRouterModule -->\n\nResourceDataOfDirective->ResourceRouterModule\n\n\n\n\n\nResourceContextDirective\n\nResourceContextDirective\n\nResourceRouterModule -->\n\nResourceContextDirective->ResourceRouterModule\n\n\n\n\n\nResourceViewDirective\n\nResourceViewDirective\n\nResourceRouterModule -->\n\nResourceViewDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkDirective\n\nResourceLinkDirective\n\nResourceRouterModule -->\n\nResourceLinkDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkWithHrefDirective\n\nResourceLinkWithHrefDirective\n\nResourceRouterModule -->\n\nResourceLinkWithHrefDirective->ResourceRouterModule\n\n\n\n\n\nDefaultEmptyComponent\n\nDefaultEmptyComponent\n\nResourceRouterModule -->\n\nDefaultEmptyComponent->ResourceRouterModule\n\n\n\n\n\nDefaultErrorComponent\n\nDefaultErrorComponent\n\nResourceRouterModule -->\n\nDefaultErrorComponent->ResourceRouterModule\n\n\n\n\n\nResourceOutletComponent \n\nResourceOutletComponent \n\nResourceOutletComponent  -->\n\nResourceRouterModule->ResourceOutletComponent \n\n\n\n\n\nResourceDataOfDirective \n\nResourceDataOfDirective \n\nResourceDataOfDirective  -->\n\nResourceRouterModule->ResourceDataOfDirective \n\n\n\n\n\nResourceContextDirective \n\nResourceContextDirective \n\nResourceContextDirective  -->\n\nResourceRouterModule->ResourceContextDirective \n\n\n\n\n\nResourceViewDirective \n\nResourceViewDirective \n\nResourceViewDirective  -->\n\nResourceRouterModule->ResourceViewDirective \n\n\n\n\n\nResourceLinkDirective \n\nResourceLinkDirective \n\nResourceLinkDirective  -->\n\nResourceRouterModule->ResourceLinkDirective \n\n\n\n\n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective  -->\n\nResourceRouterModule->ResourceLinkWithHrefDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n4.1.0 (2018-02-12)\nThis is breaking release, despite it breaks semantic versioning. Its for Angular v4.x applications to allow migration to new model and Angular v5.x\nChanged data used in components to reactive pattern, which allows reuse of created view components.\nBreaking Changes\n\nViewData is no longer available for injection, use ActivatedView instead:\n@Component(...)\nexport class SampleComponent {\n\n  public data: MyData;\n\n  constructor(public view: ActivatedView) {\n  }\n\n  ngOnInit(): void {\n    this.view.data.subscribe(data => this.data = data.body);\n  }\n}\nResourceData directive now needs to be accompanied by [resourceContext] directive:\n...Otherwise navigation (resourceLinks) won't work.\nNote that navigation internals might change in future releases.\n\nMany internal components were changed or moved. See https://github.com/mdvorak/resource-router/pull/24/commits for whole changelog\n\nFeatures\n\nAdded Link interface that describes HAL link.\nAdded ResourceData class that can be used to programmatically load and navigate resource.\nAdded [resourceContext] support directive which can provides navigation context for nested components.\nAdded debugLog that is used when angular does not run in developer mode. This feature will be extended in the future.\n\nResolved Issues\n\n#6 Change ApiLocation and NavigationHandler to reactive pattern\n#7 resource-data directive should provide loading property\n#9 Change ViewData to reactive pattern\n#21 Replace *resource-data directive with simple class\n#23 Broken travis build\n\n\n4.0.0 (2017-12-30)\nBumping to 4.x, to match Angular version.\nMoved from gulp custom build script to ng-packagr.\nBreaking Changes\n\nUpgraded to use HttpClient instead of deprecated Http\nRenamed route config key body to responseType\nresponseType now supports only json and text values - blob was buggy in old implementation \nand its use would be very rare\nRefactored ApiMapper component - there is now ApiUrl and ApiMapper abstract classes, \nwith default implementations.\nTypescript 2.3 (newer is not supported by Angular 4.x)\n\nBug Fixes\n\n#17 [resourceLink] should now properly handle external URLs (those that cannot be mapped to an API endpoint)\nVarious fixes with API prefixes and URL handling in general\n\n\n1.0.0-alpha.12 (2017-04-22)\nNow compiled with strictNullChecks: true typescript option, which leads to explicit \noptional function arguments.\n\nFinal UMD bundle now contains source maps\nExample is now built with @angular/cli\n\nBreaking Changes\n\nMoved to Angular 4.0.0\nMoved to Typescript 2.1+\nDeprecated apiLink directive in favour of new resourceLink (which conforms to Angular naming convention)\nRenamed ApiUrl class to ApiMapper (relates to #13)\n\nFeatures\n\nCompiled with strictNullChecks\nresourceLink is new directive, which fixes navigation problems, page reloads, and works both on  (with more features) and other tags like  (closes #15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2017 Michal Dvorak, https://github.com/mdvorak/resource-router\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        ResourceRouterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceRouterModule.html":{"url":"modules/ResourceRouterModule.html","title":"module - ResourceRouterModule","body":"\n                   \n\n\n\n\n  Modules\n  ResourceRouterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceRouterModule\n\n\n\ncluster_ResourceRouterModule_declarations\n\n\n\ncluster_ResourceRouterModule_exports\n\n\n\n\nResourceOutletComponent\n\nResourceOutletComponent\n\n\n\nResourceRouterModule\n\nResourceRouterModule\n\nResourceRouterModule -->\n\nResourceOutletComponent->ResourceRouterModule\n\n\n\n\n\nResourceDataOfDirective\n\nResourceDataOfDirective\n\nResourceRouterModule -->\n\nResourceDataOfDirective->ResourceRouterModule\n\n\n\n\n\nResourceContextDirective\n\nResourceContextDirective\n\nResourceRouterModule -->\n\nResourceContextDirective->ResourceRouterModule\n\n\n\n\n\nResourceViewDirective\n\nResourceViewDirective\n\nResourceRouterModule -->\n\nResourceViewDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkDirective\n\nResourceLinkDirective\n\nResourceRouterModule -->\n\nResourceLinkDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkWithHrefDirective\n\nResourceLinkWithHrefDirective\n\nResourceRouterModule -->\n\nResourceLinkWithHrefDirective->ResourceRouterModule\n\n\n\n\n\nDefaultEmptyComponent\n\nDefaultEmptyComponent\n\nResourceRouterModule -->\n\nDefaultEmptyComponent->ResourceRouterModule\n\n\n\n\n\nDefaultErrorComponent\n\nDefaultErrorComponent\n\nResourceRouterModule -->\n\nDefaultErrorComponent->ResourceRouterModule\n\n\n\n\n\nResourceOutletComponent \n\nResourceOutletComponent \n\nResourceOutletComponent  -->\n\nResourceRouterModule->ResourceOutletComponent \n\n\n\n\n\nResourceDataOfDirective \n\nResourceDataOfDirective \n\nResourceDataOfDirective  -->\n\nResourceRouterModule->ResourceDataOfDirective \n\n\n\n\n\nResourceContextDirective \n\nResourceContextDirective \n\nResourceContextDirective  -->\n\nResourceRouterModule->ResourceContextDirective \n\n\n\n\n\nResourceViewDirective \n\nResourceViewDirective \n\nResourceViewDirective  -->\n\nResourceRouterModule->ResourceViewDirective \n\n\n\n\n\nResourceLinkDirective \n\nResourceLinkDirective \n\nResourceLinkDirective  -->\n\nResourceRouterModule->ResourceLinkDirective \n\n\n\n\n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective  -->\n\nResourceRouterModule->ResourceLinkWithHrefDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/src/resource-router-module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResourceOutletComponent\n                            \n                            \n                                ResourceDataOfDirective\n                            \n                            \n                                ResourceContextDirective\n                            \n                            \n                                ResourceViewDirective\n                            \n                            \n                                ResourceLinkDirective\n                            \n                            \n                                ResourceLinkWithHrefDirective\n                            \n                            \n                                DefaultEmptyComponent\n                            \n                            \n                                DefaultErrorComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResourceOutletComponent\n                            \n                            \n                                    ResourceDataOfDirective\n                            \n                            \n                                    ResourceContextDirective\n                            \n                            \n                                    ResourceViewDirective\n                            \n                            \n                                    ResourceLinkDirective\n                            \n                            \n                                    ResourceLinkWithHrefDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {\n  APP_BASE_HREF,\n  CommonModule,\n  HashLocationStrategy,\n  Location,\n  LocationStrategy,\n  PathLocationStrategy,\n  PlatformLocation\n} from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional, Type } from '@angular/core';\nimport { ApiMapper } from './api-mapper';\nimport { ApiLocation } from './api-location';\nimport { HeaderViewTypeStrategy, ViewTypeStrategy } from './view-type-strategy';\nimport { RESOURCE_VIEWS, ResourceViewRegistry } from './resource-view-registry';\nimport { ViewDef } from './view-definition';\nimport { ResourceLinkDirective } from './directives/resource-link';\nimport { ResourceLinkWithHrefDirective } from './directives/resource-link-with-href';\nimport { ResourceOutletComponent } from './directives/resource-outlet';\nimport { HttpResourceClient, ResourceClient } from './resource-client';\nimport { ResourceDataOfDirective } from './directives/resource-data-of';\nimport { ResourceContextDirective } from './directives/resource-context';\nimport { ResourceViewDirective } from './directives/resource-view';\nimport { DefaultEmptyComponent } from './components/default-empty.component';\nimport { DefaultErrorComponent } from './components/default-error.component';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING } from './system-media-types';\nimport { BrowserUrlNormalizer, UrlNormalizer } from './url-normalizer';\nimport { APP_API_PREFIX, SingleApiMapper } from './single-api-mapper';\n\n\nexport const RESOURCE_ROUTER_CONFIGURATION = new InjectionToken('RESOURCE_ROUTER_CONFIGURATION');\n\n\n/**\n * Set of global configuration options for {@link ResourceRouterModule}.\n */\nexport interface ResourceRouterOptions {\n  /**\n   * Prefix for the URL. Can be base-relative, host-relative or absolute.\n   * Always should however end with slash ('/').\n   *\n   * When using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\n   * That is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\n   *\n   * Another way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n   */\n  readonly prefix: string;\n\n  /**\n   * Enables hash-bang navigation mode. Default is HTML5 mode.\n   *\n   * Read {@link #prefix} details when setting to true.\n   */\n  readonly useHash?: boolean;\n\n  /**\n   * Changes implementation of {@link ViewTypeStrategy}.\n   * Default is {@link HeaderViewTypeStrategy} using `Content-Type` header.\n   */\n  readonly viewTypeStrategy?: Type;\n\n  /**\n   * Changes implementation of {@link ResourceClient}.\n   * Default is {@link HttpResourceClient}.\n   */\n  readonly resourceClient?: Type;\n}\n\n\n@NgModule({\n  declarations: [\n    ResourceOutletComponent,\n    ResourceDataOfDirective,\n    ResourceContextDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective,\n    DefaultEmptyComponent,\n    DefaultErrorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ResourceOutletComponent,\n    ResourceDataOfDirective,\n    ResourceContextDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective\n  ]\n})\nexport class ResourceRouterModule {\n\n  static configure(options: ResourceRouterOptions): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation,\n            [new Inject(APP_BASE_HREF), new Optional()],\n            RESOURCE_ROUTER_CONFIGURATION\n          ]\n        },\n        Location,\n        {\n          provide: UrlNormalizer,\n          useClass: BrowserUrlNormalizer\n        },\n        {\n          provide: ApiMapper,\n          useClass: SingleApiMapper\n        },\n        ApiLocation,\n        ResourceViewRegistry,\n        {\n          provide: APP_API_PREFIX,\n          useValue: options.prefix\n        },\n        {\n          provide: RESOURCE_ROUTER_CONFIGURATION,\n          useValue: options\n        },\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: [emptyView(), errorView()],\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: [DefaultErrorComponent, DefaultEmptyComponent],\n          multi: true\n        },\n        {\n          provide: ViewTypeStrategy,\n          useClass: options.viewTypeStrategy || HeaderViewTypeStrategy\n        },\n        {\n          provide: ResourceClient,\n          useClass: options.resourceClient || HttpResourceClient\n        }\n      ]\n    };\n  }\n\n  static forTypes(views: ViewDef[]): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: views,\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: views,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function provideLocationStrategy(platformLocationStrategy: PlatformLocation, baseHref: string, options: ResourceRouterOptions) {\n  return options.useHash\n    ? new HashLocationStrategy(platformLocationStrategy, baseHref)\n    : new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function emptyView(): ViewDef {\n  return {\n    component: DefaultEmptyComponent,\n    status: 204,\n    type: [MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING],\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function errorView(): ViewDef {\n  return {\n    component: DefaultErrorComponent,\n    status: '*',\n    type: '*',\n    responseType: 'text',\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEmptyComponent.html":{"url":"components/DefaultEmptyComponent.html","title":"component - DefaultEmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEmptyComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/components/default-empty.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  template: ''\n})\nexport class DefaultEmptyComponent {\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceContextDirective', 'selector': '[resourceContext]'},{'name': 'ResourceDataOfDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultErrorComponent.html":{"url":"components/DefaultErrorComponent.html","title":"component - DefaultErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultErrorComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/components/default-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                Error loading a view {{data.type}} from resource    {{data.url}}\n  {{data.status}} {{data.statusText}}\n  {{data.body}}\n            \n\n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(view: ActivatedView)\n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:13\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      view\n                                                      \n                                                                ActivatedView\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:18\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                data\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            data:     ViewData\n    \n                        \n                    \n                        \n                            \n                                Type :     ViewData\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:13\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                view\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            view:     ActivatedView\n    \n                        \n                    \n                        \n                            \n                                Type :     ActivatedView\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:15\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedView } from '../activated-view';\nimport { ViewData } from '../view-data';\n\n@Component({\n  template: `Error loading a view {{data.type}} from resource\n    {{data.url}}\n  {{data.status}} {{data.statusText}}\n  {{data.body}}`\n})\nexport class DefaultErrorComponent implements OnInit {\n\n  public data: ViewData;\n\n  constructor(public view: ActivatedView) {\n  }\n\n  ngOnInit(): void {\n    this.view.data.subscribe(data => this.data = data);\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Error loading a view {{data.type}} from resource    {{data.url}}  {{data.status}} {{data.statusText}}  {{data.body}}'\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceContextDirective', 'selector': '[resourceContext]'},{'name': 'ResourceDataOfDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceOutletComponent.html":{"url":"components/ResourceOutletComponent.html","title":"component - ResourceOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceOutletComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/directives/resource-outlet.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                    \n                        ResourceData\n                        ()\n                        ()\n                    \n                \n            \n\n\n            \n                selector\n                resource-outlet\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Public\n                                resource\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                src\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                srcChange\n                            \n                        \n                    \n                \n                \n                    \n                        Accessors\n                    \n                \n                \n                    \n                        \n                            \n                                src\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(resource: ResourceData)\n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:20\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      resource\n                                                      \n                                                                ResourceData\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            src\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:38\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            srcChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:19\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnDestroy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnDestroy()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:29\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:25\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Readonly\n                                    Public\n                                resource\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            resource:     ResourceData\n    \n                        \n                    \n                        \n                            \n                                Type :     ResourceData\n    \n                            \n                        \n                        \n                            \n                                Decorators : Self\n                            \n                        \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:22\n                                \n                            \n    \n    \n                \n            \n    \n\n    \n        \n            Accessors\n        \n            \n                \n                    \n                        \n                            \n                            src\n                        \n                    \n    \n                    \n                        \n                            getsrc()\n                        \n                    \n                                \n                                    \n                                        Defined in src/lib/src/directives/resource-outlet.ts:33\n                                    \n                                \n    \n                    \n                        \n                            setsrc(value: string)\n                        \n                    \n                                \n                                    \n                                        Defined in src/lib/src/directives/resource-outlet.ts:38\n                                    \n                                \n                \n            \n    \n\n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, Self } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ResourceData, resourceDataNavigableRef } from '../resource-data';\nimport { topLevelNavigableRef } from '../navigable';\n\n\n@Component({\n  selector: 'resource-outlet',\n  template: '',\n  providers: [\n    ResourceData,\n    resourceDataNavigableRef(),\n    topLevelNavigableRef()\n  ]\n})\nexport class ResourceOutletComponent implements OnInit, OnDestroy {\n\n  @Output()\n  public readonly srcChange = new EventEmitter();\n  private subscription = Subscription.EMPTY;\n\n  constructor(@Self() public readonly resource: ResourceData) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.resource.urlChange.subscribe((value: string) => this.srcChange.emit(value));\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  get src(): string {\n    return this.resource.url;\n  }\n\n  @Input()\n  set src(value: string) {\n    this.resource.url = value;\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceContextDirective', 'selector': '[resourceContext]'},{'name': 'ResourceDataOfDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceContextDirective.html":{"url":"directives/ResourceContextDirective.html","title":"directive - ResourceContextDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceContextDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-context.ts\n        \n\n            \n                Description\n            \n            \n                Directive that provides navigation boundaries for loaded resources (usually via ResourceData).\nIt should be also used as companion directive for ResourceDataOfDirective.\nExample\nNote that this is intentionally unusual setup, to show alternative ways for application to load data.\nFor more common use, see ResourceDataOfDirective example.\n\\@Component({\n   providers: [ResourceData]\n})\nexport class AppComponent {\n   constructor(@Self() public readonly resource: ResourceData) {\n   }\n}\n   Next\n   \nNote that in previous example, [resourceContext] directive could be replaced by programmatically\nproviding navigation context in the AppComponent, which is exactly what this directive does.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                ()\n                                ()\n                            \n                        \n                    \n\n                    \n                        selector\n                        [resourceContext]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        navigable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceContext\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceContext\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resourceContext\n                                \n                                \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-context.ts:54\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        navigable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    navigable:     Navigable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Navigable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-context.ts:51\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    resourceContext\n                                \n                            \n            \n            \n                            \n                                \n                                    setresourceContext(value: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-context.ts:54\n                                            \n                                        \n                        \n                    \n            \n\n    \n\n\n    \n        import { Directive, FactoryProvider, Input, Self } from '@angular/core';\nimport { isNavigable, Navigable, NavigableRef, topLevelNavigableRef } from '../navigable';\nimport { ViewData } from '../view-data';\nimport { ResourceData } from '../resource-data';\nimport { ResourceDataOfDirective } from './resource-data-of';\n\n\nconst NOOP_NAVIGABLE: Navigable = {\n  go() {\n  }\n};\n\n\n/**\n * Directive that provides navigation boundaries for loaded resources (usually via {@link ResourceData}).\n *\n * It should be also used as companion directive for {@link ResourceDataOfDirective}.\n *\n * ## Example\n * Note that this is intentionally unusual setup, to show alternative ways for application to load data.\n * For more common use, see {@link ResourceDataOfDirective} example.\n *\n * ```ts\n * \\@Component({\n *   providers: [ResourceData]\n * })\n * export class AppComponent {\n *   constructor(@Self() public readonly resource: ResourceData) {\n *   }\n * }\n * ```\n * ```html\n * \n *   Next\n *   \n * \n * ```\n *\n * Note that in previous example, `[resourceContext]` directive could be replaced by programmatically\n * providing navigation context in the `AppComponent`, which is exactly what this directive does.\n */\n@Directive({\n  selector: '[resourceContext]',\n  providers: [\n    resourceContextNavigableRef(),\n    topLevelNavigableRef()\n  ]\n})\nexport class ResourceContextDirective extends NavigableRef {\n\n  navigable: Navigable;\n\n  @Input()\n  set resourceContext(value: Navigable | ViewData | undefined) {\n    if (isNavigable(value)) {\n      // Directly navigable\n      this.navigable = value;\n    } else if (value && isNavigable(value.target)) {\n      // ViewData for easy use with resourceDataOf\n      this.navigable = value.target;\n    } else {\n      // Resort to no-op, since during loading phases, this actually might be undefined,\n      // and while it is useless at that state, it might be hard to work around it\n      this.navigable = NOOP_NAVIGABLE;\n    }\n  }\n}\n\nexport function resourceContextNavigableRef(): FactoryProvider {\n  return {\n    provide: NavigableRef,\n    useFactory: resourceContextNavigableRefFactory,\n    deps: [\n      [ResourceContextDirective, new Self()]\n    ]\n  };\n}\n\n/**\n * @internal\n */\nexport function resourceContextNavigableRefFactory(self: ResourceContextDirective) {\n  return self;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceDataOfDirective.html":{"url":"directives/ResourceDataOfDirective.html","title":"directive - ResourceDataOfDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceDataOfDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-data-of.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive, that loads the data from given source, and allows custom data representation.\nThis is more complex variant of ResourceOutletComponent. It is needed when you need to show\nsome generic content along with viewed directive, which also depends on loaded data, like menu.\nNote that until issue [#15998]{@link https://github.com/angular/angular/issues/15998} is resolved,\nthis directive must be used in conjunction with {@link ResourceContextDirective}, as seen in the example.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \n\n\n\n\n\n\n\n\n\nBack\n\n\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                ResourceData\n                                ()\n                                ()\n                            \n                        \n                    \n\n                    \n                        selector\n                        [resourceData][resourceDataOf]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        resource\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngOnDestroy\n                                    \n                                    \n                                        ngOnInit\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceDataOf\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        urlChange\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceDataOf\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(resource: ResourceData, viewContainer: ViewContainerRef, templateRef: TemplateRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:115\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              resource\n                                                              \n                                                                        ResourceData\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              viewContainer\n                                                              \n                                                                        ViewContainerRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              templateRef\n                                                              \n                                                                        TemplateRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resourceDataOf\n                                \n                                \n                                    Location, from which are data loaded.\nThis might be either string (note that two-way binding is not directly supported for structural directives,\nsee {@link #urlChange}), or {@link LocationReference}, which provides automatic two-way binding\nfor the {@link LocationReference#url}.\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:149\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    urlChange\n                                \n                                \n                                    Emits event whenever underlying ResourceData changes.\nNote that there is no way to bind to this event when using asterisk (*resourceData=) syntax. This is Angular\nlimitation.\nExample:\n\n    \n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:112\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnDestroy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnDestroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:136\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnInit\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnInit()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:126\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        resource\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    resource:     ResourceData\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceData\n            \n                                    \n                                \n                                \n                                    \n                                        Decorators : Self\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:117\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    resourceDataOf\n                                \n                            \n            \n            \n                            \n                                \n                                    setresourceDataOf(value: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data-of.ts:149\n                                            \n                                        \n                                \n                                    \n                                            Location, from which are data loaded.\n            This might be either string (note that two-way binding is not directly supported for structural directives,\n            see {@link #urlChange}), or {@link LocationReference}, which provides automatic two-way binding\n            for the {@link LocationReference#url}.\n            \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                Type\n                                                                Optional\n                                                                Description\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                  value\n                                                                  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n            \n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Self,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { ViewData } from '../view-data';\nimport { ResourceData, resourceDataNavigableRef } from '../resource-data';\nimport { Subscription } from 'rxjs/Subscription';\nimport { bindUrl, isLocationReference, LocationReference } from '../location-reference';\nimport { ResourceOutletComponent } from './resource-outlet';\nimport { topLevelNavigableRef } from '../navigable';\nimport { ResourceContextDirective } from './resource-context';\n\n\n/**\n * Context for structural directive {@link ResourceDataOfDirective}.\n *\n * For examples see the directive docs.\n */\nexport class ResourceDataOfContext {\n  constructor(private readonly resource: ResourceData) {\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  /**\n   * Default variable value. Contains currently loaded data.\n   * Never undefined.\n   *\n   * Provides value from {@link ResourceData#data}.\n   */\n  get $implicit(): ViewData {\n    return this.resource.data;\n  }\n\n  /**\n   * Contains currently loaded data.\n   * Never undefined.\n   *\n   * Provides value from {@link ResourceData#data}.\n   */\n  get data(): ViewData {\n    return this.resource.data;\n  }\n\n  /**\n   * Loading flag for this directive.\n   * Provides value from {@link ResourceData#loading}.\n   */\n  get loading(): boolean {\n    return this.resource.loading;\n  }\n}\n\n\n/**\n * Structural directive, that loads the data from given source, and allows custom data representation.\n *\n * This is more complex variant of {@link ResourceOutletComponent}. It is needed when you need to show\n * some generic content along with viewed directive, which also depends on loaded data, like menu.\n *\n * Note that until issue [#15998]{@link https://github.com/angular/angular/issues/15998} is resolved,\n * this directive must be used in conjunction with {@link ResourceContextDirective}, as seen in the example.\n *\n * @example\n * \n * \n *   \n *   \n *\n *   \n *   \n *\n *   \n *   \n *     Back\n *   \n * \n */\n@Directive({\n  selector: '[resourceData][resourceDataOf]',\n  providers: [\n    ResourceData,\n    resourceDataNavigableRef(),\n    topLevelNavigableRef()\n  ]\n})\nexport class ResourceDataOfDirective implements OnInit, OnDestroy {\n\n  /**\n   * Emits event whenever underlying {@link ResourceData#url} changes.\n   *\n   * Note that there is no way to bind to this event when using asterisk (`*resourceData=`) syntax. This is Angular\n   * limitation.\n   *\n   * Example:\n   * ```html\n   *\n   *    \n   *\n   *```\n   */\n  @Output()\n  readonly urlChange = new EventEmitter();\n  private readonly context: ResourceDataOfContext;\n  private urlSubscription = Subscription.EMPTY;\n  private sourceSubscription = Subscription.EMPTY;\n\n  constructor(@Self() public readonly resource: ResourceData,\n              private readonly viewContainer: ViewContainerRef,\n              private readonly templateRef: TemplateRef) {\n    this.context = new ResourceDataOfContext(resource);\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.viewContainer.createEmbeddedView(this.templateRef, this.context);\n\n    // Note: We don't need listen to this.urlChange, since we don't store the url, we just propagate event\n    this.urlSubscription = this.resource.urlChange.subscribe((value: string) => this.urlChange.emit(value));\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this.urlSubscription.unsubscribe();\n    this.sourceSubscription.unsubscribe();\n  }\n\n  /**\n   * Location, from which are data loaded.\n   *\n   * This might be either string (note that two-way binding is not directly supported for structural directives,\n   * see {@link #urlChange}), or {@link LocationReference}, which provides automatic two-way binding\n   * for the {@link LocationReference#url}.\n   */\n  @Input()\n  set resourceDataOf(value: string | LocationReference | undefined) {\n    // Remove old source (if any)\n    this.sourceSubscription.unsubscribe();\n\n    if (typeof value === 'string') {\n      // Simple one-way URL bind\n      this.resource.url = value;\n    } else if (isLocationReference(value)) {\n      // Bind urls to new\n      this.sourceSubscription = bindUrl(value, this.resource);\n    } else {\n      // Reset\n      this.resource.url = '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceLinkDirective.html":{"url":"directives/ResourceLinkDirective.html","title":"directive - ResourceLinkDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceLinkDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-link.ts\n        \n\n            \n                Description\n            \n            \n                Note: This is limited version of resourceLink, which works on any element, but does not support\nopening new windows with CTRL key and external URLs.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        :not(a)[resourceLink]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceLink\n                                    \n                                    \n                                        target\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        click\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(currentNavigable?: NavigableRef, topLevelNavigable?: NavigableRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              currentNavigable\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              topLevelNavigable\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resourceLink\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:21\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    target\n                                \n                                \n                                      \n                                        Type:    TargetType\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:22\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:29\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Inject, Input, Optional } from '@angular/core';\nimport { isNavigable, Navigable, NavigableRef, TOP_LEVEL_NAVIGABLE } from '../navigable';\nimport { debugLog } from '../utils/debug-log';\n\n\nexport const TARGET_SELF = '_self';\nexport const TARGET_TOP = '_top';\n\nexport type TargetType = Navigable | typeof TARGET_SELF | typeof TARGET_TOP;\n\n\n/**\n * Note: This is limited version of resourceLink, which works on any element, but does not support\n * opening new windows with CTRL key and external URLs.\n */\n@Directive({\n  selector: ':not(a)[resourceLink]'\n})\nexport class ResourceLinkDirective {\n\n  @Input() resourceLink: string;\n  @Input() target?: TargetType;\n\n  constructor(@Optional() private readonly currentNavigable?: NavigableRef,\n              @Optional() @Inject(TOP_LEVEL_NAVIGABLE) private readonly topLevelNavigable?: NavigableRef) {\n  }\n\n  @HostListener('click')\n  onClick(): boolean {\n    // Handle target\n    let target = this.target;\n\n    if (typeof target === 'string' && target) {\n      if (target === TARGET_SELF) {\n        target = this.currentNavigable && this.currentNavigable.navigable;\n        // Warn if undefined\n        if (!target) {\n          debugLog.warn('When resourceLink is not in a resource-view, target=\"_self\" is not supported');\n        }\n      } else if (target === TARGET_TOP) {\n        target = undefined;\n      } else {\n        throw new Error(`Unsupported target '${target}', use  tag instead`);\n      }\n    }\n\n    // Fallback to page navigation\n    if (!target) {\n      // Fallback to current when top-level is unavailable\n      const topLevel = this.topLevelNavigable || this.currentNavigable;\n      target = topLevel && topLevel.navigable;\n      // Warn if undefined\n      if (!target) {\n        debugLog.warn(`When resourceLink is not embedded in a  component, ` +\n          `it must have target set to a Navigable instance - navigation to \"${this.resourceLink}\" canceled`);\n      }\n    }\n\n    // Navigate\n    if (isNavigable(target)) {\n      target.go(this.resourceLink);\n    }\n\n    // And cancel click\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceLinkWithHrefDirective.html":{"url":"directives/ResourceLinkWithHrefDirective.html","title":"directive - ResourceLinkWithHrefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceLinkWithHrefDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-link-with-href.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        a[resourceLink]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngOnChanges\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        external\n                                    \n                                    \n                                        resourceLink\n                                    \n                                    \n                                        target\n                                    \n                                    \n                                        type\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostBindings\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        href\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        click\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiMapper: ApiMapper, location: Location, resourceViewRegistry: ResourceViewRegistry, currentNavigable?: NavigableRef, topLevelNavigable?: NavigableRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiMapper\n                                                              \n                                                                        ApiMapper\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              location\n                                                              \n                                                                        Location\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              resourceViewRegistry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              currentNavigable\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              topLevelNavigable\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    external\n                                \n                                \n                                    \n                                      Default value: false\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:16\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resourceLink\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:13\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    target\n                                \n                                \n                                      \n                                        Type:    Navigable | string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:15\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    type\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:14\n                                        \n                                    \n                        \n                    \n            \n\n\n            \n                HostBindings        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        href\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    href:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event.button' '$event.ctrlKey' '$event.metaKey' \n                                    \n                                \n                            \n                                \n            click(button: number, ctrlKey: boolean, metaKey: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:56\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnChanges\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnChanges()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Directive, HostBinding, HostListener, Inject, Input, OnChanges, Optional } from '@angular/core';\nimport { TARGET_SELF, TARGET_TOP } from './resource-link';\nimport { ApiMapper } from '../api-mapper';\nimport { ResourceViewRegistry } from '../resource-view-registry';\nimport { isNavigable, Navigable, NavigableRef, TOP_LEVEL_NAVIGABLE } from '../navigable';\nimport { Location } from '@angular/common';\nimport { debugLog } from '../utils/debug-log';\n\n@Directive({selector: 'a[resourceLink]'})\nexport class ResourceLinkWithHrefDirective implements OnChanges {\n\n  @HostBinding() href: string;\n  @Input() resourceLink: string;\n  @Input() type?: string;\n  @Input() target?: Navigable | string;\n  @Input() external = false;\n  private unsupported = false;\n\n  constructor(private readonly apiMapper: ApiMapper,\n              private readonly location: Location,\n              private readonly resourceViewRegistry: ResourceViewRegistry,\n              @Optional() private readonly currentNavigable?: NavigableRef,\n              @Optional() @Inject(TOP_LEVEL_NAVIGABLE) private readonly topLevelNavigable?: NavigableRef) {\n  }\n\n  ngOnChanges(): void {\n    let unsupported = this.external;\n\n    // Is the link supported? Note that its pointless for external links\n    if (this.type && !unsupported) {\n      // Is it known type for successful response?\n      // Note that this mechanism does not work for other status codes, you will have to set [external] manually\n      unsupported = !this.resourceViewRegistry.match(this.type, 200);\n    }\n\n    // Map to API, if it fails, mark as external\n    let viewUrl = this.resourceLink || '';\n    if (viewUrl && !unsupported) {\n      // Map API to View\n      const url = this.apiMapper.mapApiToView(viewUrl);\n      if (url) {\n        // Use mapped url, since its application link\n        viewUrl = url;\n      } else {\n        // Unsupported location\n        unsupported = true;\n      }\n    }\n\n    // Store mapped URL to href\n    this.unsupported = unsupported;\n    this.href = unsupported ? viewUrl : this.location.prepareExternalUrl(viewUrl);\n  }\n\n  @HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey'])\n  onClick(button: number, ctrlKey: boolean, metaKey: boolean): boolean {\n    // Let the browser do the navigation if any key was pressed or this link unsupported\n    if (button !== 0 || ctrlKey || metaKey || !this.resourceLink || this.unsupported) {\n      return true;\n    }\n\n    // Handle target\n    let target = this.target;\n\n    if (typeof target === 'string') {\n      if (target === TARGET_SELF) {\n        target = this.currentNavigable && this.currentNavigable.navigable;\n        // Warn if undefined\n        if (!target) {\n          debugLog.warn('When resourceLink is not in a resource-view, target=\"_self\" is not supported');\n        }\n      } else if (target === TARGET_TOP) {\n        target = undefined;\n      } else {\n        // Custom target, open new window\n        return true;\n      }\n    }\n\n    // Fallback to page navigation\n    if (!target) {\n      // Fallback to current when top-level is unavailable\n      const topLevel = this.topLevelNavigable || this.currentNavigable;\n      target = topLevel && topLevel.navigable;\n      // Warn if undefined\n      if (!target) {\n        debugLog.warn(`When resourceLink is not embedded in a  component, ` +\n          `it must have target set to a Navigable instance - navigation to \"${this.resourceLink}\" canceled`);\n      }\n    }\n\n    if (isNavigable(target)) {\n      // Navigate using original non-mapped link\n      target.go(this.resourceLink);\n    }\n\n    // Cancel click\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceViewDirective.html":{"url":"directives/ResourceViewDirective.html","title":"directive - ResourceViewDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceViewDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-view.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        resource-view\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        destroy\n                                    \n                                    \n                                        ngOnChanges\n                                    \n                                    \n                                        render\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        data\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(viewContainer: ViewContainerRef, resolver: ComponentFactoryResolver, navigableRef?: NavigableRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              viewContainer\n                                                              \n                                                                        ViewContainerRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              resolver\n                                                              \n                                                                        ComponentFactoryResolver\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              navigableRef\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    data\n                                \n                                \n                                      \n                                        Type:    ViewData\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:40\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        destroy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            destroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:69\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnChanges\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnChanges(changes: SimpleChanges)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:49\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              changes\n                                                              \n                                                                      SimpleChanges\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        render\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            render()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:76\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  OnChanges,\n  Optional,\n  ReflectiveInjector,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport 'rxjs/add/operator/switchMap';\nimport { ViewData } from '../view-data';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ActivatedView } from '../activated-view';\nimport { Navigable, NavigableRef } from '../navigable';\n\nclass ResourceViewContext {\n\n  constructor(public readonly component: ComponentRef,\n              public readonly target: Navigable,\n              public readonly data: BehaviorSubject>) {\n  }\n\n  get componentType() {\n    return this.component.componentType;\n  }\n\n  next(value: ViewData) {\n    this.data.next(value);\n  }\n}\n\n@Directive({\n  selector: 'resource-view'\n})\nexport class ResourceViewDirective implements OnChanges {\n\n  @Input()\n  data?: ViewData;\n\n  private current: ResourceViewContext | null = null;\n\n  constructor(private readonly viewContainer: ViewContainerRef,\n              private readonly resolver: ComponentFactoryResolver,\n              @Optional() private readonly navigableRef?: NavigableRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Show nothing when there is nothing to show\n    if (!this.data || !this.data.config || !this.data.config.component) {\n      this.destroy();\n      return;\n    }\n\n    // Is this same component as currently visible?\n    if (this.current\n      && this.data.config.component === this.current.componentType\n      // Note: data.target won't change during normal use\n      && this.data.target === this.current.target) {\n      // Propagate new value instead of component re-creation\n      this.current.next(this.data);\n    } else {\n      // Display new component (destroys old one)\n      this.render();\n    }\n  }\n\n  destroy() {\n    if (this.current) {\n      this.current.component.destroy();\n      this.current = null;\n    }\n  }\n\n  render() {\n    // Destroy current view\n    this.destroy();\n\n    // Ignore when there is nothing to render\n    if (!this.data || !this.data.config || !this.data.config.component) {\n      return;\n    }\n\n    // Prepare data observable\n    const dataSource = new BehaviorSubject>(this.data);\n    const target = this.data.target;\n\n    // Create component\n    const factory = this.resolver.resolveComponentFactory(this.data.config.component);\n    const providers = ReflectiveInjector.resolve([\n      {\n        provide: ActivatedView,\n        useValue: new ActivatedView(target, dataSource)\n      }\n    ]);\n    const injector = ReflectiveInjector.fromResolvedProviders(providers, this.viewContainer.parentInjector);\n    const component = this.viewContainer.createComponent(factory, this.viewContainer.length, injector, []);\n\n    // Store reference\n    this.current = new ResourceViewContext(component, target, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLocation.html":{"url":"injectables/ApiLocation.html","title":"injectable - ApiLocation","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ApiLocation\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-location.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\nProvides bindable url property, to be used with resource-outlet component.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        urlChange\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        doNavigate\n                                    \n                                    \n                                            Protected\n                                        mapLocationUrlToApi\n                                    \n                                    \n                                            Protected\n                                        onLocationChanged\n                                    \n                                    \n                                        prepareExternalUrl\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        url\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiMapper: ApiMapper, location: Location)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiMapper\n                                                              \n                                                                        ApiMapper\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              location\n                                                              \n                                                                        Location\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        doNavigate\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    doNavigate(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:86\n                                        \n                                    \n            \n                            \n                                \n                                        Performs navigation to given view path.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              View path to navigate to. Should be already mapped from API URL.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        mapLocationUrlToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapLocationUrlToApi()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:102\n                                        \n                                    \n            \n                            \n                                \n                                        Takes current {@link Location#path()} and maps it to API url.\n            Might throw an {@link Error} if path() returns something unexpected, like null.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                Mapped url. Never null.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        onLocationChanged\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    onLocationChanged()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:110\n                                        \n                                    \n            \n                            \n                                \n                                        Updates currentUrl and fires next value for url observable.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        prepareExternalUrl\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            prepareExternalUrl(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:77\n                                        \n                                    \n            \n                            \n                                \n                                        This is just wrapper around {@link Location#prepareExternalUrl()} for convenience.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URL to be normalized for the link.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Normalized URL.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        urlChange\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    urlChange:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    url\n                                \n                            \n            \n                            \n                                \n                                    geturl()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/api-location.ts:38\n                                            \n                                        \n                                \n                                    \n                                            Resource URL that is being currently viewed.\n            Note: This should not be used to determine current data URL, since this always corresponds to the\n            primary view.\n            \n            \n                                            \n                                            \n                                            \n                                                Returns :     string\n            \n                                            \n                                    \n                                \n            \n                            \n                                \n                                    seturl(url: string)\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/api-location.ts:50\n                                            \n                                        \n                                \n                                    \n                                            Changes browser location (using configured strategy) to given resource url.\n            \n            \n            If the url is not in the configured API namespace, error is logged and nothing happens.\n            \n            \n            If the url equals to api prefix, it is performed redirect to page base href.\n            \n            \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                Type\n                                                                Optional\n                                                                Description\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                  url\n                                                                  \n                                                                          string\n                                                                  \n                                                                  \n                                                                  \n                                                                  API url. The navigation in browser is performed to the view URL, that is, without API prefix.\n            \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ApiMapper } from './api-mapper';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { LocationReference } from './location-reference';\n\n// TODO normalize URL, using possibly LocationStrategy (that means remove trailing slash directly in the browser if its present)\n\n/**\n * It maps view URLs to API and vice versa.\n * Provides bindable `url` property, to be used with `resource-outlet` component.\n */\n@Injectable()\nexport class ApiLocation implements LocationReference {\n\n  readonly urlChange: Observable;\n  private readonly urlChangeSubject = new Subject();\n  private urlValue = '';\n\n  constructor(private readonly apiMapper: ApiMapper,\n              private readonly location: Location) {\n    // Initialize\n    this.urlChange = this.urlChangeSubject.asObservable();\n    this.urlValue = this.mapLocationUrlToApi();\n\n    // Listen to Location changes\n    this.location.subscribe(() => this.onLocationChanged());\n  }\n\n  /**\n   * Resource URL that is being currently viewed.\n   * Note: This should not be used to determine current data URL, since this always corresponds to the\n   * primary view.\n   *\n   * @returns Resource URL that is being currently viewed.\n   */\n  get url(): string {\n    return this.urlValue;\n  }\n\n  /**\n   * Changes browser location (using configured strategy) to given resource url.\n   *\n   * * * If the `url` is not in the configured API namespace, error is logged and nothing happens.\n   * * If the `url` equals to api prefix, it is performed redirect to page base href.\n   *\n   * @param url API url. The navigation in browser is performed to the `view URL`, that is, without API prefix.\n   */\n  set url(url: string) {\n    if (typeof url !== 'string') {\n      throw new Error('url must be a string');\n    }\n\n    // Normalize\n    url = this.location.normalize(url);\n\n    // Navigate only on change\n    if (url !== this.urlValue) {\n      // Map API url to View form\n      const path = this.apiMapper.mapApiToView(url);\n      if (!path) {\n        throw new Error(`Cannot navigate to URL '${url}', it cannot be mapped to known API prefix`);\n      }\n\n      // Navigate\n      this.doNavigate(path);\n    }\n  }\n\n  /**\n   * This is just wrapper around {@link Location#prepareExternalUrl()} for convenience.\n   *\n   * @param url URL to be normalized for the link.\n   * @returns Normalized URL.\n   */\n  prepareExternalUrl(url: string): string {\n    return this.location.prepareExternalUrl(url);\n  }\n\n  /**\n   * Performs navigation to given view path.\n   *\n   * @param path View path to navigate to. Should be already mapped from API URL.\n   */\n  protected doNavigate(path: string) {\n    // Push state if needed\n    if (!this.location.isCurrentPathEqualTo(path)) {\n      this.location.go(path);\n    }\n\n    // Update our url\n    this.onLocationChanged();\n  }\n\n  /**\n   * Takes current {@link Location#path()} and maps it to API url.\n   * Might throw an {@link Error} if path() returns something unexpected, like null.\n   *\n   * @returns Mapped url. Never null.\n   */\n  protected mapLocationUrlToApi() {\n    const path = this.location.path();\n    return this.apiMapper.mapViewToApi(path);\n  }\n\n  /**\n   * Updates `currentUrl` and fires next value for `url` observable.\n   */\n  protected onLocationChanged() {\n    this.urlValue = this.mapLocationUrlToApi();\n    this.urlChangeSubject.next(this.urlValue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserUrlNormalizer.html":{"url":"injectables/BrowserUrlNormalizer.html","title":"injectable - BrowserUrlNormalizer","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BrowserUrlNormalizer\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/url-normalizer.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getBaseHref\n                                    \n                                    \n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(platformStrategy: LocationStrategy, document: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:67\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              platformStrategy\n                                                              \n                                                                        LocationStrategy\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              document\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:75\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:80\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class UrlNormalizer {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseUrlNormalizer extends UrlNormalizer {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserUrlNormalizer extends BaseUrlNormalizer {\n\n  constructor(private readonly platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private readonly document: any) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeaderViewTypeStrategy.html":{"url":"injectables/HeaderViewTypeStrategy.html","title":"injectable - HeaderViewTypeStrategy","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HeaderViewTypeStrategy\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n            \n                Description\n            \n            \n                Extracts type from the HTTP header. By default its Content-Type.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        headerName\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        extractType\n                                    \n                                    \n                                        normalizeMediaType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        extractType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            extractType(response: ViewTypeResponse)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:43\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                                      ViewTypeResponse\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        normalizeMediaType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            normalizeMediaType(contentType: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:49\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              contentType\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        headerName\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    headerName:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'content-type'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:41\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param response Actual response.\n   * @returns Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpResourceClient.html":{"url":"injectables/HttpResourceClient.html","title":"injectable - HttpResourceClient","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpResourceClient\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-client.ts\n        \n\n            \n                Description\n            \n            \n                Default ResourceClient implementation, which uses HttpClient as backend.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        http\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        registry\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        strategy\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        fetch\n                                    \n                                    \n                                            Protected\n                                        get\n                                    \n                                    \n                                            Protected\n                                        parse\n                                    \n                                    \n                                            Protected\n                                        resolve\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(strategy: ViewTypeStrategy, registry: ResourceViewRegistry, http: HttpClient)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              strategy\n                                                              \n                                                                        ViewTypeStrategy\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              registry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              http\n                                                              \n                                                                        HttpClient\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        fetch\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            fetch(uri: string, target: Navigable)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:43\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              uri\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              target\n                                                              \n                                                                      Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        get\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    get(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:53\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        parse\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    parse(response: HttpResponse, config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:82\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                                      HttpResponse\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        resolve\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    resolve(requestUrl: string, response: HttpResponse, target: Navigable)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:60\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              requestUrl\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              response\n                                                              \n                                                                      HttpResponse\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              target\n                                                              \n                                                                      Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     ViewData\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        http\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    http:     HttpClient\n            \n                                \n                            \n                                \n                                    \n                                        Type :     HttpClient\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:39\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        registry\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    registry:     ResourceViewRegistry\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceViewRegistry\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:38\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        strategy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    strategy:     ViewTypeStrategy\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ViewTypeStrategy\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:37\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport { ResourceViewRegistry } from './resource-view-registry';\nimport { ViewTypeStrategy } from './view-type-strategy';\nimport { ViewData } from './view-data';\nimport { ViewDef } from './view-definition';\nimport { Navigable } from './navigable';\nimport { stringToJSON } from './utils/http-utils';\n\n\n/**\n * Component that retrieves the data for given URL.\n */\nexport abstract class ResourceClient {\n\n  /**\n   * Retrieves the data.\n   *\n   * @param uri URI the data should be retrieved from. Usually it is URL for HTTP request.\n   * @param target Navigable instance, to be passed to ViewData constructor.\n   * @returns Retrieved ViewData instance.\n   */\n  abstract fetch(uri: string, target: Navigable): Observable>;\n\n}\n\n/**\n * Default ResourceClient implementation, which uses HttpClient as backend.\n */\n@Injectable()\nexport class HttpResourceClient extends ResourceClient {\n\n  constructor(public readonly strategy: ViewTypeStrategy,\n              public readonly registry: ResourceViewRegistry,\n              public readonly http: HttpClient) {\n    super();\n  }\n\n  fetch(uri: string, target: Navigable): Observable> {\n    // Send request\n    return this\n      .get(uri)\n      // Swallow errors, treat them as normal response\n      .catch(response => Observable.of(response))\n      // This might throw exception, e.g. when response is malformed - it produces failed Observable then\n      .map(response => this.resolve(uri, response, target));\n  }\n\n  protected get(url: string): Observable> {\n    // Note: We need to set responseType to text, because if set to json,\n    // Angular will return error when response is not a valid JSON - We will rather parse it here.\n    // Its not nice, since we are duplicating bit of HttpClient, but I'm not aware of other way\n    return this.http.get(url, {observe: 'response', responseType: 'text'});\n  }\n\n  protected resolve(requestUrl: string, response: HttpResponse, target: Navigable): ViewData {\n    // Resolve type, if possible\n    const type = this.strategy.extractType(response) || '';\n    // Find view\n    const config = this.registry.match(type, response.status);\n    // Parse body\n    const body = this.parse(response, config);\n\n    // Construct and return ViewData\n    return {\n      target: target,\n      config: config,\n      type: type,\n      url: response.url || requestUrl,\n      status: response.status,\n      statusText: response.statusText,\n      headers: response.headers,\n      body: body,\n    };\n  }\n\n  // noinspection JSMethodCanBeStatic\n  protected parse(response: HttpResponse, config: ViewDef): any | null {\n    // Don't parse empty body\n    if (!response.body) {\n      return null;\n    }\n\n    const responseType = config.responseType || 'json';\n    switch (responseType) {\n      case 'json':\n        // Parse JSON - this assumes body is a string\n        return stringToJSON(response.body);\n\n      case 'text':\n        // Return as-is - this assumes body is already string\n        return response.body;\n\n      default:\n        throw new Error(`Unsupported responseType: ${responseType}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockUrlNormalizer.html":{"url":"injectables/MockUrlNormalizer.html","title":"injectable - MockUrlNormalizer","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MockUrlNormalizer\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/testing/src/mock-url-normalizer.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        internalBaseHref\n                                    \n                                    \n                                        internalHost\n                                    \n                                    \n                                        internalPathname\n                                    \n                                    \n                                        internalProtocol\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getBaseHref\n                                    \n                                    \n                                        getLocation\n                                    \n                                    \n                                        init\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:21\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        init\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            init(protocol: string, host: string, pathname: string, baseHref: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              protocol\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              host\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              pathname\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              baseHref\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     this\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalBaseHref:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : ''\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalHost\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalHost:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'localhost'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalPathname\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalPathname:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : '/'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalProtocol\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalProtocol:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'http:'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BaseUrlNormalizer, LocationInfo } from 'angular-resource-router';\n\n@Injectable()\nexport class MockUrlNormalizer extends BaseUrlNormalizer {\n\n  internalProtocol = 'http:';\n  internalHost = 'localhost';\n  internalPathname = '/';\n  internalBaseHref = '';\n\n  init(protocol: string, host: string, pathname: string, baseHref: string) {\n    this.internalProtocol = protocol;\n    this.internalHost = host;\n    this.internalPathname = pathname;\n    this.internalBaseHref = baseHref;\n\n    return this;\n  }\n\n  getBaseHref(): string {\n    return this.internalBaseHref;\n  }\n\n  getLocation(): LocationInfo {\n    return {\n      protocol: this.internalProtocol,\n      host: this.internalHost,\n      pathname: this.internalPathname\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceData.html":{"url":"injectables/ResourceData.html","title":"injectable - ResourceData","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceData\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-data.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        client\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        dataChange\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        id\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        registry\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        urlChange\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        go\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        loading\n                                    \n                                    \n                                        data\n                                    \n                                    \n                                        url\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(client: ResourceClient, registry: ResourceViewRegistry)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              client\n                                                              \n                                                                        ResourceClient\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              registry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        go\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            go(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:91\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        client\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    client:     ResourceClient\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceClient\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:36\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        dataChange\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dataChange:     Observable>\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable>\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:21\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        id\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    id:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : nextId++\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:28\n                                        \n                                    \n            \n                            \n                                \n                                    Diagnostic identifier, not used by any logic.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        registry\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    registry:     ResourceViewRegistry\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceViewRegistry\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:37\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        urlChange\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    urlChange:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:22\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    loading\n                                \n                            \n            \n                            \n                                \n                                    getloading()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-data.ts:66\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    data\n                                \n                            \n            \n                            \n                                \n                                    getdata()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-data.ts:70\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    url\n                                \n                            \n            \n                            \n                                \n                                    geturl()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-data.ts:74\n                                            \n                                        \n            \n                            \n                                \n                                    seturl(value: string)\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-data.ts:78\n                                            \n                                        \n                        \n                    \n            \n    \n\n\n    \n        import { FactoryProvider, Injectable, Self } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/finally';\nimport 'rxjs/add/operator/switchMap';\nimport { ResourceViewRegistry } from './resource-view-registry';\nimport { ResourceClient } from './resource-client';\nimport { ViewData } from './view-data';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_ERROR, MEDIA_TYPE_ROUTER_LOADING } from './system-media-types';\nimport { NO_HEADERS, ReadOnlyHeaders } from './read-only-headers';\nimport { makeNavigableRef, Navigable, NavigableRef } from './navigable';\nimport { LocationReference } from './location-reference';\n\nlet nextId = 1;\n\n@Injectable()\nexport class ResourceData implements Navigable, LocationReference {\n\n  public readonly dataChange: Observable>;\n  public readonly urlChange: Observable;\n\n  // noinspection JSUnusedGlobalSymbols\n  /**\n   * Diagnostic identifier, not used by any logic.\n   */\n  public readonly id = nextId++;\n\n  private urlValue = '';\n  private loadingValue = false;\n  private readonly dataChangeSource: BehaviorSubject>;\n  private readonly urlChangeSource = new Subject();\n  private readonly loadDataEvent = new Subject();\n\n  constructor(public readonly client: ResourceClient,\n              public readonly registry: ResourceViewRegistry) {\n    // Initialize\n    const initialData = this.mockViewData('', MEDIA_TYPE_ROUTER_LOADING, 204, 'OK');\n\n    this.dataChangeSource = new BehaviorSubject>(initialData);\n    this.dataChange = this.dataChangeSource.asObservable();\n\n    this.urlChange = this.urlChangeSource.asObservable();\n\n    // Using Subject in combination with switchMap allows us to easily use only latest value\n    // Note: this.load is private and produces a never failing observable\n    this.loadDataEvent\n      .switchMap(url => {\n        this.loadingValue = true;\n        return this.load(url);\n      })\n      .subscribe(data => {\n        // Update data\n        this.loadingValue = false;\n        this.dataChangeSource.next(data);\n\n        // This propagates back the actual url when server-side redirect was performed\n        if (data.url !== this.urlValue) {\n          this.urlValue = data.url;\n          this.urlChangeSource.next(this.urlValue);\n        }\n      });\n  }\n\n  get loading() {\n    return this.loadingValue;\n  }\n\n  get data(): ViewData {\n    return this.dataChangeSource.getValue();\n  }\n\n  get url(): string {\n    return this.urlValue;\n  }\n\n  set url(value: string) {\n    // Normalize undefined (possibly from binding) to empty string - don't rely on typescript\n    if (!value) {\n      value = '';\n    }\n\n    // Start load if value has actually changed\n    if (this.urlValue !== value) {\n      this.urlValue = value;\n      this.loadDataEvent.next(value);\n    }\n  }\n\n  go(url: string): void {\n    // Update property if changed\n    if (this.urlValue !== url) {\n      this.urlValue = url;\n      this.urlChangeSource.next(url);\n    }\n\n    // Load data (always)\n    this.loadDataEvent.next(this.urlValue);\n  }\n\n  private load(url: string): Observable> {\n    if (url) {\n      return this.client\n        .fetch(url, this)\n        .catch(err => {\n          // Log it, this should not happen normally\n          // Note: We are intentionally not using debugLog here - print this in production log as well\n          console.error(err);\n          // Return error view\n          return Observable.of(this.mockViewData(url, MEDIA_TYPE_ROUTER_ERROR, 999, 'Routing Error', NO_HEADERS, err));\n        });\n    } else {\n      return Observable.of(this.mockViewData('', MEDIA_TYPE_ROUTER_EMPTY, 204, 'OK'));\n    }\n  }\n\n  private mockViewData(url: string, type: string, status: number, statusText: string,\n                       headers?: ReadOnlyHeaders, body?: any): ViewData {\n    const config = this.registry.match(type, status);\n\n    return {\n      target: this,\n      config: config,\n      type: type,\n      url: url,\n      status: status,\n      statusText: statusText,\n      headers: headers || NO_HEADERS,\n      body: body\n    };\n  }\n}\n\n\nexport function resourceDataNavigableRef(): FactoryProvider {\n  return {\n    provide: NavigableRef,\n    useFactory: makeNavigableRef,\n    deps: [[ResourceData, new Self()]]\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceViewRegistry.html":{"url":"injectables/ResourceViewRegistry.html","title":"injectable - ResourceViewRegistry","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceViewRegistry\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-view-registry.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        addView\n                                    \n                                    \n                                        addViews\n                                    \n                                    \n                                        match\n                                    \n                                    \n                                            Protected\n                                        validateViewDefinition\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        length\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(views?: any, typeQualityEvaluator?: TypeQualityEvaluator)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:39\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              views\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              typeQualityEvaluator\n                                                              \n                                                                        TypeQualityEvaluator\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        addView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    addView(config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:90\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        addViews\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            addViews(config: ViewDef | [])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:79\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef | []\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        match\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            match(type: string, status: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:57\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              type\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     ViewDef\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        validateViewDefinition\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    validateViewDefinition(config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:108\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    length\n                                \n                            \n            \n                            \n                                \n                                    getlength()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-view-registry.ts:53\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ViewDef } from './view-definition';\nimport { SortedArray } from './utils/sorted-array';\nimport { wildcardToRegex } from './utils/wildcard-to-regex';\nimport { simpleTypeQualityEvaluator, statusQualityEvaluator, TypeQualityEvaluator } from './quality-evaluator';\n\n\nexport const RESOURCE_VIEWS = new InjectionToken('RESOURCE_VIEWS');\nexport const TYPE_QUALITY_EVALUATOR = new InjectionToken('TYPE_QUALITY_EVALUATOR');\n\n\n// Private classes\nclass ViewsByStatus {\n  readonly status: string;\n  readonly statusExp: RegExp;\n  readonly quality: number;\n  readonly types = new SortedArray(qualityComparator);\n\n  constructor(status: string) {\n    this.status = status;\n    this.statusExp = wildcardToRegex(status);\n    this.quality = statusQualityEvaluator(status);\n  }\n}\n\ninterface ParsedViewDef {\n  readonly config: ViewDef;\n  readonly quality: number;\n  readonly typeExp: RegExp;\n}\n\n\n// Public class\n@Injectable()\nexport class ResourceViewRegistry {\n\n  private readonly typeQualityEvaluator: TypeQualityEvaluator;\n  private readonly viewsByStatus = new SortedArray(qualityComparator);\n  private _length = 0;\n\n  constructor(@Inject(RESOURCE_VIEWS) @Optional() views?: any,\n              @Inject(TYPE_QUALITY_EVALUATOR) @Optional() typeQualityEvaluator?: TypeQualityEvaluator) {\n    // Initialize quality evaluator - must be before addViews\n    this.typeQualityEvaluator = typeQualityEvaluator || simpleTypeQualityEvaluator;\n\n    // Ignore if no view is defined - this is supported path for later registration\n    if (views) {\n      // Register views\n      this.addViews(views);\n    }\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  match(type: string, status: number): ViewDef {\n    // Convert number to padded string\n    const statusStr = normalizeStatus(status);\n\n    // Find all matching groups by status\n    for (const group of this.viewsByStatus.array) {\n      // Match\n      if (!group.statusExp.test(statusStr)) {\n        continue;\n      }\n\n      // Find view in the group\n      const view = group.types.array.find(v => v.typeExp.test(type));\n      if (view) {\n        return view.config;\n      }\n    }\n\n    // Not found\n    throw new Error(`No view definition found for type ${type} and status ${status} - please register default view`);\n  }\n\n  addViews(config: ViewDef | ViewDef[]) {\n    // Flatten array\n    if (Array.isArray(config)) {\n      // Recursive call\n      config.forEach(this.addViews, this);\n    } else if (config) {\n      // Single view\n      this.addView(config);\n    }\n  }\n\n  protected addView(config: ViewDef) {\n    // Sanity check\n    this.validateViewDefinition(config);\n\n    // All permutations of status and type\n    toArray(config.status || '2??').forEach(status => {\n      // Get status group\n      const normalizedStatus = normalizeStatusExpression('' + status);\n      const group = this.getViewsByStatus(normalizedStatus);\n\n      // Types\n      toArray(config.type).forEach(type => {\n        this.addSingleView(config, group, type);\n      });\n    });\n  }\n\n  //noinspection JSMethodCanBeStatic\n  protected validateViewDefinition(config: ViewDef) {\n    // Component\n    if (!config.component || typeof config.component !== 'function') {\n      throw newValidationError(config, 'component is mandatory and must be a type');\n    }\n\n    // Type\n    validateType(config);\n\n    // Status\n    validateStatus(config);\n\n    // Quality\n    if (config.quality && typeof config.quality !== 'number') {\n      throw newValidationError(config, 'quality must be a number');\n    }\n  }\n\n  private addSingleView(config: ViewDef, group: ViewsByStatus, type: string) {\n    // Copy of definition, with specific status and type only\n    // See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest\n    config = {\n      ...config, ...{\n        status: group.status,\n        type: type\n      }\n    };\n\n    // Evaluate quality if needed\n    const quality = typeof config.quality === 'number' ? config.quality : this.typeQualityEvaluator(type);\n\n    // Add to the group\n    group.types.push({\n      config: Object.freeze(config),\n      typeExp: wildcardToRegex(type),\n      quality: quality\n    });\n\n    // Increment count\n    this._length++;\n  }\n\n  private getViewsByStatus(status: string) {\n    let byStatus = this.viewsByStatus.array.find(s => s.status === status);\n\n    if (!byStatus) {\n      byStatus = new ViewsByStatus(status);\n      this.viewsByStatus.push(byStatus);\n    }\n\n    return byStatus;\n  }\n}\n\n\n// Validation functions\nfunction validateType(config: ViewDef) {\n  if (Array.isArray(config.type)) {\n    if (config.type.find(t => typeof t !== 'string')) {\n      throw newValidationError(config, 'type array must consist only of strings');\n    }\n  } else if (typeof config.type !== 'string') {\n    throw newValidationError(config, 'type must be a string or array of strings');\n  }\n}\n\nfunction validateStatus(config: ViewDef) {\n  if (config.status) {\n    if (Array.isArray(config.status)) {\n      // Validate array of values\n      config.status.forEach(status => validateStatusExpression(config, '' + status));\n    } else if (typeof config.status === 'string' || typeof config.status === 'number') {\n      // Validate single value\n      validateStatusExpression(config, '' + config.status);\n    } else {\n      // Invalid\n      throw newValidationError(config, 'status must be either string, number or array of them');\n    }\n  }\n}\n\nfunction validateStatusExpression(config: ViewDef, status: string) {\n  if (status.length  3) {\n    throw newValidationError(config, 'status pattern must be between 1 and 3 characters long');\n  }\n\n  if (/[^x\\d?*]/.test(status)) {\n    throw newValidationError(config, 'status pattern contains invalid characters');\n  }\n\n  if (!/^\\d*[?x]*\\**$/.test(status)) {\n    throw newValidationError(config, 'status pattern can contain wildcards only at the end of the pattern');\n  }\n}\n\nfunction newValidationError(config: any, text: string): Error {\n  return new Error('Invalid view configuration, ' + text + ':\\n' + JSON.stringify(config));\n}\n\n// Utils\nexport function normalizeStatusExpression(pattern: string): string {\n  // Handle * wildcard\n  if (pattern.endsWith('*')) {\n    if (pattern.length > 3) {\n      throw new Error('Wildcard * is not supported for status expressions longer then 3 characters: ' + pattern);\n    }\n\n    return (pattern.replace(/\\*/g, '') + '???').substr(0, 3);\n  }\n\n  // Replace x to ?\n  pattern = pattern.replace(/x/g, '?');\n\n  // Pad left with zeroes\n  return pattern.length (value: T | T[]): Array {\n  return Array.isArray(value) ? value as T[] : [value] as T[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingleApiMapper.html":{"url":"injectables/SingleApiMapper.html","title":"injectable - SingleApiMapper","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SingleApiMapper\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/single-api-mapper.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        prefix\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        mapApiToView\n                                    \n                                    \n                                        mapViewToApi\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiUrl: UrlNormalizer, prefix: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiUrl\n                                                              \n                                                                        UrlNormalizer\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              prefix\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mapApiToView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mapApiToView(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:46\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mapViewToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mapViewToApi(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:32\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        prefix\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    prefix:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                    API URL prefix. It's absolute URL, includes base href (if applicable).\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { UrlNormalizer } from './url-normalizer';\nimport { ApiMapper } from './api-mapper';\n\n\n/**\n * Prefix for the URL. Can be base-relative, host-relative or absolute.\n * Always should however end with slash ('/').\n */\nexport const APP_API_PREFIX = new InjectionToken('APP_API_PREFIX');\n\n\n/**\n * It maps view URLs to API and vice versa.\n */\n@Injectable()\nexport class SingleApiMapper extends ApiMapper {\n\n  /**\n   * API URL prefix. It's absolute URL, includes base href (if applicable).\n   */\n  readonly prefix: string;\n\n  constructor(apiUrl: UrlNormalizer,\n              @Inject(APP_API_PREFIX) prefix: string) {\n    super();\n\n    // Normalize prefix\n    this.prefix = apiUrl.normalize(prefix);\n  }\n\n  mapViewToApi(path: string): string {\n    // This is for diagnostics only, but might be useful\n    if (/^\\w+:/.test(path)) {\n      throw new Error('path must be relative');\n    }\n\n    // Strip leading slash\n    path = path.replace(/^\\//, '');\n\n    // Join\n    // Note: API prefix MUST end with a slash, otherwise it will work as configured, which is most likely wrong.\n    return (this.prefix + path).replace(/\\/$/, '');\n  }\n\n  mapApiToView(url: string): string | null {\n    // Remove prefix\n    if (url.startsWith(this.prefix)) {\n      // Strip prefix, prepend /, remove trailing /\n      return '/' + url.substring(this.prefix.length).replace(/\\/$/, '');\n    }\n\n    // Unable to map\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivatedView.html":{"url":"classes/ActivatedView.html","title":"class - ActivatedView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivatedView\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/activated-view.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        data\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        navigation\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        reload\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        snapshot\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(navigation: Navigable, _data: BehaviorSubject>)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              navigation\n                                                              \n                                                                        Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              _data\n                                                              \n                                                                        BehaviorSubject>\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        reload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            reload()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                        Forces reload of the data (remaining on the current URL).\n            This is identical to calling {@code activatedView.navigation.go(activatedView.snapshot.url)}.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        data\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    data:     Observable>\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable>\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        navigation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    navigation:     Navigable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Navigable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    snapshot\n                                \n                            \n            \n                            \n                                \n                                    getsnapshot()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/activated-view.ts:15\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Navigable } from './navigable';\nimport { Observable } from 'rxjs/Observable';\nimport { ViewData } from './view-data';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nexport class ActivatedView {\n\n  public readonly data: Observable>;\n\n  constructor(public readonly navigation: Navigable,\n              private readonly _data: BehaviorSubject>) {\n    this.data = _data.asObservable();\n  }\n\n  get snapshot() {\n    return this._data.getValue();\n  }\n\n  /**\n   * Forces reload of the data (remaining on the current URL).\n   *\n   * This is identical to calling {@code activatedView.navigation.go(activatedView.snapshot.url)}.\n   */\n  reload(): void {\n    this.navigation.go(this.snapshot.url);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiMapper.html":{"url":"classes/ApiMapper.html","title":"class - ApiMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiMapper\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-mapper.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        mapApiToView\n                                    \n                                    \n                                            \n                                        mapViewToApi\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        mapApiToView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapApiToView(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-mapper.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                        Maps resource URL to view path. Can be overridden during configuration.\n            By default it maps API url to view paths one to one.\n            Counterpart to {@link #mapViewToApi}.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              Resource url. It must be inside API namespace. If it is not, null is returned.\n                      If the url equals to api prefix, empty string is returned.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                View path.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        mapViewToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapViewToApi(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-mapper.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        Maps view path to resource URL. Can be overridden during configuration.\n            By default it maps path to API one to one.\n            Counterpart to {@link #mapApiToView}.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              View path, as in $location.path().\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Resource url, for e.g. HTTP requests.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export abstract class ApiMapper {\n\n  /**\n   * Maps view path to resource URL. Can be overridden during configuration.\n   * By default it maps path to API one to one.\n   *\n   * Counterpart to {@link #mapApiToView}.\n   *\n   * @param path View path, as in `$location.path()`.\n   * @returns Resource url, for e.g. HTTP requests.\n   */\n  abstract mapViewToApi(path: string): string;\n\n  /**\n   * Maps resource URL to view path. Can be overridden during configuration.\n   * By default it maps API url to view paths one to one.\n   *\n   * Counterpart to {@link #mapViewToApi}.\n   *\n   * @param url Resource url. It must be inside API namespace. If it is not, `null` is returned.\n   *                     If the url equals to api prefix, empty string is returned.\n   * @returns View path.\n   */\n  abstract mapApiToView(url: string): string | null;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseUrlNormalizer.html":{"url":"classes/BaseUrlNormalizer.html","title":"class - BaseUrlNormalizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseUrlNormalizer\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/url-normalizer.ts\n        \n\n            \n                Description\n            \n            \n                Generic implementation of ApiUrl.\nDefault is BrowserApiUrl.\n\n            \n\n            \n                Extends\n            \n            \n                    UrlNormalizer\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        getBaseHref\n                                    \n                                    \n                                            \n                                        getLocation\n                                    \n                                    \n                                        normalize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        Returns base href.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Context path of the application. Protocol and host excluded.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:63\n                                        \n                                    \n            \n                            \n                                \n                                        Returns current location. It is used to resolve baseHref.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                            \n                                                Context path of the application.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        normalize\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            normalize(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:28\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class UrlNormalizer {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseUrlNormalizer extends UrlNormalizer {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserUrlNormalizer extends BaseUrlNormalizer {\n\n  constructor(private readonly platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private readonly document: any) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigableRef.html":{"url":"classes/NavigableRef.html","title":"class - NavigableRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigableRef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/navigable.ts\n        \n\n            \n                Description\n            \n            \n                Injectable reference to Navigable.\nNote that this doesn't have to be immutable class.\n\n            \n\n\n\n\n\n\n\n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    navigable\n                                \n                            \n            \n                            \n                                \n                                    getnavigable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/navigable.ts:29\n                                            \n                                        \n                                \n                                    \n                                            The actual Navigable instance.\n            Note that since this class is not immutable by definition, there is no guarantee its value won't change.\n            Therefore its recommended to always keep the NavigableRef instance instead of dereferencing it.\n            \n            \n                                            \n                                                Returns :     Navigable\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n            \n    \n\n\n    \n        import { FactoryProvider, Inject, InjectionToken, Optional, Self, SkipSelf } from '@angular/core';\nimport { resourceDataNavigableRef } from './resource-data';\n\nexport interface Navigable {\n\n  go(url: string): void;\n}\n\n/**\n * Safe-cast function for {@link Navigable} instances.\n * Returns `true` if `obj` is {@link Navigable}.\n */\nexport function isNavigable(obj: any): obj is Navigable {\n  return obj && typeof obj.go === 'function';\n}\n\n/**\n * Injectable reference to {@link Navigable}.\n * Note that this doesn't have to be immutable class.\n */\nexport abstract class NavigableRef {\n\n  /**\n   * The actual {@link Navigable} instance.\n   *\n   * Note that since this class is not immutable by definition, there is no guarantee its value won't change.\n   * Therefore its recommended to always keep the {@link NavigableRef} instance instead of dereferencing it.\n   */\n  abstract get navigable(): Navigable;\n}\n\nclass NavigableRefImpl extends NavigableRef {\n\n  constructor(public readonly navigable: Navigable) {\n    super();\n  }\n}\n\n/**\n * Creates immutable {@link NavigableRef} instance from given value.\n */\nexport function makeNavigableRef(value: Navigable): NavigableRef {\n  return new NavigableRefImpl(value);\n}\n\n/**\n * Token for top-level (root) {@link NavigableRef} instance.\n *\n * To provide it in your component, you might use {@link topLevelNavigableRef}, however see its docs for proper usage.\n */\nexport const TOP_LEVEL_NAVIGABLE = new InjectionToken('TOP_LEVEL_NAVIGABLE');\n\n\n/**\n * Provides {@link TOP_LEVEL_NAVIGABLE} reference. It honors existing instance, therefore its safe to declare it\n * in the nested components.\n * When there is no existing top-level reference available, current {@link NavigableRef} is used.\n *\n * Note that this requires {@link NavigableRef} to be provided by current component, regardless it being used or not.\n *\n * @see TOP_LEVEL_NAVIGABLE\n * @see NavigationRef\n * @see resourceDataNavigableRef\n */\nexport function topLevelNavigableRef(): FactoryProvider {\n  return {\n    provide: TOP_LEVEL_NAVIGABLE,\n    useFactory: topLevelNavigableFactory,\n    deps: [\n      [NavigableRef, new Self()],\n      [new Inject(TOP_LEVEL_NAVIGABLE), new SkipSelf(), new Optional()]\n    ]\n  };\n}\n\n/**\n * @internal\n * @see topLevelNavigableRef\n */\nexport function topLevelNavigableFactory(current: NavigableRef, existing?: NavigableRef): NavigableRef {\n  return existing || current;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigableRefImpl.html":{"url":"classes/NavigableRefImpl.html","title":"class - NavigableRefImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigableRefImpl\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/navigable.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NavigableRef\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        navigable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(navigable: Navigable)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/navigable.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              navigable\n                                                              \n                                                                        Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        navigable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    navigable:     Navigable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Navigable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/navigable.ts:34\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { FactoryProvider, Inject, InjectionToken, Optional, Self, SkipSelf } from '@angular/core';\nimport { resourceDataNavigableRef } from './resource-data';\n\nexport interface Navigable {\n\n  go(url: string): void;\n}\n\n/**\n * Safe-cast function for {@link Navigable} instances.\n * Returns `true` if `obj` is {@link Navigable}.\n */\nexport function isNavigable(obj: any): obj is Navigable {\n  return obj && typeof obj.go === 'function';\n}\n\n/**\n * Injectable reference to {@link Navigable}.\n * Note that this doesn't have to be immutable class.\n */\nexport abstract class NavigableRef {\n\n  /**\n   * The actual {@link Navigable} instance.\n   *\n   * Note that since this class is not immutable by definition, there is no guarantee its value won't change.\n   * Therefore its recommended to always keep the {@link NavigableRef} instance instead of dereferencing it.\n   */\n  abstract get navigable(): Navigable;\n}\n\nclass NavigableRefImpl extends NavigableRef {\n\n  constructor(public readonly navigable: Navigable) {\n    super();\n  }\n}\n\n/**\n * Creates immutable {@link NavigableRef} instance from given value.\n */\nexport function makeNavigableRef(value: Navigable): NavigableRef {\n  return new NavigableRefImpl(value);\n}\n\n/**\n * Token for top-level (root) {@link NavigableRef} instance.\n *\n * To provide it in your component, you might use {@link topLevelNavigableRef}, however see its docs for proper usage.\n */\nexport const TOP_LEVEL_NAVIGABLE = new InjectionToken('TOP_LEVEL_NAVIGABLE');\n\n\n/**\n * Provides {@link TOP_LEVEL_NAVIGABLE} reference. It honors existing instance, therefore its safe to declare it\n * in the nested components.\n * When there is no existing top-level reference available, current {@link NavigableRef} is used.\n *\n * Note that this requires {@link NavigableRef} to be provided by current component, regardless it being used or not.\n *\n * @see TOP_LEVEL_NAVIGABLE\n * @see NavigationRef\n * @see resourceDataNavigableRef\n */\nexport function topLevelNavigableRef(): FactoryProvider {\n  return {\n    provide: TOP_LEVEL_NAVIGABLE,\n    useFactory: topLevelNavigableFactory,\n    deps: [\n      [NavigableRef, new Self()],\n      [new Inject(TOP_LEVEL_NAVIGABLE), new SkipSelf(), new Optional()]\n    ]\n  };\n}\n\n/**\n * @internal\n * @see topLevelNavigableRef\n */\nexport function topLevelNavigableFactory(current: NavigableRef, existing?: NavigableRef): NavigableRef {\n  return existing || current;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceClient.html":{"url":"classes/ResourceClient.html","title":"class - ResourceClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceClient\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-client.ts\n        \n\n            \n                Description\n            \n            \n                Component that retrieves the data for given URL.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        fetch\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        fetch\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    fetch(uri: string, target: Navigable)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                        Retrieves the data.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              uri\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URI the data should be retrieved from. Usually it is URL for HTTP request.\n            \n                                                            \n                                                            \n                                                              target\n                                                              \n                                                                      Navigable\n                                                              \n                                                              \n                                                              \n                                                              Navigable instance, to be passed to ViewData constructor.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                Retrieved ViewData instance.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport { ResourceViewRegistry } from './resource-view-registry';\nimport { ViewTypeStrategy } from './view-type-strategy';\nimport { ViewData } from './view-data';\nimport { ViewDef } from './view-definition';\nimport { Navigable } from './navigable';\nimport { stringToJSON } from './utils/http-utils';\n\n\n/**\n * Component that retrieves the data for given URL.\n */\nexport abstract class ResourceClient {\n\n  /**\n   * Retrieves the data.\n   *\n   * @param uri URI the data should be retrieved from. Usually it is URL for HTTP request.\n   * @param target Navigable instance, to be passed to ViewData constructor.\n   * @returns Retrieved ViewData instance.\n   */\n  abstract fetch(uri: string, target: Navigable): Observable>;\n\n}\n\n/**\n * Default ResourceClient implementation, which uses HttpClient as backend.\n */\n@Injectable()\nexport class HttpResourceClient extends ResourceClient {\n\n  constructor(public readonly strategy: ViewTypeStrategy,\n              public readonly registry: ResourceViewRegistry,\n              public readonly http: HttpClient) {\n    super();\n  }\n\n  fetch(uri: string, target: Navigable): Observable> {\n    // Send request\n    return this\n      .get(uri)\n      // Swallow errors, treat them as normal response\n      .catch(response => Observable.of(response))\n      // This might throw exception, e.g. when response is malformed - it produces failed Observable then\n      .map(response => this.resolve(uri, response, target));\n  }\n\n  protected get(url: string): Observable> {\n    // Note: We need to set responseType to text, because if set to json,\n    // Angular will return error when response is not a valid JSON - We will rather parse it here.\n    // Its not nice, since we are duplicating bit of HttpClient, but I'm not aware of other way\n    return this.http.get(url, {observe: 'response', responseType: 'text'});\n  }\n\n  protected resolve(requestUrl: string, response: HttpResponse, target: Navigable): ViewData {\n    // Resolve type, if possible\n    const type = this.strategy.extractType(response) || '';\n    // Find view\n    const config = this.registry.match(type, response.status);\n    // Parse body\n    const body = this.parse(response, config);\n\n    // Construct and return ViewData\n    return {\n      target: target,\n      config: config,\n      type: type,\n      url: response.url || requestUrl,\n      status: response.status,\n      statusText: response.statusText,\n      headers: response.headers,\n      body: body,\n    };\n  }\n\n  // noinspection JSMethodCanBeStatic\n  protected parse(response: HttpResponse, config: ViewDef): any | null {\n    // Don't parse empty body\n    if (!response.body) {\n      return null;\n    }\n\n    const responseType = config.responseType || 'json';\n    switch (responseType) {\n      case 'json':\n        // Parse JSON - this assumes body is a string\n        return stringToJSON(response.body);\n\n      case 'text':\n        // Return as-is - this assumes body is already string\n        return response.body;\n\n      default:\n        throw new Error(`Unsupported responseType: ${responseType}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceDataOfContext.html":{"url":"classes/ResourceDataOfContext.html","title":"class - ResourceDataOfContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceDataOfContext\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-data-of.ts\n        \n\n            \n                Description\n            \n            \n                Context for structural directive ResourceDataOfDirective.\nFor examples see the directive docs.\n\n            \n\n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(resource: ResourceData)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              resource\n                                                              \n                                                                        ResourceData\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    $implicit\n                                \n                            \n            \n                            \n                                \n                                    get$implicit()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data-of.ts:37\n                                            \n                                        \n                                \n                                    \n                                            Default variable value. Contains currently loaded data.\n            Never undefined.\n            Provides value from ResourceData.\n            \n            \n                                            \n                                                Returns :     ViewData\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    data\n                                \n                            \n            \n                            \n                                \n                                    getdata()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data-of.ts:47\n                                            \n                                        \n                                \n                                    \n                                            Contains currently loaded data.\n            Never undefined.\n            Provides value from ResourceData.\n            \n            \n                                            \n                                                Returns :     ViewData\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    loading\n                                \n                            \n            \n                            \n                                \n                                    getloading()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data-of.ts:55\n                                            \n                                        \n                                \n                                    \n                                            Loading flag for this directive.\n            Provides value from ResourceData.\n            \n            \n                                            \n                                                Returns :     boolean\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Self,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { ViewData } from '../view-data';\nimport { ResourceData, resourceDataNavigableRef } from '../resource-data';\nimport { Subscription } from 'rxjs/Subscription';\nimport { bindUrl, isLocationReference, LocationReference } from '../location-reference';\nimport { ResourceOutletComponent } from './resource-outlet';\nimport { topLevelNavigableRef } from '../navigable';\nimport { ResourceContextDirective } from './resource-context';\n\n\n/**\n * Context for structural directive {@link ResourceDataOfDirective}.\n *\n * For examples see the directive docs.\n */\nexport class ResourceDataOfContext {\n  constructor(private readonly resource: ResourceData) {\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  /**\n   * Default variable value. Contains currently loaded data.\n   * Never undefined.\n   *\n   * Provides value from {@link ResourceData#data}.\n   */\n  get $implicit(): ViewData {\n    return this.resource.data;\n  }\n\n  /**\n   * Contains currently loaded data.\n   * Never undefined.\n   *\n   * Provides value from {@link ResourceData#data}.\n   */\n  get data(): ViewData {\n    return this.resource.data;\n  }\n\n  /**\n   * Loading flag for this directive.\n   * Provides value from {@link ResourceData#loading}.\n   */\n  get loading(): boolean {\n    return this.resource.loading;\n  }\n}\n\n\n/**\n * Structural directive, that loads the data from given source, and allows custom data representation.\n *\n * This is more complex variant of {@link ResourceOutletComponent}. It is needed when you need to show\n * some generic content along with viewed directive, which also depends on loaded data, like menu.\n *\n * Note that until issue [#15998]{@link https://github.com/angular/angular/issues/15998} is resolved,\n * this directive must be used in conjunction with {@link ResourceContextDirective}, as seen in the example.\n *\n * @example\n * \n * \n *   \n *   \n *\n *   \n *   \n *\n *   \n *   \n *     Back\n *   \n * \n */\n@Directive({\n  selector: '[resourceData][resourceDataOf]',\n  providers: [\n    ResourceData,\n    resourceDataNavigableRef(),\n    topLevelNavigableRef()\n  ]\n})\nexport class ResourceDataOfDirective implements OnInit, OnDestroy {\n\n  /**\n   * Emits event whenever underlying {@link ResourceData#url} changes.\n   *\n   * Note that there is no way to bind to this event when using asterisk (`*resourceData=`) syntax. This is Angular\n   * limitation.\n   *\n   * Example:\n   * ```html\n   *\n   *    \n   *\n   *```\n   */\n  @Output()\n  readonly urlChange = new EventEmitter();\n  private readonly context: ResourceDataOfContext;\n  private urlSubscription = Subscription.EMPTY;\n  private sourceSubscription = Subscription.EMPTY;\n\n  constructor(@Self() public readonly resource: ResourceData,\n              private readonly viewContainer: ViewContainerRef,\n              private readonly templateRef: TemplateRef) {\n    this.context = new ResourceDataOfContext(resource);\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.viewContainer.createEmbeddedView(this.templateRef, this.context);\n\n    // Note: We don't need listen to this.urlChange, since we don't store the url, we just propagate event\n    this.urlSubscription = this.resource.urlChange.subscribe((value: string) => this.urlChange.emit(value));\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this.urlSubscription.unsubscribe();\n    this.sourceSubscription.unsubscribe();\n  }\n\n  /**\n   * Location, from which are data loaded.\n   *\n   * This might be either string (note that two-way binding is not directly supported for structural directives,\n   * see {@link #urlChange}), or {@link LocationReference}, which provides automatic two-way binding\n   * for the {@link LocationReference#url}.\n   */\n  @Input()\n  set resourceDataOf(value: string | LocationReference | undefined) {\n    // Remove old source (if any)\n    this.sourceSubscription.unsubscribe();\n\n    if (typeof value === 'string') {\n      // Simple one-way URL bind\n      this.resource.url = value;\n    } else if (isLocationReference(value)) {\n      // Bind urls to new\n      this.sourceSubscription = bindUrl(value, this.resource);\n    } else {\n      // Reset\n      this.resource.url = '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceViewContext.html":{"url":"classes/ResourceViewContext.html","title":"class - ResourceViewContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceViewContext\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-view.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        component\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        data\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        target\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        next\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        componentType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(component: ComponentRef, target: Navigable, data: BehaviorSubject>)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              component\n                                                              \n                                                                        ComponentRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              target\n                                                              \n                                                                        Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              data\n                                                              \n                                                                        BehaviorSubject>\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        next\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            next(value: ViewData)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:29\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              value\n                                                              \n                                                                      ViewData\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        component\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    component:     ComponentRef\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ComponentRef\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:20\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        data\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    data:     BehaviorSubject>\n            \n                                \n                            \n                                \n                                    \n                                        Type :     BehaviorSubject>\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:22\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        target\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    target:     Navigable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Navigable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:21\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    componentType\n                                \n                            \n            \n                            \n                                \n                                    getcomponentType()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-view.ts:25\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  OnChanges,\n  Optional,\n  ReflectiveInjector,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport 'rxjs/add/operator/switchMap';\nimport { ViewData } from '../view-data';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ActivatedView } from '../activated-view';\nimport { Navigable, NavigableRef } from '../navigable';\n\nclass ResourceViewContext {\n\n  constructor(public readonly component: ComponentRef,\n              public readonly target: Navigable,\n              public readonly data: BehaviorSubject>) {\n  }\n\n  get componentType() {\n    return this.component.componentType;\n  }\n\n  next(value: ViewData) {\n    this.data.next(value);\n  }\n}\n\n@Directive({\n  selector: 'resource-view'\n})\nexport class ResourceViewDirective implements OnChanges {\n\n  @Input()\n  data?: ViewData;\n\n  private current: ResourceViewContext | null = null;\n\n  constructor(private readonly viewContainer: ViewContainerRef,\n              private readonly resolver: ComponentFactoryResolver,\n              @Optional() private readonly navigableRef?: NavigableRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Show nothing when there is nothing to show\n    if (!this.data || !this.data.config || !this.data.config.component) {\n      this.destroy();\n      return;\n    }\n\n    // Is this same component as currently visible?\n    if (this.current\n      && this.data.config.component === this.current.componentType\n      // Note: data.target won't change during normal use\n      && this.data.target === this.current.target) {\n      // Propagate new value instead of component re-creation\n      this.current.next(this.data);\n    } else {\n      // Display new component (destroys old one)\n      this.render();\n    }\n  }\n\n  destroy() {\n    if (this.current) {\n      this.current.component.destroy();\n      this.current = null;\n    }\n  }\n\n  render() {\n    // Destroy current view\n    this.destroy();\n\n    // Ignore when there is nothing to render\n    if (!this.data || !this.data.config || !this.data.config.component) {\n      return;\n    }\n\n    // Prepare data observable\n    const dataSource = new BehaviorSubject>(this.data);\n    const target = this.data.target;\n\n    // Create component\n    const factory = this.resolver.resolveComponentFactory(this.data.config.component);\n    const providers = ReflectiveInjector.resolve([\n      {\n        provide: ActivatedView,\n        useValue: new ActivatedView(target, dataSource)\n      }\n    ]);\n    const injector = ReflectiveInjector.fromResolvedProviders(providers, this.viewContainer.parentInjector);\n    const component = this.viewContainer.createComponent(factory, this.viewContainer.length, injector, []);\n\n    // Store reference\n    this.current = new ResourceViewContext(component, target, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortedArray.html":{"url":"classes/SortedArray.html","title":"class - SortedArray","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortedArray\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/sorted-array.ts\n        \n\n            \n                Description\n            \n            \n                Simple array wrapper that sorts on insert, and maintains insert-order for equal elements.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        array\n                                    \n                                    \n                                            Public\n                                        comparer\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        push\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(comparer: Comparer)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              comparer\n                                                              \n                                                                        Comparer\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        push\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            push(value: T)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        Inserts the value while maintaining order defined by the comparer.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              value\n                                                              \n                                                                      T\n                                                              \n                                                              \n                                                              \n                                                              Inserted value.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        array\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    array:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : []\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        comparer\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    comparer:     Comparer\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Comparer\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export type Comparer = (a: T, b: T) => number;\n\n/**\n * Simple array wrapper that sorts on insert, and maintains insert-order for equal elements.\n */\nexport class SortedArray {\n  array: Array = [];\n\n  constructor(public comparer: Comparer) {\n  }\n\n  /**\n   * Inserts the value while maintaining order defined by the comparer.\n   *\n   * @param value Inserted value.\n   */\n  push(value: T) {\n    const i = insertLocation(value, this.array, this.comparer);\n    this.array.splice(i + 1, 0, value);\n  }\n}\n\n/**\n * Compare values using (a: T, b: T) {\n  if (a === b) {\n    return 0;\n  }\n  return a (element: T, array: T[], comparer: Comparer, start: number, end: number): number {\n  if (array.length === 0) {\n    return -1;\n  }\n\n  const pivot = Math.floor((start + end) / 2);\n  const c = comparer(element, array[pivot]);\n\n  if (end - start (element: T, array: T[], comparer: Comparer): number {\n  // Find possible insert location\n  let i = locationFor(element, array, comparer, 0, array.length);\n\n  // We need to do append and maintain insert order\n  if (i >= 0) {\n    while (i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UrlNormalizer.html":{"url":"classes/UrlNormalizer.html","title":"class - UrlNormalizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UrlNormalizer\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/url-normalizer.ts\n        \n\n            \n                Description\n            \n            \n                Component for API URLs normalization.\nTakes in account base-href, location etc.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        normalize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        normalize\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    normalize(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        Normalizes the URL, using current base-href.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URL to normalize. Might be relative, host-relative or protocol-relative.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Normalized absolute URL.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class UrlNormalizer {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseUrlNormalizer extends UrlNormalizer {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserUrlNormalizer extends BaseUrlNormalizer {\n\n  constructor(private readonly platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private readonly document: any) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewTypeStrategy.html":{"url":"classes/ViewTypeStrategy.html","title":"class - ViewTypeStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewTypeStrategy\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        extractType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        extractType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    extractType(response: ViewTypeResponse)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                        Extracts type from the server response, understandable by application.\n            Default implementation uses Content-Type header.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                                      ViewTypeResponse\n                                                              \n                                                              \n                                                              \n                                                              Actual response.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                Found response type. Null if not found.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param response Actual response.\n   * @returns Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewsByStatus.html":{"url":"classes/ViewsByStatus.html","title":"class - ViewsByStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewsByStatus\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-view-registry.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        quality\n                                    \n                                    \n                                            Readonly\n                                        status\n                                    \n                                    \n                                            Readonly\n                                        statusExp\n                                    \n                                    \n                                            Readonly\n                                        types\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(status: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              status\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        quality\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    quality:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        status\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    status:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        statusExp\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    statusExp:     RegExp\n            \n                                \n                            \n                                \n                                    \n                                        Type :     RegExp\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:15\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        types\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    types:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : new SortedArray(qualityComparator)\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:17\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ViewDef } from './view-definition';\nimport { SortedArray } from './utils/sorted-array';\nimport { wildcardToRegex } from './utils/wildcard-to-regex';\nimport { simpleTypeQualityEvaluator, statusQualityEvaluator, TypeQualityEvaluator } from './quality-evaluator';\n\n\nexport const RESOURCE_VIEWS = new InjectionToken('RESOURCE_VIEWS');\nexport const TYPE_QUALITY_EVALUATOR = new InjectionToken('TYPE_QUALITY_EVALUATOR');\n\n\n// Private classes\nclass ViewsByStatus {\n  readonly status: string;\n  readonly statusExp: RegExp;\n  readonly quality: number;\n  readonly types = new SortedArray(qualityComparator);\n\n  constructor(status: string) {\n    this.status = status;\n    this.statusExp = wildcardToRegex(status);\n    this.quality = statusQualityEvaluator(status);\n  }\n}\n\ninterface ParsedViewDef {\n  readonly config: ViewDef;\n  readonly quality: number;\n  readonly typeExp: RegExp;\n}\n\n\n// Public class\n@Injectable()\nexport class ResourceViewRegistry {\n\n  private readonly typeQualityEvaluator: TypeQualityEvaluator;\n  private readonly viewsByStatus = new SortedArray(qualityComparator);\n  private _length = 0;\n\n  constructor(@Inject(RESOURCE_VIEWS) @Optional() views?: any,\n              @Inject(TYPE_QUALITY_EVALUATOR) @Optional() typeQualityEvaluator?: TypeQualityEvaluator) {\n    // Initialize quality evaluator - must be before addViews\n    this.typeQualityEvaluator = typeQualityEvaluator || simpleTypeQualityEvaluator;\n\n    // Ignore if no view is defined - this is supported path for later registration\n    if (views) {\n      // Register views\n      this.addViews(views);\n    }\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  match(type: string, status: number): ViewDef {\n    // Convert number to padded string\n    const statusStr = normalizeStatus(status);\n\n    // Find all matching groups by status\n    for (const group of this.viewsByStatus.array) {\n      // Match\n      if (!group.statusExp.test(statusStr)) {\n        continue;\n      }\n\n      // Find view in the group\n      const view = group.types.array.find(v => v.typeExp.test(type));\n      if (view) {\n        return view.config;\n      }\n    }\n\n    // Not found\n    throw new Error(`No view definition found for type ${type} and status ${status} - please register default view`);\n  }\n\n  addViews(config: ViewDef | ViewDef[]) {\n    // Flatten array\n    if (Array.isArray(config)) {\n      // Recursive call\n      config.forEach(this.addViews, this);\n    } else if (config) {\n      // Single view\n      this.addView(config);\n    }\n  }\n\n  protected addView(config: ViewDef) {\n    // Sanity check\n    this.validateViewDefinition(config);\n\n    // All permutations of status and type\n    toArray(config.status || '2??').forEach(status => {\n      // Get status group\n      const normalizedStatus = normalizeStatusExpression('' + status);\n      const group = this.getViewsByStatus(normalizedStatus);\n\n      // Types\n      toArray(config.type).forEach(type => {\n        this.addSingleView(config, group, type);\n      });\n    });\n  }\n\n  //noinspection JSMethodCanBeStatic\n  protected validateViewDefinition(config: ViewDef) {\n    // Component\n    if (!config.component || typeof config.component !== 'function') {\n      throw newValidationError(config, 'component is mandatory and must be a type');\n    }\n\n    // Type\n    validateType(config);\n\n    // Status\n    validateStatus(config);\n\n    // Quality\n    if (config.quality && typeof config.quality !== 'number') {\n      throw newValidationError(config, 'quality must be a number');\n    }\n  }\n\n  private addSingleView(config: ViewDef, group: ViewsByStatus, type: string) {\n    // Copy of definition, with specific status and type only\n    // See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest\n    config = {\n      ...config, ...{\n        status: group.status,\n        type: type\n      }\n    };\n\n    // Evaluate quality if needed\n    const quality = typeof config.quality === 'number' ? config.quality : this.typeQualityEvaluator(type);\n\n    // Add to the group\n    group.types.push({\n      config: Object.freeze(config),\n      typeExp: wildcardToRegex(type),\n      quality: quality\n    });\n\n    // Increment count\n    this._length++;\n  }\n\n  private getViewsByStatus(status: string) {\n    let byStatus = this.viewsByStatus.array.find(s => s.status === status);\n\n    if (!byStatus) {\n      byStatus = new ViewsByStatus(status);\n      this.viewsByStatus.push(byStatus);\n    }\n\n    return byStatus;\n  }\n}\n\n\n// Validation functions\nfunction validateType(config: ViewDef) {\n  if (Array.isArray(config.type)) {\n    if (config.type.find(t => typeof t !== 'string')) {\n      throw newValidationError(config, 'type array must consist only of strings');\n    }\n  } else if (typeof config.type !== 'string') {\n    throw newValidationError(config, 'type must be a string or array of strings');\n  }\n}\n\nfunction validateStatus(config: ViewDef) {\n  if (config.status) {\n    if (Array.isArray(config.status)) {\n      // Validate array of values\n      config.status.forEach(status => validateStatusExpression(config, '' + status));\n    } else if (typeof config.status === 'string' || typeof config.status === 'number') {\n      // Validate single value\n      validateStatusExpression(config, '' + config.status);\n    } else {\n      // Invalid\n      throw newValidationError(config, 'status must be either string, number or array of them');\n    }\n  }\n}\n\nfunction validateStatusExpression(config: ViewDef, status: string) {\n  if (status.length  3) {\n    throw newValidationError(config, 'status pattern must be between 1 and 3 characters long');\n  }\n\n  if (/[^x\\d?*]/.test(status)) {\n    throw newValidationError(config, 'status pattern contains invalid characters');\n  }\n\n  if (!/^\\d*[?x]*\\**$/.test(status)) {\n    throw newValidationError(config, 'status pattern can contain wildcards only at the end of the pattern');\n  }\n}\n\nfunction newValidationError(config: any, text: string): Error {\n  return new Error('Invalid view configuration, ' + text + ':\\n' + JSON.stringify(config));\n}\n\n// Utils\nexport function normalizeStatusExpression(pattern: string): string {\n  // Handle * wildcard\n  if (pattern.endsWith('*')) {\n    if (pattern.length > 3) {\n      throw new Error('Wildcard * is not supported for status expressions longer then 3 characters: ' + pattern);\n    }\n\n    return (pattern.replace(/\\*/g, '') + '???').substr(0, 3);\n  }\n\n  // Replace x to ?\n  pattern = pattern.replace(/x/g, '?');\n\n  // Pad left with zeroes\n  return pattern.length (value: T | T[]): Array {\n  return Array.isArray(value) ? value as T[] : [value] as T[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-definition.ts\n        \n\n\n\n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [name: string]:    any\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:4\n                                        \n                                    \n                        \n                    \n            \n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\n\nexport interface Data {\n  readonly [name: string]: any;\n}\n\nexport type StatusType = number | string;\n\n/**\n * Defines view for given type.\n */\nexport interface ViewDef {\n\n  /**\n   * Component that is viewed when this view definition is matched against response.\n   * Mandatory. Don't forget to add it to modules `declarations`.\n   */\n  readonly component: Type;\n\n  /**\n   * Media type of the response.\n   * It supports wildcard characters '?' (any single character), '*' (zero or more characters).\n   *\n   * Unless status is set, this matches only 2xx (successful) status codes (see `status` property).\n   *\n   * To match any type (that is, fallback view), set the type to '*'.\n   */\n  readonly type: string | string[];\n\n  /**\n   * HTTP response status code, which is 3-digit integer.\n   * It supports wildcard characters '?' (any single character) at the end of the string - that is,\n   * expression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\n   * Wildcard character '*' is also supported, but has different meaning than usual - expression is still\n   * expanded to 3 characters. Which means, '2*' == '2??', and '*' == '???'.\n   * It might be array of values, handling multiple disjunct values.\n   *\n   * Default is '2xx', that is >=200 and \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Link.html":{"url":"interfaces/Link.html","title":"interface - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Link\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/hal-link.ts\n        \n\n            \n                Description\n            \n            \n                Hyperlink according to [JSON HAL specification draft]{@link https://tools.ietf.org/html/draft-kelly-json-hal-08}.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deprecation\n                                \n                                \n                                        href\n                                \n                                \n                                        hreflang\n                                \n                                \n                                        name\n                                \n                                \n                                        profile\n                                \n                                \n                                        templated\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deprecation\n                                    \n                                \n                                \n                                    \n                                        deprecation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Its presence indicates that the link is to be deprecated (i.e. removed) at a future date.\nIts value is a URL that SHOULD provide further information about the deprecation.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                    \n                                \n                                \n                                    \n                                        href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    URI according to RFC3986.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hreflang\n                                    \n                                \n                                \n                                    \n                                        hreflang:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    Its value is a string and is intended for indicating the language of the target resource (as defined by RFC5988).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    Its value MAY be used as a secondary key for selecting Link Objects, which share the same relation type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:41\n                                        \n                                    \n\n                            \n                                \n                                    Its value is a string which is a URI that hints about the profile of the target resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templated\n                                    \n                                \n                                \n                                    \n                                        templated:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:37\n                                        \n                                    \n\n                            \n                                \n                                    Its value is boolean and SHOULD be true when the Link Object's \"href\"\nproperty is a URI Template.\nIts value SHOULD be considered false if it is undefined or any other\nvalue than true.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    Its value is a string and is intended for labelling the link with a human-readable identifier (as defined by RFC5988).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    Its value is a string used as a hint to indicate the media type expected when dereferencing the target resource.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Link {\n  /**\n   * URI according to RFC3986.\n   */\n  readonly href: string;\n  /**\n   * Its value is a string used as a hint to indicate the media type expected when dereferencing the target resource.\n   */\n  readonly type?: string;\n  /**\n   * Its presence indicates that the link is to be deprecated (i.e. removed) at a future date.\n   * Its value is a URL that SHOULD provide further information about the deprecation.\n   */\n  readonly deprecation?: string;\n  /**\n   * Its value MAY be used as a secondary key for selecting Link Objects, which share the same relation type.\n   */\n  readonly name?: string;\n  /**\n   * Its value is a string and is intended for labelling the link with a human-readable identifier (as defined by RFC5988).\n   */\n  readonly title?: string;\n  /**\n   * Its value is a string and is intended for indicating the language of the target resource (as defined by RFC5988).\n   */\n  readonly hreflang?: string;\n  /**\n   * Its value is boolean and SHOULD be true when the Link Object's \"href\"\n   * property is a URI Template.\n   *\n   * Its value SHOULD be considered false if it is undefined or any other\n   * value than true.\n   */\n  readonly templated?: boolean;\n  /**\n   * Its value is a string which is a URI that hints about the profile of the target resource.\n   */\n  readonly profile?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationInfo.html":{"url":"interfaces/LocationInfo.html","title":"interface - LocationInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocationInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/parse-url.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        pathname\n                                \n                                \n                                        protocol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathname\n                                    \n                                \n                                \n                                    \n                                        pathname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        const URL_PATTERN = /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/;\n\nexport interface LocationInfo {\n  readonly protocol?: string;\n  readonly host?: string;\n  readonly pathname?: string;\n}\n\nexport interface UrlInfo extends LocationInfo {\n  readonly pathrelative?: string;\n}\n\n/**\n * Rough URL parser.\n *\n * @param url URL to be parsed. Must be well-formed.\n * @returns Parsed object or null for relative\n */\nexport function parseUrl(url: string): UrlInfo {\n  const match = url.match(URL_PATTERN);\n\n  if (match) {\n    // URL parsed\n    const info: {\n      protocol?: string;\n      host?: string;\n      pathname?: string;\n    } = {};\n\n    if (match[1] !== undefined) {\n      info.protocol = match[1];\n    }\n    if (match[2] !== undefined) {\n      info.host = match[2];\n    }\n    if (match[3] !== undefined) {\n      info.pathname = match[3];\n    }\n\n    // Return built object\n    return info;\n  } else if (url [0] === '/') {\n    // Absolute url\n    return {\n      pathname: url\n    };\n  } else {\n    // Relative\n    return {\n      pathrelative: url\n    };\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationReference.html":{"url":"interfaces/LocationReference.html","title":"interface - LocationReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocationReference\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/location-reference.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                                \n                                        urlChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/location-reference.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlChange\n                                    \n                                \n                                \n                                    \n                                        urlChange:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/location-reference.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nexport interface LocationReference {\n  url: string;\n  urlChange: Observable;\n}\n\nexport function isLocationReference(obj: any): obj is LocationReference {\n  return obj && 'url' in obj && obj.urlChange instanceof Observable;\n}\n\nexport function bindUrl(source: LocationReference, target: LocationReference): Subscription {\n  // Two-way binding, and return combined subscription for both\n  let s = source.urlChange.subscribe(url => target.url = url);\n  s = s.add(target.urlChange.subscribe(url => source.url = url));\n\n  // Set initial value (urlChange will probably be cold - and if not, it should not invoke any action after subscribe)\n  target.url = source.url;\n\n  // Return subscription\n  return s;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Navigable.html":{"url":"interfaces/Navigable.html","title":"interface - Navigable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Navigable\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/navigable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    go\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        go\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            go(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/navigable.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { FactoryProvider, Inject, InjectionToken, Optional, Self, SkipSelf } from '@angular/core';\nimport { resourceDataNavigableRef } from './resource-data';\n\nexport interface Navigable {\n\n  go(url: string): void;\n}\n\n/**\n * Safe-cast function for {@link Navigable} instances.\n * Returns `true` if `obj` is {@link Navigable}.\n */\nexport function isNavigable(obj: any): obj is Navigable {\n  return obj && typeof obj.go === 'function';\n}\n\n/**\n * Injectable reference to {@link Navigable}.\n * Note that this doesn't have to be immutable class.\n */\nexport abstract class NavigableRef {\n\n  /**\n   * The actual {@link Navigable} instance.\n   *\n   * Note that since this class is not immutable by definition, there is no guarantee its value won't change.\n   * Therefore its recommended to always keep the {@link NavigableRef} instance instead of dereferencing it.\n   */\n  abstract get navigable(): Navigable;\n}\n\nclass NavigableRefImpl extends NavigableRef {\n\n  constructor(public readonly navigable: Navigable) {\n    super();\n  }\n}\n\n/**\n * Creates immutable {@link NavigableRef} instance from given value.\n */\nexport function makeNavigableRef(value: Navigable): NavigableRef {\n  return new NavigableRefImpl(value);\n}\n\n/**\n * Token for top-level (root) {@link NavigableRef} instance.\n *\n * To provide it in your component, you might use {@link topLevelNavigableRef}, however see its docs for proper usage.\n */\nexport const TOP_LEVEL_NAVIGABLE = new InjectionToken('TOP_LEVEL_NAVIGABLE');\n\n\n/**\n * Provides {@link TOP_LEVEL_NAVIGABLE} reference. It honors existing instance, therefore its safe to declare it\n * in the nested components.\n * When there is no existing top-level reference available, current {@link NavigableRef} is used.\n *\n * Note that this requires {@link NavigableRef} to be provided by current component, regardless it being used or not.\n *\n * @see TOP_LEVEL_NAVIGABLE\n * @see NavigationRef\n * @see resourceDataNavigableRef\n */\nexport function topLevelNavigableRef(): FactoryProvider {\n  return {\n    provide: TOP_LEVEL_NAVIGABLE,\n    useFactory: topLevelNavigableFactory,\n    deps: [\n      [NavigableRef, new Self()],\n      [new Inject(TOP_LEVEL_NAVIGABLE), new SkipSelf(), new Optional()]\n    ]\n  };\n}\n\n/**\n * @internal\n * @see topLevelNavigableRef\n */\nexport function topLevelNavigableFactory(current: NavigableRef, existing?: NavigableRef): NavigableRef {\n  return existing || current;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedViewDef.html":{"url":"interfaces/ParsedViewDef.html","title":"interface - ParsedViewDef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParsedViewDef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-view-registry.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        quality\n                                \n                                \n                                        typeExp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     ViewDef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewDef\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:27\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                    \n                                \n                                \n                                    \n                                        quality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:28\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeExp\n                                    \n                                \n                                \n                                    \n                                        typeExp:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:29\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ViewDef } from './view-definition';\nimport { SortedArray } from './utils/sorted-array';\nimport { wildcardToRegex } from './utils/wildcard-to-regex';\nimport { simpleTypeQualityEvaluator, statusQualityEvaluator, TypeQualityEvaluator } from './quality-evaluator';\n\n\nexport const RESOURCE_VIEWS = new InjectionToken('RESOURCE_VIEWS');\nexport const TYPE_QUALITY_EVALUATOR = new InjectionToken('TYPE_QUALITY_EVALUATOR');\n\n\n// Private classes\nclass ViewsByStatus {\n  readonly status: string;\n  readonly statusExp: RegExp;\n  readonly quality: number;\n  readonly types = new SortedArray(qualityComparator);\n\n  constructor(status: string) {\n    this.status = status;\n    this.statusExp = wildcardToRegex(status);\n    this.quality = statusQualityEvaluator(status);\n  }\n}\n\ninterface ParsedViewDef {\n  readonly config: ViewDef;\n  readonly quality: number;\n  readonly typeExp: RegExp;\n}\n\n\n// Public class\n@Injectable()\nexport class ResourceViewRegistry {\n\n  private readonly typeQualityEvaluator: TypeQualityEvaluator;\n  private readonly viewsByStatus = new SortedArray(qualityComparator);\n  private _length = 0;\n\n  constructor(@Inject(RESOURCE_VIEWS) @Optional() views?: any,\n              @Inject(TYPE_QUALITY_EVALUATOR) @Optional() typeQualityEvaluator?: TypeQualityEvaluator) {\n    // Initialize quality evaluator - must be before addViews\n    this.typeQualityEvaluator = typeQualityEvaluator || simpleTypeQualityEvaluator;\n\n    // Ignore if no view is defined - this is supported path for later registration\n    if (views) {\n      // Register views\n      this.addViews(views);\n    }\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  match(type: string, status: number): ViewDef {\n    // Convert number to padded string\n    const statusStr = normalizeStatus(status);\n\n    // Find all matching groups by status\n    for (const group of this.viewsByStatus.array) {\n      // Match\n      if (!group.statusExp.test(statusStr)) {\n        continue;\n      }\n\n      // Find view in the group\n      const view = group.types.array.find(v => v.typeExp.test(type));\n      if (view) {\n        return view.config;\n      }\n    }\n\n    // Not found\n    throw new Error(`No view definition found for type ${type} and status ${status} - please register default view`);\n  }\n\n  addViews(config: ViewDef | ViewDef[]) {\n    // Flatten array\n    if (Array.isArray(config)) {\n      // Recursive call\n      config.forEach(this.addViews, this);\n    } else if (config) {\n      // Single view\n      this.addView(config);\n    }\n  }\n\n  protected addView(config: ViewDef) {\n    // Sanity check\n    this.validateViewDefinition(config);\n\n    // All permutations of status and type\n    toArray(config.status || '2??').forEach(status => {\n      // Get status group\n      const normalizedStatus = normalizeStatusExpression('' + status);\n      const group = this.getViewsByStatus(normalizedStatus);\n\n      // Types\n      toArray(config.type).forEach(type => {\n        this.addSingleView(config, group, type);\n      });\n    });\n  }\n\n  //noinspection JSMethodCanBeStatic\n  protected validateViewDefinition(config: ViewDef) {\n    // Component\n    if (!config.component || typeof config.component !== 'function') {\n      throw newValidationError(config, 'component is mandatory and must be a type');\n    }\n\n    // Type\n    validateType(config);\n\n    // Status\n    validateStatus(config);\n\n    // Quality\n    if (config.quality && typeof config.quality !== 'number') {\n      throw newValidationError(config, 'quality must be a number');\n    }\n  }\n\n  private addSingleView(config: ViewDef, group: ViewsByStatus, type: string) {\n    // Copy of definition, with specific status and type only\n    // See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest\n    config = {\n      ...config, ...{\n        status: group.status,\n        type: type\n      }\n    };\n\n    // Evaluate quality if needed\n    const quality = typeof config.quality === 'number' ? config.quality : this.typeQualityEvaluator(type);\n\n    // Add to the group\n    group.types.push({\n      config: Object.freeze(config),\n      typeExp: wildcardToRegex(type),\n      quality: quality\n    });\n\n    // Increment count\n    this._length++;\n  }\n\n  private getViewsByStatus(status: string) {\n    let byStatus = this.viewsByStatus.array.find(s => s.status === status);\n\n    if (!byStatus) {\n      byStatus = new ViewsByStatus(status);\n      this.viewsByStatus.push(byStatus);\n    }\n\n    return byStatus;\n  }\n}\n\n\n// Validation functions\nfunction validateType(config: ViewDef) {\n  if (Array.isArray(config.type)) {\n    if (config.type.find(t => typeof t !== 'string')) {\n      throw newValidationError(config, 'type array must consist only of strings');\n    }\n  } else if (typeof config.type !== 'string') {\n    throw newValidationError(config, 'type must be a string or array of strings');\n  }\n}\n\nfunction validateStatus(config: ViewDef) {\n  if (config.status) {\n    if (Array.isArray(config.status)) {\n      // Validate array of values\n      config.status.forEach(status => validateStatusExpression(config, '' + status));\n    } else if (typeof config.status === 'string' || typeof config.status === 'number') {\n      // Validate single value\n      validateStatusExpression(config, '' + config.status);\n    } else {\n      // Invalid\n      throw newValidationError(config, 'status must be either string, number or array of them');\n    }\n  }\n}\n\nfunction validateStatusExpression(config: ViewDef, status: string) {\n  if (status.length  3) {\n    throw newValidationError(config, 'status pattern must be between 1 and 3 characters long');\n  }\n\n  if (/[^x\\d?*]/.test(status)) {\n    throw newValidationError(config, 'status pattern contains invalid characters');\n  }\n\n  if (!/^\\d*[?x]*\\**$/.test(status)) {\n    throw newValidationError(config, 'status pattern can contain wildcards only at the end of the pattern');\n  }\n}\n\nfunction newValidationError(config: any, text: string): Error {\n  return new Error('Invalid view configuration, ' + text + ':\\n' + JSON.stringify(config));\n}\n\n// Utils\nexport function normalizeStatusExpression(pattern: string): string {\n  // Handle * wildcard\n  if (pattern.endsWith('*')) {\n    if (pattern.length > 3) {\n      throw new Error('Wildcard * is not supported for status expressions longer then 3 characters: ' + pattern);\n    }\n\n    return (pattern.replace(/\\*/g, '') + '???').substr(0, 3);\n  }\n\n  // Replace x to ?\n  pattern = pattern.replace(/x/g, '?');\n\n  // Pad left with zeroes\n  return pattern.length (value: T | T[]): Array {\n  return Array.isArray(value) ? value as T[] : [value] as T[];\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyHeaders.html":{"url":"interfaces/ReadOnlyHeaders.html","title":"interface - ReadOnlyHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyHeaders\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/read-only-headers.ts\n        \n\n            \n                Description\n            \n            \n                Interface that serves as read-only accessor to the {@link HttpHeaders}.\nAlso allows easy custom implementation and decouples it from HTTP.\nEmpty header collection is provided in the {@link NO_HEADERS}.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                                \n                                    getAll\n                                \n                                \n                                    has\n                                \n                                \n                                    keys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        get\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            get(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        Returns first header that matches given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAll\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAll(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                        Returns list of header values for a given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     [] | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        has\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            has(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:11\n                                        \n                                    \n            \n                            \n                                \n                                        Checks for existence of header by given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        keys\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            keys()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:21\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the names of the headers.\n            \n            \n                                        \n                                            Returns :     string[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ReadOnlyHeaders {\n  /**\n   * Checks for existence of header by given name.\n   */\n  has(name: string): boolean;\n\n  /**\n   * Returns first header that matches given name.\n   */\n  get(name: string): string | null;\n\n  /**\n   * Returns the names of the headers.\n   */\n  keys(): string[];\n\n  /**\n   * Returns list of header values for a given name.\n   */\n  getAll(name: string): string[] | null;\n}\n\n/**\n * Dummy implementation of {@link ReadOnlyHeaders} that never returns anything.\n */\nexport const NO_HEADERS: ReadOnlyHeaders = {\n  has(name: string): boolean {\n    return false;\n  },\n\n  get(name: string): string | null {\n    return null;\n  },\n\n  keys(): string[] {\n    return [];\n  },\n\n  getAll(name: string): string[] | null {\n    return null;\n  }\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceRouterOptions.html":{"url":"interfaces/ResourceRouterOptions.html","title":"interface - ResourceRouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceRouterOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-router-module.ts\n        \n\n            \n                Description\n            \n            \n                Set of global configuration options for ResourceRouterModule.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        prefix\n                                \n                                \n                                        resourceClient\n                                \n                                \n                                        useHash\n                                \n                                \n                                        viewTypeStrategy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:46\n                                        \n                                    \n\n                            \n                                \n                                    Prefix for the URL. Can be base-relative, host-relative or absolute.\nAlways should however end with slash ('/').\nWhen using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\nThat is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\nAnother way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resourceClient\n                                    \n                                \n                                \n                                    \n                                        resourceClient:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:65\n                                        \n                                    \n\n                            \n                                \n                                    Changes implementation of ResourceClient.\nDefault is HttpResourceClient.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useHash\n                                    \n                                \n                                \n                                    \n                                        useHash:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:53\n                                        \n                                    \n\n                            \n                                \n                                    Enables hash-bang navigation mode. Default is HTML5 mode.\nRead {@link #prefix} details when setting to true.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewTypeStrategy\n                                    \n                                \n                                \n                                    \n                                        viewTypeStrategy:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:59\n                                        \n                                    \n\n                            \n                                \n                                    Changes implementation of ViewTypeStrategy.\nDefault is HeaderViewTypeStrategy using Content-Type header.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  APP_BASE_HREF,\n  CommonModule,\n  HashLocationStrategy,\n  Location,\n  LocationStrategy,\n  PathLocationStrategy,\n  PlatformLocation\n} from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional, Type } from '@angular/core';\nimport { ApiMapper } from './api-mapper';\nimport { ApiLocation } from './api-location';\nimport { HeaderViewTypeStrategy, ViewTypeStrategy } from './view-type-strategy';\nimport { RESOURCE_VIEWS, ResourceViewRegistry } from './resource-view-registry';\nimport { ViewDef } from './view-definition';\nimport { ResourceLinkDirective } from './directives/resource-link';\nimport { ResourceLinkWithHrefDirective } from './directives/resource-link-with-href';\nimport { ResourceOutletComponent } from './directives/resource-outlet';\nimport { HttpResourceClient, ResourceClient } from './resource-client';\nimport { ResourceDataOfDirective } from './directives/resource-data-of';\nimport { ResourceContextDirective } from './directives/resource-context';\nimport { ResourceViewDirective } from './directives/resource-view';\nimport { DefaultEmptyComponent } from './components/default-empty.component';\nimport { DefaultErrorComponent } from './components/default-error.component';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING } from './system-media-types';\nimport { BrowserUrlNormalizer, UrlNormalizer } from './url-normalizer';\nimport { APP_API_PREFIX, SingleApiMapper } from './single-api-mapper';\n\n\nexport const RESOURCE_ROUTER_CONFIGURATION = new InjectionToken('RESOURCE_ROUTER_CONFIGURATION');\n\n\n/**\n * Set of global configuration options for {@link ResourceRouterModule}.\n */\nexport interface ResourceRouterOptions {\n  /**\n   * Prefix for the URL. Can be base-relative, host-relative or absolute.\n   * Always should however end with slash ('/').\n   *\n   * When using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\n   * That is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\n   *\n   * Another way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n   */\n  readonly prefix: string;\n\n  /**\n   * Enables hash-bang navigation mode. Default is HTML5 mode.\n   *\n   * Read {@link #prefix} details when setting to true.\n   */\n  readonly useHash?: boolean;\n\n  /**\n   * Changes implementation of {@link ViewTypeStrategy}.\n   * Default is {@link HeaderViewTypeStrategy} using `Content-Type` header.\n   */\n  readonly viewTypeStrategy?: Type;\n\n  /**\n   * Changes implementation of {@link ResourceClient}.\n   * Default is {@link HttpResourceClient}.\n   */\n  readonly resourceClient?: Type;\n}\n\n\n@NgModule({\n  declarations: [\n    ResourceOutletComponent,\n    ResourceDataOfDirective,\n    ResourceContextDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective,\n    DefaultEmptyComponent,\n    DefaultErrorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ResourceOutletComponent,\n    ResourceDataOfDirective,\n    ResourceContextDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective\n  ]\n})\nexport class ResourceRouterModule {\n\n  static configure(options: ResourceRouterOptions): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation,\n            [new Inject(APP_BASE_HREF), new Optional()],\n            RESOURCE_ROUTER_CONFIGURATION\n          ]\n        },\n        Location,\n        {\n          provide: UrlNormalizer,\n          useClass: BrowserUrlNormalizer\n        },\n        {\n          provide: ApiMapper,\n          useClass: SingleApiMapper\n        },\n        ApiLocation,\n        ResourceViewRegistry,\n        {\n          provide: APP_API_PREFIX,\n          useValue: options.prefix\n        },\n        {\n          provide: RESOURCE_ROUTER_CONFIGURATION,\n          useValue: options\n        },\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: [emptyView(), errorView()],\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: [DefaultErrorComponent, DefaultEmptyComponent],\n          multi: true\n        },\n        {\n          provide: ViewTypeStrategy,\n          useClass: options.viewTypeStrategy || HeaderViewTypeStrategy\n        },\n        {\n          provide: ResourceClient,\n          useClass: options.resourceClient || HttpResourceClient\n        }\n      ]\n    };\n  }\n\n  static forTypes(views: ViewDef[]): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: views,\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: views,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function provideLocationStrategy(platformLocationStrategy: PlatformLocation, baseHref: string, options: ResourceRouterOptions) {\n  return options.useHash\n    ? new HashLocationStrategy(platformLocationStrategy, baseHref)\n    : new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function emptyView(): ViewDef {\n  return {\n    component: DefaultEmptyComponent,\n    status: 204,\n    type: [MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING],\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function errorView(): ViewDef {\n  return {\n    component: DefaultErrorComponent,\n    status: '*',\n    type: '*',\n    responseType: 'text',\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlInfo.html":{"url":"interfaces/UrlInfo.html","title":"interface - UrlInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UrlInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/parse-url.ts\n        \n\n\n            \n                Extends\n            \n            \n                    LocationInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pathrelative\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pathrelative\n                                    \n                                \n                                \n                                    \n                                        pathrelative:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        const URL_PATTERN = /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/;\n\nexport interface LocationInfo {\n  readonly protocol?: string;\n  readonly host?: string;\n  readonly pathname?: string;\n}\n\nexport interface UrlInfo extends LocationInfo {\n  readonly pathrelative?: string;\n}\n\n/**\n * Rough URL parser.\n *\n * @param url URL to be parsed. Must be well-formed.\n * @returns Parsed object or null for relative\n */\nexport function parseUrl(url: string): UrlInfo {\n  const match = url.match(URL_PATTERN);\n\n  if (match) {\n    // URL parsed\n    const info: {\n      protocol?: string;\n      host?: string;\n      pathname?: string;\n    } = {};\n\n    if (match[1] !== undefined) {\n      info.protocol = match[1];\n    }\n    if (match[2] !== undefined) {\n      info.host = match[2];\n    }\n    if (match[3] !== undefined) {\n      info.pathname = match[3];\n    }\n\n    // Return built object\n    return info;\n  } else if (url [0] === '/') {\n    // Absolute url\n    return {\n      pathname: url\n    };\n  } else {\n    // Relative\n    return {\n      pathrelative: url\n    };\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewData.html":{"url":"interfaces/ViewData.html","title":"interface - ViewData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewData\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        config\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                                \n                                        statusText\n                                \n                                \n                                        target\n                                \n                                \n                                        type\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:15\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     ViewDef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewDef\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     ReadOnlyHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadOnlyHeaders\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:14\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                    \n                                \n                                \n                                    \n                                        statusText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:13\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     Navigable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Navigable\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ViewDef } from './view-definition';\nimport { ReadOnlyHeaders } from './read-only-headers';\nimport { Navigable } from './navigable';\n\n\nexport interface ViewData {\n\n  readonly target: Navigable;\n  readonly config: ViewDef;\n  readonly type: string;\n  readonly url: string;\n  readonly status: number;\n  readonly statusText: string;\n  readonly headers: ReadOnlyHeaders;\n  readonly body: T;\n\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewDef.html":{"url":"interfaces/ViewDef.html","title":"interface - ViewDef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewDef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-definition.ts\n        \n\n            \n                Description\n            \n            \n                Defines view for given type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                        data\n                                \n                                \n                                        noWildcards\n                                \n                                \n                                        quality\n                                \n                                \n                                        resolve\n                                \n                                \n                                        responseType\n                                \n                                \n                                        status\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    Component that is viewed when this view definition is matched against response.\nMandatory. Don't forget to add it to modules declarations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:90\n                                        \n                                    \n\n                            \n                                \n                                    Values that are passed to the view. These values are not resolved in any way - observables remains observables,\nfunctions are not called.\nTo have resolved data, use resolve property.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noWildcards\n                                    \n                                \n                                \n                                    \n                                        noWildcards:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:102\n                                        \n                                    \n\n                            \n                                \n                                    Disables wildcard character parsing in type property.\nNote: Wildcards in status will still work.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                    \n                                \n                                \n                                    \n                                        quality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:73\n                                        \n                                    \n\n                            \n                                \n                                    Similar to quality in Accept header, except it accepts any number, not just range 0..1.\nUsually it won't have to be overridden, since typical application configuration is to have many specific types\nand one wildcard as the fallback view.\nIf undefined, it is calculated from type by following rules:\n\nType equal to '*' has quality of 0.0.\nType with any wildcard has quality of 0.5\nType without wildcard has quality of 1.0.\n\nNumber of wildcard characters is insignificant.\nOtherwise it maintains order of definition (note that you should never rely on this across modules).\nIt is recommended to define views with low quality (wildcards) only on application module level, domain-specific modules\nshould always match domain-specific types. Defining it all across application makes it hard to maintain and application\nbehavior might be non-deterministic.\nExample:\nTODO show how same wildcards are treated and how to override quality.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:95\n                                        \n                                    \n\n                            \n                                \n                                    TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                    \n                                \n                                \n                                    \n                                        responseType:     \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"json\" | \"text\"\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:83\n                                        \n                                    \n\n                            \n                                \n                                    Type of the parser, which should be used to produce final body.\nDefault is 'json'. If other response type is required (like blob for images), it must be set accordingly.\nNote that 'arraybuffer' and 'blob' are not supported right now. For proper support, responseType must be set before\nrequest is sent, however we don't know what view will consume the given request, so we don't know responseType\nwhen the request is being sent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     StatusType | []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StatusType | []\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:50\n                                        \n                                    \n\n                            \n                                \n                                    HTTP response status code, which is 3-digit integer.\nIt supports wildcard characters '?' (any single character) at the end of the string - that is,\nexpression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\nWildcard character '' is also supported, but has different meaning than usual - expression is still\nexpanded to 3 characters. Which means, '2' == '2??', and '*' == '???'.\nIt might be array of values, handling multiple disjunct values.\nDefault is '2xx', that is >=200 and \nSpecificity is calculated by number of wildcard positions (since there is 3 character limit):\n\n999\n99?\n9??\n???\n\nNote that both status and type must be matched. To match specific status without any type, set type to ''.\nTo match anything, set both to ''.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string | []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | []\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    Media type of the response.\nIt supports wildcard characters '?' (any single character), '*' (zero or more characters).\nUnless status is set, this matches only 2xx (successful) status codes (see status property).\nTo match any type (that is, fallback view), set the type to '*'.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n\nexport interface Data {\n  readonly [name: string]: any;\n}\n\nexport type StatusType = number | string;\n\n/**\n * Defines view for given type.\n */\nexport interface ViewDef {\n\n  /**\n   * Component that is viewed when this view definition is matched against response.\n   * Mandatory. Don't forget to add it to modules `declarations`.\n   */\n  readonly component: Type;\n\n  /**\n   * Media type of the response.\n   * It supports wildcard characters '?' (any single character), '*' (zero or more characters).\n   *\n   * Unless status is set, this matches only 2xx (successful) status codes (see `status` property).\n   *\n   * To match any type (that is, fallback view), set the type to '*'.\n   */\n  readonly type: string | string[];\n\n  /**\n   * HTTP response status code, which is 3-digit integer.\n   * It supports wildcard characters '?' (any single character) at the end of the string - that is,\n   * expression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\n   * Wildcard character '*' is also supported, but has different meaning than usual - expression is still\n   * expanded to 3 characters. Which means, '2*' == '2??', and '*' == '???'.\n   * It might be array of values, handling multiple disjunct values.\n   *\n   * Default is '2xx', that is >=200 and \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewTypeResponse.html":{"url":"interfaces/ViewTypeResponse.html","title":"interface - ViewTypeResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewTypeResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n            \n                Description\n            \n            \n                Helper interface with subset of HttpResponse fields, for better abstraction.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    The response body, or null if one was not returned.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     ReadOnlyHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadOnlyHeaders\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    All response headers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Response status code.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param response Actual response.\n   * @returns Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bindUrl\n                        \n                        \n                            defaultComparer\n                        \n                        \n                            emptyView\n                        \n                        \n                            errorView\n                        \n                        \n                            escapeRegExpPattern\n                        \n                        \n                            insertLocation\n                        \n                        \n                            isLocationReference\n                        \n                        \n                            isNavigable\n                        \n                        \n                            locationFor\n                        \n                        \n                            makeNavigableRef\n                        \n                        \n                            newValidationError\n                        \n                        \n                            noOpLogFn\n                        \n                        \n                            normalizeMediaType\n                        \n                        \n                            normalizeStatus\n                        \n                        \n                            normalizeStatusExpression\n                        \n                        \n                            parseUrl\n                        \n                        \n                            provideLocationStrategy\n                        \n                        \n                            qualityComparator\n                        \n                        \n                            resourceContextNavigableRef\n                        \n                        \n                            resourceContextNavigableRefFactory\n                        \n                        \n                            resourceDataNavigableRef\n                        \n                        \n                            simpleTypeQualityEvaluator\n                        \n                        \n                            statusQualityEvaluator\n                        \n                        \n                            stringToJSON\n                        \n                        \n                            toArray\n                        \n                        \n                            topLevelNavigableFactory\n                        \n                        \n                            topLevelNavigableRef\n                        \n                        \n                            validateStatus\n                        \n                        \n                            validateStatusExpression\n                        \n                        \n                            validateType\n                        \n                        \n                            wildcardToRegex\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/location-reference.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                bindUrl\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    bindUrl(source: typeReference, target: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      source\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      target\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isLocationReference\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    isLocationReference(obj: any)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      obj\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/sorted-array.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                defaultComparer\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    defaultComparer(a: typeReference, b: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Compare values using \n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      a\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      First value to be compared.\n    \n                                                    \n                                                    \n                                                      b\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      Second value to be compared.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                insertLocation\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    insertLocation(element: typeReference, array: undefined, comparer: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      element\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      array\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      comparer\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                locationFor\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    locationFor(element: typeReference, array: undefined, comparer: typeReference, start: number, end: number)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      element\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      array\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      comparer\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      start\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      end\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/resource-router-module.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                emptyView\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    emptyView()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                errorView\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    errorView()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                provideLocationStrategy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    provideLocationStrategy(platformLocationStrategy: typeReference, baseHref: string, options: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Internal factory function, exported only for AOT support.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      platformLocationStrategy\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      baseHref\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      options\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/wildcard-to-regex.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                escapeRegExpPattern\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    escapeRegExpPattern(s: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Converts any string to regular expression, which matches it. Handles special RegExp characters.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      s\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Any string.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                wildcardToRegex\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    wildcardToRegex(wildcard: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Converts wildcard pattern with ? and * characters to regular expression.\n    Usage:\n    wildcardToRegex('*.js').test('foo.js') == true\n    wildcardToRegex('*.js').test('foo.jsx') == false\n    wildcardToRegex('image/*').test('image/png') == true\n    wildcardToRegex('image/*').test('text/plain') == false\n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      wildcard\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Wildcard pattern, supports ? and * characters.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/navigable.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                isNavigable\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    isNavigable(obj: any)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Safe-cast function for Navigable instances.\n    Returns true if obj is Navigable.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      obj\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                makeNavigableRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    makeNavigableRef(value: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Creates immutable NavigableRef instance from given value.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      value\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                topLevelNavigableFactory\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    topLevelNavigableFactory(current: typeReference, existing?: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      current\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      existing\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                          true\n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                topLevelNavigableRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    topLevelNavigableRef()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/lib/src/resource-view-registry.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                newValidationError\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    newValidationError(config: any, text: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      config\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      text\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                normalizeStatus\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    normalizeStatus(status: number)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      status\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                normalizeStatusExpression\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    normalizeStatusExpression(pattern: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      pattern\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                qualityComparator\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    qualityComparator(a: undefined, b: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      a\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      b\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                toArray\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    toArray(value: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Returns value if it is array, otherwise it wraps the value in the array.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      value\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      Single value or array of values.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                validateStatus\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    validateStatus(config: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      config\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                validateStatusExpression\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    validateStatusExpression(config: typeReference, status: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      config\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      status\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                validateType\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    validateType(config: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      config\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/debug-log.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                noOpLogFn\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    noOpLogFn(message: string, ...args: undefined)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      message\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      args\n                                                      \n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/normalize-media-type.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                normalizeMediaType\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    normalizeMediaType(mimeType: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Normalizes the media type. Removes format suffix (everything after +), and prepends application/ if there is\n    just subtype provided.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      mimeType\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Media type to match.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/parse-url.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                parseUrl\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    parseUrl(url: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Rough URL parser.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      url\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      URL to be parsed. Must be well-formed.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/directives/resource-context.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                resourceContextNavigableRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    resourceContextNavigableRef()\n                        \n                    \n    \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                resourceContextNavigableRefFactory\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    resourceContextNavigableRefFactory(self: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      self\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/resource-data.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                resourceDataNavigableRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    resourceDataNavigableRef()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/lib/src/quality-evaluator.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                simpleTypeQualityEvaluator\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    simpleTypeQualityEvaluator(type: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                View type evaluator function, that returns:\n    0 for pure wildcard types (like '')\n    0.5 for types containing wildcard (like 'aaa/')\n    1 for types without wildcard characters.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Type to evaluate.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                statusQualityEvaluator\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    statusQualityEvaluator(status: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Response status code pattern quality evaluator.\n    0 for pure wildcard patterns (like '*' or '???')\n    1 for exact values (like '204')\n    otherwise its ration of wildcard to number characters. That is '2??' is 0.333, '20?' is 0.666.\n    This function assumes all status strings has constant length. Otherwise values would be inconsistent.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      status\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Status to evaluate.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/http-utils.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                stringToJSON\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    stringToJSON(input: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Parses text as JSON, removing XSSI prefix, if present.\n    Follows Angular internal JSON handling.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      input\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Source string.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_API_PREFIX\n                        \n                        \n                            debugLog\n                        \n                        \n                            MEDIA_TYPE_NORMALIZER\n                        \n                        \n                            MEDIA_TYPE_ROUTER_EMPTY\n                        \n                        \n                            MEDIA_TYPE_ROUTER_ERROR\n                        \n                        \n                            MEDIA_TYPE_ROUTER_LOADING\n                        \n                        \n                            nextId\n                        \n                        \n                            NO_HEADERS\n                        \n                        \n                            NOOP_NAVIGABLE\n                        \n                        \n                            RESOURCE_ROUTER_CONFIGURATION\n                        \n                        \n                            RESOURCE_VIEWS\n                        \n                        \n                            TARGET_SELF\n                        \n                        \n                            TARGET_TOP\n                        \n                        \n                            TOP_LEVEL_NAVIGABLE\n                        \n                        \n                            TYPE_QUALITY_EVALUATOR\n                        \n                        \n                            URL_PATTERN\n                        \n                        \n                            XSSI_PREFIX\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/single-api-mapper.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                APP_API_PREFIX\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            APP_API_PREFIX:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('APP_API_PREFIX')\n                            \n                        \n    \n                    \n                        \n                            Prefix for the URL. Can be base-relative, host-relative or absolute.\n    Always should however end with slash ('/').\n    \n                        \n                    \n    \n                \n            \n    \n    src/lib/src/utils/debug-log.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                debugLog\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            debugLog:     literal type\n    \n                        \n                    \n                        \n                            \n                                Type :     literal type\n    \n                            \n                        \n                        \n                            \n                                Default value : isDevMode() && typeof console === 'object' ? console : {\n      log: noOpLogFn,\n      warn: noOpLogFn,\n      error: noOpLogFn\n    }\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/utils/normalize-media-type.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_NORMALIZER\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_NORMALIZER:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /\\s*[+;].*$/\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/system-media-types.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_EMPTY\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_EMPTY:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/empty'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_ERROR\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_ERROR:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/error'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_LOADING\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_LOADING:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/loading'\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/resource-data.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                nextId\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            nextId:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 1\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/read-only-headers.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_HEADERS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_HEADERS:     ReadOnlyHeaders\n    \n                        \n                    \n                        \n                            \n                                Type :     ReadOnlyHeaders\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n      has(name: string): boolean {\n        return false;\n      },\n    \n      get(name: string): string | null {\n        return null;\n      },\n    \n      keys(): string[] {\n        return [];\n      },\n    \n      getAll(name: string): string[] | null {\n        return null;\n      }\n    }\n                            \n                        \n    \n                    \n                        \n                            Dummy implementation of ReadOnlyHeaders that never returns anything.\n    \n                        \n                    \n    \n                \n            \n    \n    src/lib/src/directives/resource-context.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NOOP_NAVIGABLE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NOOP_NAVIGABLE:     Navigable\n    \n                        \n                    \n                        \n                            \n                                Type :     Navigable\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n      go() {\n      }\n    }\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/resource-router-module.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                RESOURCE_ROUTER_CONFIGURATION\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESOURCE_ROUTER_CONFIGURATION:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('RESOURCE_ROUTER_CONFIGURATION')\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/resource-view-registry.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                RESOURCE_VIEWS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESOURCE_VIEWS:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('RESOURCE_VIEWS')\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TYPE_QUALITY_EVALUATOR\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TYPE_QUALITY_EVALUATOR:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('TYPE_QUALITY_EVALUATOR')\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/directives/resource-link.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                TARGET_SELF\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TARGET_SELF:     \n    \n                        \n                    \n                        \n                            \n                                Default value : '_self'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TARGET_TOP\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TARGET_TOP:     \n    \n                        \n                    \n                        \n                            \n                                Default value : '_top'\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/navigable.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                TOP_LEVEL_NAVIGABLE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TOP_LEVEL_NAVIGABLE:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('TOP_LEVEL_NAVIGABLE')\n                            \n                        \n    \n                    \n                        \n                            Token for top-level (root) NavigableRef instance.\n    To provide it in your component, you might use {@link topLevelNavigableRef}, however see its docs for proper usage.\n    \n                        \n                    \n    \n                \n            \n    \n    src/lib/src/utils/parse-url.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                URL_PATTERN\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            URL_PATTERN:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/utils/http-utils.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                XSSI_PREFIX\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            XSSI_PREFIX:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^\\)]}',?\\n/\n                            \n                        \n    \n                    \n                        \n                            Cross-site scripting prefix. Copied from HttpXhrBackend.\n    \n                        \n                    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparer\n                        \n                        \n                            LogFnType\n                        \n                        \n                            StatusType\n                        \n                        \n                            TargetType\n                        \n                        \n                            TypeQualityEvaluator\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/utils/sorted-array.ts\n    \n            \n                \n                    \n                        \n                            \n                            Comparer\n                        \n                    \n                    \n                        \n                            Comparer()\n                        \n                    \n                \n            \n    \n    src/lib/src/utils/debug-log.ts\n    \n            \n                \n                    \n                        \n                            \n                            LogFnType\n                        \n                    \n                    \n                        \n                            LogFnType()\n                        \n                    \n                \n            \n    \n    src/lib/src/view-definition.ts\n    \n            \n                \n                    \n                        \n                            \n                            StatusType\n                        \n                    \n                    \n                        \n                            StatusType:     number | string\n    \n                        \n                    \n                \n            \n    \n    src/lib/src/directives/resource-link.ts\n    \n            \n                \n                    \n                        \n                            \n                            TargetType\n                        \n                    \n                    \n                        \n                            TargetType:     Navigable |  | \n    \n                        \n                    \n                \n            \n    \n    src/lib/src/quality-evaluator.ts\n    \n            \n                \n                    \n                        \n                            \n                            TypeQualityEvaluator\n                        \n                    \n                        \n                            \n                                Type evaluator function definition.\n    \n                            \n                        \n                    \n                        \n                            TypeQualityEvaluator()\n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/lib/src/activated-view.ts\n            \n            \n                class\n            \n            \n                ActivatedView\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/lib/src/api-location.ts\n            \n            \n                injectable\n            \n            \n                ApiLocation\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                    src/lib/src/api-mapper.ts\n            \n            \n                class\n            \n            \n                ApiMapper\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/lib/src/components/default-empty.component.ts\n            \n            \n                component\n            \n            \n                DefaultEmptyComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/components/default-error.component.ts\n            \n            \n                component\n            \n            \n                DefaultErrorComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-context.ts\n            \n            \n                directive\n            \n            \n                ResourceContextDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-context.ts\n            \n            \n                function\n            \n            \n                resourceContextNavigableRef\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-context.ts\n            \n            \n                function\n            \n            \n                resourceContextNavigableRefFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-context.ts\n            \n            \n                variable\n            \n            \n                NOOP_NAVIGABLE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-data-of.ts\n            \n            \n                directive\n            \n            \n                ResourceDataOfDirective\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-data-of.ts\n            \n            \n                class\n            \n            \n                ResourceDataOfContext\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link-with-href.ts\n            \n            \n                directive\n            \n            \n                ResourceLinkWithHrefDirective\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                directive\n            \n            \n                ResourceLinkDirective\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                variable\n            \n            \n                TARGET_SELF\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                variable\n            \n            \n                TARGET_TOP\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-outlet.ts\n            \n            \n                component\n            \n            \n                ResourceOutletComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-view.ts\n            \n            \n                directive\n            \n            \n                ResourceViewDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-view.ts\n            \n            \n                class\n            \n            \n                ResourceViewContext\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/hal-link.ts\n            \n            \n                interface\n            \n            \n                Link\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/lib/src/location-reference.ts\n            \n            \n                interface\n            \n            \n                LocationReference\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/src/location-reference.ts\n            \n            \n                function\n            \n            \n                bindUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/location-reference.ts\n            \n            \n                function\n            \n            \n                isLocationReference\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                class\n            \n            \n                NavigableRef\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                class\n            \n            \n                NavigableRefImpl\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                interface\n            \n            \n                Navigable\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                function\n            \n            \n                isNavigable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                function\n            \n            \n                makeNavigableRef\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                function\n            \n            \n                topLevelNavigableFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                function\n            \n            \n                topLevelNavigableRef\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                variable\n            \n            \n                TOP_LEVEL_NAVIGABLE\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/quality-evaluator.ts\n            \n            \n                function\n            \n            \n                simpleTypeQualityEvaluator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/quality-evaluator.ts\n            \n            \n                function\n            \n            \n                statusQualityEvaluator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/read-only-headers.ts\n            \n            \n                interface\n            \n            \n                ReadOnlyHeaders\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/lib/src/read-only-headers.ts\n            \n            \n                variable\n            \n            \n                NO_HEADERS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-client.ts\n            \n            \n                class\n            \n            \n                ResourceClient\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-client.ts\n            \n            \n                injectable\n            \n            \n                HttpResourceClient\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-data.ts\n            \n            \n                injectable\n            \n            \n                ResourceData\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-data.ts\n            \n            \n                function\n            \n            \n                resourceDataNavigableRef\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-data.ts\n            \n            \n                variable\n            \n            \n                nextId\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                interface\n            \n            \n                ResourceRouterOptions\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                function\n            \n            \n                emptyView\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                function\n            \n            \n                errorView\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                function\n            \n            \n                provideLocationStrategy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                variable\n            \n            \n                RESOURCE_ROUTER_CONFIGURATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                class\n            \n            \n                ViewsByStatus\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                injectable\n            \n            \n                ResourceViewRegistry\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                interface\n            \n            \n                ParsedViewDef\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                newValidationError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                normalizeStatus\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                normalizeStatusExpression\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                qualityComparator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                toArray\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                validateStatus\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                validateStatusExpression\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                function\n            \n            \n                validateType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                variable\n            \n            \n                RESOURCE_VIEWS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                variable\n            \n            \n                TYPE_QUALITY_EVALUATOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/single-api-mapper.ts\n            \n            \n                injectable\n            \n            \n                SingleApiMapper\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    src/lib/src/single-api-mapper.ts\n            \n            \n                variable\n            \n            \n                APP_API_PREFIX\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_EMPTY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_ERROR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_LOADING\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/url-normalizer.ts\n            \n            \n                class\n            \n            \n                BaseUrlNormalizer\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/lib/src/url-normalizer.ts\n            \n            \n                class\n            \n            \n                UrlNormalizer\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/lib/src/url-normalizer.ts\n            \n            \n                injectable\n            \n            \n                BrowserUrlNormalizer\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/debug-log.ts\n            \n            \n                function\n            \n            \n                noOpLogFn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/debug-log.ts\n            \n            \n                variable\n            \n            \n                debugLog\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/http-utils.ts\n            \n            \n                function\n            \n            \n                stringToJSON\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/http-utils.ts\n            \n            \n                variable\n            \n            \n                XSSI_PREFIX\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/normalize-media-type.ts\n            \n            \n                function\n            \n            \n                normalizeMediaType\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/normalize-media-type.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_NORMALIZER\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                interface\n            \n            \n                LocationInfo\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                interface\n            \n            \n                UrlInfo\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                function\n            \n            \n                parseUrl\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                variable\n            \n            \n                URL_PATTERN\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                class\n            \n            \n                SortedArray\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                function\n            \n            \n                defaultComparer\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                function\n            \n            \n                insertLocation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                function\n            \n            \n                locationFor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/wildcard-to-regex.ts\n            \n            \n                function\n            \n            \n                escapeRegExpPattern\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/wildcard-to-regex.ts\n            \n            \n                function\n            \n            \n                wildcardToRegex\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/view-data.ts\n            \n            \n                interface\n            \n            \n                ViewData\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/src/view-definition.ts\n            \n            \n                interface\n            \n            \n                Data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/view-definition.ts\n            \n            \n                interface\n            \n            \n                ViewDef\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                class\n            \n            \n                ViewTypeStrategy\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                injectable\n            \n            \n                HeaderViewTypeStrategy\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                interface\n            \n            \n                ViewTypeResponse\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/lib/testing/src/mock-url-normalizer.ts\n            \n            \n                injectable\n            \n            \n                MockUrlNormalizer\n            \n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
