var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["access","aim","allow","altern","angular","angular/cor","angular/platform","api","app","app.compon","appcompon","application/x.sampl","befor","bootstrap","bootstrapit","branch","browser","browsermodul","build","buildapp","buildpublish","built","chang","changelog","class","client","commit","complet","compon","config","configur","content","context","copi","correctli","creat","data","declar","demo","develop","directli","directori","display","dist/angular","doc","document","drive","element","empti","engin","error","error.compon","errorcompon","etc","exampl","examplemodul","export","extern","follow","format","get","ghpage","git","github","global","hateoa","head","header","hide","implement","import","index","instal","instead","itself","latest","layout","librari","librarynpm","link","linux","load","local","make","markdown","match","media","merg","name","navig","necessari","need","new","ngmodul","note","npm","origin","outlet","pass","passednpm","path","perform","permiss","prefix","prevent","principl","publish","push","readm","regist","releas","releasenpm","replac","repositori","resolv","resourc","resourceroutermodul","resourceroutermodule.configur","resourceroutermodule.fortyp","respons","rest","result","rout","router","run","same","sampl","sample.compon","samplecompon","savedocument","see","server","similar","snippet","src/lib/package.json","start","starttodo","statu","support","sure","symlink","test","text","thing","time","todo","type","typedoc","under","unknown","us","user","usingnpm","v0.0.0","veri","verifi","verify/set","version","view","within","work"],"overview.html":["1","11","3","5","8","bootstrap","class","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","compon","declar","defaultemptycompon","defaulterrorcompon","depend","direct","export","inject","interfac","legend","match","modul","out","overview","provid","reset","resourcecontextdirect","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourceviewdirect","result","zoom"],"changelog.html":["02","04","1.0.0","12","13","14","15","16","17","2.1","2.3","2017","2018","2019","21","22","23","25","26","27","28","30","31","4.0.0","4.1.0","4.1.1","4.x","5.0.0","5.0.1","5.x","6","7","7.0.0","7.x","9","abstract","accompani","activatedview","ad","adapt","address","allow","alpha.12","angular","angular/cli","aot","api","api/foobar","apilink","apiloc","apimapp","apiurl","app","applic","argument","avail","blob","bodi","both","break","broken","bug","buggi","build","buildapp","built","bump","bundl","case","chang","changelog","class","close","code","compil","compon","config","conform","constructor(publ","consum","contain","content","context","convent","creat","custom","data","data.bodi","debuglog","default","defaulterrorcompon","demo","deprec","describ","despit","develop","direct","dist","doc","endpoint","error","exampl","explicit","export","extend","extern","fail","favour","featur","final","fix","folder","function","futur","gener","get","gulp","hal","handl","hero","host","html","http","httpclient","httpresourcecli","https://github.com/mdvorak/resourc","ident","implement","import","improv","inject","instead","interfac","intern","issu","json","key","known","lead","librari","link","live","load","longer","look","mani","map","match","memori","migrat","miss","mock","mode","model","more","move","mydata","name","navig","navigationhandl","need","nest","new","newer","ng","ngoninit","note","now","npm","observ","old","oninit","oper","option","origin","otherwis","packagr","page","pattern","pr","prefix","problem","product","programmat","properli","properti","provid","public","rare","reactiv","refactor","rel","relat","releas","reload","renam","render","replac","request","requir","resolv","resourc","resourcecontext","resourcedata","resourcelink","responsetyp","result","reus","rout","router","router/pull/24/commit","run","same","samplecompon","script","see","semant","sever","simpl","singleapimapp","sourc","start","strictnullcheck","support","swallow","tag","take","test","text","thank","this.data","this.view.data.subscribe(data","those","tour","travi","true","typescript","umd","updat","upgrad","url","us","v4.1.0","v4.x","v5.x","valu","variou","veri","version","view","view.data.subscribe(data","viewdata","void","whether","whole","won't","work","zakir"],"license.html":["2018","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","dvorak","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","https://github.com/mdvorak/resourc","impli","includ","kind","liabil","liabl","licens","limit","match","merchant","merg","michal","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","router","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["brows","browser","match","modul","resourceroutermodul","result","support","svg"],"modules/ResourceRouterModule.html":["204","absolut","alway","analyze_for_entry_compon","angular/common","angular/cor","anoth","aot","api","apiloc","apimapp","app_api_prefix","app_base_href","bang","base","basehref","boolean","bootstrap","browserurlnorm","chang","class","client","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","commonmodul","compon","components/default","configur","configure(opt","const","content","context","data","declar","default","defaultemptycompon","defaulterrorcompon","definit","dep","depend","detail","directives/resourc","empty.compon","emptyview","enabl","end","error.compon","errorview","explicitli","export","factori","file","fortypes(view","full","function","global","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","header","headerviewtypestrategi","host","href","html5","http://example.com/my/context/api","httpresourcecli","implement","import","info","inject","inject(app_base_href","injectiontoken","injectiontoken('resource_router_configur","interfac","intern","legend","link","locat","locationstrategi","mapper","match","media","media_type_router_empti","media_type_router_load","mode","modul","module.t","modulewithprovid","multi","my/context/api","navig","new","ngmodul","normal","number.min_safe_integ","option","options.prefix","options.resourcecli","options.usehash","options.viewtypestrategi","out","outlet","path","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","platformloc","prefix","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","qualiti","read","readonli","registri","rel","reset","resourc","resource_router_configur","resource_view","resourcecli","resourcecontextdirect","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourcerouteropt","resourceviewdirect","resourceviewregistri","responsetyp","result","return","router","set","singl","singleapimapp","slash","sourc","src/lib/src/resourc","static","statu","strategi","string","support","system","tag","text","true","type","url","urlnorm","us","useclass","usefactori","usehash","usehash}=tru","usevalu","view","viewdef","viewtypestrategi","way","won't","work","zoom"],"components/DefaultEmptyComponent.html":["a[resourcelink]'},{'nam","actual_compon","angular/cor","class","compon","component_templ","defaultemptycompon","defaulterrorcompon","direct","dom","element","empty.component.t","export","file","html","import","info","legend","match","metadata","name","not(a)[resourcelink]'},{'nam","outlet","resourc","resourcecontext]'},{'nam","resourcecontextdirect","resourcedata][resourcedataof]'},{'nam","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceviewdirect","result","selector","sourc","src/lib/src/components/default","templat","tree","var","view"],"components/DefaultErrorComponent.html":["a[resourcelink]'},{'nam","abov","accessor","activ","activatedview","actual_compon","angular/cor","application/vnd.company.error","bodi","body|json","both","class","co","compon","component_templ","constructor","constructor(publ","constructor(view","content","custom","data","data.statu","data.statustext","data.typ","data.url","default","defaultemptycompon","defaulterrorcompon","defin","descript","direct","dom","don't","e.g","element","error","error.component.html","error.component.t","error.component.ts:42","error.component.ts:44","error.component.ts:47","error.component.ts:51","error.component.ts:55","exist","export","file","follow","forget","gethtml","getobject","html","implement","import","index","info","json","legend","load","match","metadata","method","myapierrorcompon","mygenericerrorcompon","nad","name","ngoninit","not(a)[resourcelink]'},{'nam","note","object","omit","oninit","option","outlet","paramet","properti","public","receiv","regist","replac","resourc","resourcecontext]'},{'nam","resourcecontextdirect","resourcedata][resourcedataof]'},{'nam","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodule.fortyp","resourceviewdirect","responsetyp","result","return","selector","sourc","specif","src/lib/src/components/default","statu","templat","templateurl","text","text/html","this.data","this.data.bodi","this.data.typ","this.view.data.subscribe(data","tree","ts","type","typeof","unexpect","us","var","view","viewdata","void","want","well"],"components/ResourceOutletComponent.html":["_self","a[resourcelink]'},{'nam","accessor","actual_compon","angular/cor","case","class","complic","compon","component_templ","constructor","constructor(@self","constructor(resourc","data","decor","defaultemptycompon","defaulterrorcompon","defin","descript","direct","dom","element","event","eventemitt","exampl","export","file","getsrc","given","html","implement","import","index","info","input","legend","link","load","match","metadata","method","more","name","navig","new","ngondestroy","ngoninit","not(a)[resourcelink]'},{'nam","ondestroy","oninit","option","outlet","outlet.t","outlet.ts:32","outlet.ts:33","outlet.ts:35","outlet.ts:38","outlet.ts:42","outlet.ts:46","outlet.ts:51","output","paramet","privat","properti","provid","public","readonli","render","resourc","resourcecontext]'},{'nam","resourcecontextdirect","resourcedata","resourcedata][resourcedataof]'},{'nam","resourcedatanavigableref","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceviewdirect","result","return","rxj","see","selector","self","set","setsrc(valu","sourc","src","src(valu","src/lib/src/directives/resourc","srcchang","string","subscript","subscription.empti","support","templat","this.resource.url","this.resource.urlchange.subscribe((valu","this.srcchange.emit(valu","this.subscript","this.subscription.unsubscrib","toplevelnavigableref","tree","type","url","us","valu","var","via","view","void"],"directives/ResourceContextDirective.html":["accessor","actual","altern","angular/cor","appcompon","applic","around","boundari","class","common","companion","compon","const","constructor(@self","context","context.t","context.ts:54","context.ts:57","data","defin","dep","descript","direct","directli","dure","easi","exactli","exampl","export","extend","factoryprovid","file","forwardref","function","go","hard","html","import","index","info","input","intention","intern","isnavig","isnavigable(valu","isnavigable(value.target","link","load","match","metadata","more","navig","navigableref","new","next","noop_navig","note","op","phase","previou","programmat","properti","provid","public","readonli","replac","resort","resourc","resourcecontext","resourcecontext(valu","resourcecontextdirect","resourcecontextnavigableref","resourcecontextnavigablereffactori","resourcecontextnavigablereffactory(self","resourcedata","resourcedataof","resourcedataofdirect","result","return","see","selector","self","set","setresourcecontext(valu","setup","show","sourc","src/lib/src/directives/resourc","state","this.navig","toplevelnavigableref","ts","type","undefin","unusu","us","usefactori","useless","usual","valu","value.target","via","view","viewdata","way","work"],"directives/ResourceDataOfDirective.html":["15998]{@link","accessor","allow","along","angular","angular/cor","asterisk","automat","back","bind","bindurl","bindurl(valu","boolean","chang","class","complex","conjunct","constructor","constructor(@self","constructor(priv","constructor(resourc","contain","content","context","current","custom","data","decor","default","defin","depend","descript","direct","directli","doc","don't","emit","event","eventemitt","exampl","export","file","flag","gener","given","html","https://github.com/angular/angular/issues/15998","implement","implicit","import","index","info","input","intern","islocationrefer","islocationreference(valu","issu","jsunusedglobalsymbol","limit","link","listen","load","locat","locationrefer","locationreference#url","match","menu","metadata","more","name","navig","need","never","new","ngondestroy","ngoninit","noinspect","note","of.t","of.ts:112","of.ts:115","of.ts:117","of.ts:149","old","on","ondestroy","oninit","option","outlet","output","paramet","privat","propag","properti","provid","public","readonli","refer","remov","represent","reset","resolv","resourc","resourcecontextdirect","resourcedata","resourcedata#data","resourcedata#load","resourcedata#url","resourcedata][resourcedataof","resourcedatanavigableref","resourcedataof","resourcedataof(valu","resourcedataofcontext","resourcedataofcontext(resourc","resourcedataofdirect","resourceoutletcompon","result","return","rxj","see","seen","selector","self","set","setresourcedataof(valu","show","simpl","sourc","sourcesubscript","src/lib/src/directives/resourc","store","string","structur","subscript","subscription.empti","support","syntax","templateref","this.context","this.resourc","this.resource.data","this.resource.load","this.resource.url","this.resource.urlchange.subscribe((valu","this.sourcesubscript","this.sourcesubscription.unsubscrib","this.urlchang","this.urlchange.emit(valu","this.urlsubscript","this.urlsubscription.unsubscrib","this.viewcontainer.createembeddedview(this.templateref","toplevelnavigableref","two","type","typeof","undefin","underli","until","url","urlchang","urlsubscript","us","valu","variabl","variant","view","viewcontain","viewcontainerref","viewdata","void","way","whenev"],"directives/ResourceLinkDirective.html":["_self","_top","angular/cor","boolean","cancel","class","click","compon","const","constructor","constructor(@opt","constructor(currentnavig","ctrl","current","currentnavig","debuglog","debuglog().warn('when","debuglog().warn(`when","defin","descript","direct","element","embed","error(`unsupport","export","extern","fallback","fals","file","handl","hostlisten","hostlistener('click","import","index","info","inject","inject(top_level_navig","input","instanc","instead","isnavig","isnavigable(target","key","level","limit","link.t","link.ts:21","link.ts:22","link.ts:29","log","match","metadata","name","navig","navigableref","new","not(a)[resourcelink","note","onclick","open","option","page","paramet","privat","readonli","resourc","resourcelink","resourcelinkdirect","result","return","selector","set","sourc","src/lib/src/directives/resourc","string","support","tag","target","target.go(this.resourcelink","target=\"_self","target_self","target_top","targettyp","this.currentnavig","this.currentnavigable.navig","this.resourcelink","this.target","this.toplevelnavig","throw","top","top_level_navig","toplevel","toplevel.navig","toplevelnavig","true","type","typeof","unavail","undefin","url","us","utils/debug","version","view","warn","window","work"],"directives/ResourceLinkWithHrefDirective.html":["0","200","a[resourcelink","angular/common","angular/cor","api","apimapp","applic","argument","boolean","browser","button","cancel","class","click","click(button","code","compon","const","constructor","constructor(apimapp","constructor(priv","ctrlkey","current","currentnavig","custom","debuglog","debuglog().warn('when","debuglog().warn(`when","default","defin","descript","direct","directive({selector","embed","event.button","event.ctrlkey","event.metakey","export","extern","fail","fallback","fals","file","handl","hostbind","hostlisten","hostlistener('click","href","href.t","href.ts:12","href.ts:13","href.ts:14","href.ts:15","href.ts:16","href.ts:17","href.ts:26","href.ts:56","implement","import","index","info","inject","inject(top_level_navig","input","instanc","isnavig","isnavigable(target","key","known","level","link","locat","log","manual","map","mapper","mark","match","mechan","metadata","metakey","method","name","navig","navigableref","new","ngonchang","non","note","number","onchang","onclick(button","open","option","origin","page","paramet","pointless","press","privat","readonli","registri","resourc","resourcelink","resourcelinkwithhrefdirect","resourceviewregistri","respons","result","return","selector","set","sourc","src/lib/src/directives/resourc","statu","store","string","success","support","target","target.go(this.resourcelink","target=\"_self","target_self","target_top","this.apimapper.mapapitoview(viewurl","this.currentnavig","this.currentnavigable.navig","this.extern","this.href","this.location.prepareexternalurl(viewurl","this.resourcelink","this.resourceviewregistry.match(this.typ","this.target","this.toplevelnavig","this.typ","this.unsupport","top","top_level_navig","toplevel","toplevel.navig","toplevelnavig","true","type","typeof","unavail","undefin","unsupport","url","us","utils/debug","valu","view","viewurl","void","warn","window","work"],"directives/ResourceViewDirective.html":["activ","activatedview","activatedview(target","angular/cor","behaviorsubject","behaviorsubject>(this.data","chang","class","compon","componentfactoryresolv","componentref","componenttyp","const","constructor","constructor(priv","constructor(publ","constructor(viewcontain","creat","creation","current","data","data.target","datasourc","defin","descript","destroy","direct","display","dure","export","factori","file","ignor","implement","import","index","info","injector","injector.create({provid","input","instead","match","metadata","method","name","navig","navigableref","new","next(valu","ngonchang","ngonchanges(chang","normal","note","noth","null","observ","old","on","onchang","option","paramet","parent","prepar","privat","propag","provid","public","re","readonli","refer","render","resolv","resourc","resourceviewcontext","resourceviewcontext(compon","resourceviewdirect","result","return","rxj","same","selector","show","simplechang","sourc","src/lib/src/directives/resourc","staticprovid","store","target","this.component.componenttyp","this.curr","this.current.component.destroy","this.current.componenttyp","this.current.next(this.data","this.current.target","this.data","this.data.config","this.data.config.compon","this.data.next(valu","this.data.target","this.destroy","this.rend","this.resolver.resolvecomponentfactory(this.data.config.compon","this.viewcontainer.createcomponent(factori","this.viewcontainer.injector","this.viewcontainer.length","true","type","us","usevalu","valu","view","view.t","view.ts:40","view.ts:42","view.ts:49","view.ts:69","view.ts:76","viewcontain","viewcontainerref","viewdata","visibl","void","won't"],"injectables/ApiLocation.html":["accessor","alreadi","alway","angular/common","angular/cor","api","apiloc","apimapp","around","base","be","bindabl","browser","chang","class","compon","configur","const","constructor","constructor(apimapp","constructor(priv","conveni","correspond","current","currenturl","data","defin","descript","determin","directli","donavig","donavigate(path","equal","error","error('url","error(`cannot","export","file","fire","form","geturl","given","happen","href","implement","import","index","info","initi","inject","known","link","listen","locat","location#path","location#prepareexternalurl","location.t","location.ts:101","location.ts:109","location.ts:16","location.ts:18","location.ts:37","location.ts:49","location.ts:76","location.ts:85","locationrefer","locationstrategi","log","map","maplocationurltoapi","mapper","match","mean","method","name","namespac","navig","need","never","new","next","normal","note","noth","null","observ","onlocationchang","option","outlet","page","param","paramet","path","perform","possibl","prefix","prepareexternalurl","prepareexternalurl(url","present","primari","privat","properti","protect","provid","push","readonli","redirect","refer","remov","resourc","result","return","rxj","set","seturl(url","slash","someth","sourc","src/lib/src/api","state","strategi","string","subject","take","this.apimapper.mapapitoview(url","this.apimapper.mapviewtoapi(path","this.donavigate(path","this.location.go(path","this.location.iscurrentpathequalto(path","this.location.normalize(url","this.location.path","this.location.prepareexternalurl(url","this.location.subscrib","this.maplocationurltoapi","this.onlocationchang","this.urlchang","this.urlchangesubject.asobserv","this.urlchangesubject.next(this.urlvalu","this.urlvalu","throw","todo","trail","type","typeof","unexpect","updat","url","url(url","urlchang","urlchangesubject","urlvalu","us","valu","versa","vice","view","void","without","wrapper"],"injectables/BrowserUrlNormalizer.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","basehref","baseurlnorm","browserapiurl","browserurlnorm","build","class","combin","compon","const","constructor","constructor(platformstrategi","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","normalizer.t","normalizer.ts:67","normalizer.ts:75","normalizer.ts:80","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","readonli","rel","replac","resolv","result","return","sourc","src/lib/src/url","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlnorm","us","utils/pars"],"injectables/HeaderViewTypeStrategy.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttyp","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","method","name","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","option","overrid","param","paramet","properti","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:41","strategy.ts:43","strategy.ts:49","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","valu","viewtyperespons","viewtypestrategi"],"injectables/HttpResourceClient.html":["abstract","alreadi","angular","angular/common/http","angular/cor","assum","avoid","awar","backend","better","bit","bodi","both","browser","call","case","catcherror","catcherror(err","class","client.t","client.ts:102","client.ts:128","client.ts:35","client.ts:37","client.ts:38","client.ts:39","client.ts:43","client.ts:53","client.ts:61","compon","config","config.responsetyp","console.assert(respons","const","construct","constructor","constructor(publ","constructor(strategi","convert","data","default","defin","definit","depend","descript","don't","duplic","e.g","empti","err","err.error","err.error.messag","err.head","err.messag","err.statu","err.statustext","err.url","error","error(`unsupport","errorev","except","expect","export","extend","fail","failur","fallback","fetch","fetch(uri","file","find","gener","get(url","given","handl","handleerror","handleerror(err","happen","have","header","here","http","httpclient","httperrorrespons","httpresourcecli","httprespons","i'm","implement","import","index","info","inject","instanc","instanceof","jsmethodcanbestat","json","know","malform","map","map(respons","match","messag","method","name","navig","need","network","new","nice","nodej","noinspect","non","note","null","object","observ","option","otherwis","param","paramet","pars","parse(bodi","pass","possibl","produc","propag","properti","protect","provid","public","readonli","registri","request","requesturl","resolv","resolve(requesturl","resourc","resourcecli","resourceviewregistri","respons","response.head","response.statu","response.statustext","response.url","responsetyp","responsetype:'text","result","rethrow","retriev","return","rxj","rxjs/internal/observable/scalar","rxjs/internal/observable/throwerror","rxjs/oper","scalar","scalar(err","scalar(new","send","server","set","someth","sourc","src/lib/src/resourc","statu","statustext","strategi","string","stringtojson","stringtojson(bodi","success","such","super","suspiciousinstanceofguard","switch","target","text","this.get(uri).pip","this.handleerror(err","this.http.get(url","this.parse(response.bodi","this.registry.match(typ","this.resolve(uri","this.strategy.extracttype(respons","through","throw","throwerror","throwerror(err","treat","type","typeof","un","undefin","unexpect","unless","uri","url","us","usual","util","utils/http","valid","view","viewdata","viewdef","viewtypestrategi","way","well","won't"],"injectables/MockUrlNormalizer.html":["angular","angular/cor","basehref","baseurlnorm","class","default","defin","descript","export","extend","file","getbasehref","getloc","host","http","import","index","info","init","init(protocol","inject","internalbasehref","internalhost","internalpathnam","internalprotocol","localhost","locationinfo","match","method","mockurlnorm","name","normalizer.t","normalizer.ts:10","normalizer.ts:12","normalizer.ts:21","normalizer.ts:25","normalizer.ts:7","normalizer.ts:8","normalizer.ts:9","option","paramet","pathnam","properti","protocol","resourc","result","return","router","sourc","src/lib/testing/src/mock","string","this.internalbasehref","this.internalhost","this.internalpathnam","this.internalprotocol","type","url","valu"],"injectables/ResourceData.html":["1","204","999","accessor","actual","allow","alway","angular/cor","back","behaviorsubject","behaviorsubject>(initialdata","bind","bodi","catcherror","chang","class","client","combin","config","console.error('rout","const","constructor","constructor(cli","constructor(publ","data","data.t","data.ts:21","data.ts:22","data.ts:28","data.ts:34","data.ts:36","data.ts:37","data.ts:66","data.ts:70","data.ts:74","data.ts:78","data.ts:91","data.url","datachang","datachangesourc","debuglog","default","defin","dep","descript","diagnost","don't","easili","empti","err","error","export","factoryprovid","fail","fals","fetch(url","file","function","getdata","getload","geturl","go","go(url","happen","header","here","id","identifi","implement","import","index","info","initi","initialdata","inject","intention","intern","jsunusedglobalsymbol","latest","load","load(url","loaddataev","loadingvalu","locat","locationrefer","log","logic","makenavigableref","match","media","media_type_router_empti","media_type_router_error","media_type_router_load","method","mockviewdata(url","name","navig","navigableref","never","new","nextid","no_head","noinspect","normal","note","number","observ","ok","option","paramet","perform","pipe(catcherror(err","pipe(switchmap(url","possibl","print","privat","produc","product","propag","properti","provid","public","read","readonli","readonlyhead","redirect","refer","registri","reli","resourc","resourcecli","resourcedata","resourcedatanavigableref","resourceviewregistri","result","return","rout","rxj","rxjs/internal/observable/scalar","rxjs/oper","scalar","scalar(this.mockviewdata","scalar(this.mockviewdata(url","self","server","set","seturl(valu","side","sourc","src/lib/src/resourc","start","statu","statustext","string","subject","subscribe(data","switchmap","system","target","this.client","this.datachang","this.datachangesourc","this.datachangesource.asobserv","this.datachangesource.getvalu","this.datachangesource.next(data","this.load","this.load(url","this.loaddataev","this.loaddataevent.next(this.urlvalu","this.loaddataevent.next(valu","this.loadingvalu","this.mockviewdata","this.registry.match(typ","this.urlchang","this.urlchangesource.asobserv","this.urlchangesource.next(this.urlvalu","this.urlchangesource.next(url","this.urlvalu","true","type","typescript","undefin","updat","url","url(valu","urlchang","urlchangesourc","urlvalu","us","usefactori","valu","view","viewdata","void","well"],"injectables/ResourceViewRegistry.html":["0","1","1.html#object","2","2??').foreach(statu","3","_length","a.length","accessor","add","addsingleview(config","addview","addview(config","addviews(config","angular/cor","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","be","befor","between","bystatu","call","charact","check","class","compon","config","config.compon","config.foreach(this.addview","config.qu","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","consist","const","constructor","constructor(@inject(resource_view","constructor(statu","constructor(view","contain","convert","copi","count","d*[?x]*\\**$/.test(statu","default","defin","definit","descript","despit","end","error","error('invalid","error('wildcard","error(`no","error(`wrong","evalu","export","express","file","find","flatten","found","function","getlength","getviewsbystatus(statu","group","group.statu","group.types.push","handl","https://www.typescriptlang.org/docs/handbook/releas","ignor","import","increment","index","info","initi","inject","inject(type_quality_evalu","injectiontoken","injectiontoken('resource_view","injectiontoken('type_quality_evalu","interfac","intern","invalid","jsmethodcanbestat","json.stringify(config","l","later","left","length","long","longer","mandatori","match","match(typ","method","mislead","n","name","need","new","newvalidationerror(config","noinspect","normalizedstatu","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","notes/typescript","number","object.freeze(config","option","other","pad","paramet","parsedviewdef","path","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","permut","pleas","privat","protect","public","qualiti","readonli","receiv","recurs","regex","regexp","regist","registr","registry.t","registry.ts:103","registry.ts:121","registry.ts:45","registry.ts:59","registry.ts:63","registry.ts:92","replac","resource_view","resourceviewregistri","rest","result","return","runtim","s.statu","saniti","see","simpletypequalityevalu","singl","sortedarray","sortedarray(qualitycompar","sourc","specif","spread","src/lib/src/resourc","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","still","string","substr(0","support","t","text","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.getviewsbystatus(normalizedstatu","this.qual","this.statu","this.statusexp","this.typequalityevalu","this.typequalityevaluator(typ","this.validateviewdefinition(config","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","throw","toarray(config.statu","toarray(config.type).foreach(typ","true","type","type_quality_evalu","typeexp","typeof","typequalityevalu","undefin","util","utils/sort","utils/wildcard","v.typeexp.test(typ","valid","validatestatus(config","validatestatusexpression(config","validatetype(config","validateviewdefinit","validateviewdefinition(config","valu","view","view.config","viewdef","viewsbystatu","viewsbystatus(statu","void","wildcard","wildcardtoregex","wildcardtoregex(statu","wildcardtoregex(typ","x","x\\d?*]/.test(statu","zero"],"injectables/SingleApiMapper.html":["1","absolut","alway","angular/cor","api","apimapp","app_api_prefix","applic","base","boolean","class","configur","const","constructor","constructor(priv","constructor(urlnorm","defin","descript","diagnost","end","endswithslash","equal","error('path","exampl","export","extend","file","home","host","href","import","includ","index","info","inject","inject(app_api_prefix","injectiontoken","injectiontoken('app_api_prefix","it'","join","lead","map","mapapitoview","mapapitoview(url","mapper","mapper.t","mapper.ts:22","mapper.ts:23","mapper.ts:34","mapper.ts:48","mapviewtoapi","mapviewtoapi(path","match","method","miss","name","new","normal","note","null","option","otherwis","paramet","path","path).replac","path.replac","prefix","prefix='http://.../v1","prepend","privat","properti","readonli","rel","remov","result","return","singleapimapp","slash","sourc","src/lib/src/singl","string","strip","super","this.endswithslash","this.prefix","this.prefix.endswith","this.prefix.length","this.prefix.startswith(url","this.urlnormalizer.normalize(url","throw","trail","type","unabl","url","url.length","url.startswith(this.prefix","url.substring(this.prefix.length).replac","url='http://.../v1","url[0","urlnorm","urlnormalizer.normalize(prefix","us","versa","vice","view","w+:/.test(path","work","wrong"],"classes/ActivatedView.html":["_data","_data.asobserv","accessor","activatedview","activatedview.navigation.go(activatedview.snapshot.url","behaviorsubject","bodi","call","class","code","constructor","constructor(navig","constructor(publ","current","data","data.bodi","defin","descript","export","file","forc","getsnapshot","ident","import","index","info","map","match","method","name","navig","observ","option","paramet","privat","properti","public","readonli","reload","remain","result","return","rxj","rxjs/oper","snapshot","sourc","src/lib/src/activ","this._data.getvalu","this.bodi","this.data","this.data.pipe(map(data","this.navigation.go(this.snapshot.url","type","url","view","view.t","view.ts:11","view.ts:17","view.ts:26","view.ts:8","view.ts:9","viewdata","void"],"classes/ApiMapper.html":["abstract","api","apimapp","class","configur","counterpart","default","defin","descript","dure","e.g","empti","equal","export","file","http","index","info","insid","link","location.path","map","mapapitoview","mapapitoview(url","mapper.t","mapper.ts:15","mapper.ts:27","mapviewtoapi","mapviewtoapi(path","match","method","name","namespac","null","on","option","overridden","param","paramet","path","prefix","request","resourc","result","return","sourc","src/lib/src/api","string","type","url","versa","vice","view"],"classes/BaseUrlNormalizer.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","basehref","baseurlnorm","browserapiurl","browserurlnorm","build","class","combin","compon","const","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","normalizer.t","normalizer.ts:28","normalizer.ts:56","normalizer.ts:63","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","readonli","rel","replac","resolv","result","return","sourc","src/lib/src/url","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlnorm","us","utils/pars"],"classes/NavigableRef.html":["abstract","accessor","actual","alway","angular/cor","avail","be","cast","chang","class","compon","const","constructor(publ","creat","current","data","declar","defin","definit","dep","dereferenc","descript","doc","doesn't","exist","export","extend","factoryprovid","file","function","getnavig","given","go(url","guarante","honor","immut","import","info","inject","inject(top_level_navig","injectiontoken","injectiontoken('top_level_navig","instanc","instead","interfac","intern","isnavigable(obj","keep","level","link","makenavigableref(valu","match","navig","navigableref","navigablerefimpl","navigablerefimpl(valu","navigationref","nest","new","note","obj","obj.go","option","proper","provid","readonli","recommend","refer","regardless","requir","resourc","resourcedatanavigableref","result","return","root","safe","see","self","skipself","sourc","src/lib/src/navigable.t","src/lib/src/navigable.ts:29","string","super","therefor","token","top","top_level_navig","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","true","typeof","us","usag","usefactori","valu","void","won't"],"classes/NavigableRefImpl.html":["abstract","actual","alway","angular/cor","avail","be","cast","chang","class","compon","const","constructor","constructor(navig","constructor(publ","creat","current","data","declar","defin","definit","dep","dereferenc","descript","doc","doesn't","exist","export","extend","factoryprovid","file","function","given","go(url","guarante","honor","immut","import","index","info","inject","inject(top_level_navig","injectiontoken","injectiontoken('top_level_navig","instanc","instead","interfac","intern","isnavigable(obj","keep","level","link","makenavigableref(valu","match","name","navig","navigableref","navigablerefimpl","navigablerefimpl(valu","navigationref","nest","new","note","obj","obj.go","option","paramet","proper","properti","provid","public","readonli","recommend","refer","regardless","requir","resourc","resourcedatanavigableref","result","return","root","safe","see","self","skipself","sourc","src/lib/src/navigable.t","src/lib/src/navigable.ts:32","src/lib/src/navigable.ts:34","string","super","therefor","token","top","top_level_navig","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","true","type","typeof","us","usag","usefactori","valu","void","won't"],"classes/ResourceClient.html":["abstract","alreadi","angular","angular/common/http","angular/cor","assum","avoid","awar","backend","better","bit","bodi","both","browser","call","case","catcherror","catcherror(err","class","client.t","client.ts:27","compon","config","config.responsetyp","console.assert(respons","const","construct","constructor","constructor(publ","convert","data","default","defin","definit","depend","descript","don't","duplic","e.g","empti","err","err.error","err.error.messag","err.head","err.messag","err.statu","err.statustext","err.url","error","error(`unsupport","errorev","except","expect","export","extend","fail","failur","fallback","fetch","fetch(uri","file","find","gener","get(url","given","handl","handleerror(err","happen","have","header","here","http","httpclient","httperrorrespons","httpresourcecli","httprespons","i'm","implement","import","index","info","inject","instanc","instanceof","jsmethodcanbestat","json","know","malform","map","map(respons","match","messag","method","name","navig","need","network","new","nice","nodej","noinspect","non","note","null","object","observ","option","otherwis","param","paramet","pars","parse(bodi","pass","possibl","produc","propag","properti","protect","provid","public","readonli","registri","request","requesturl","resolv","resolve(requesturl","resourc","resourcecli","resourceviewregistri","respons","response.head","response.statu","response.statustext","response.url","responsetyp","responsetype:'text","result","rethrow","retriev","return","rxj","rxjs/internal/observable/scalar","rxjs/internal/observable/throwerror","rxjs/oper","scalar","scalar(err","scalar(new","send","server","set","someth","sourc","src/lib/src/resourc","statu","statustext","strategi","string","stringtojson","stringtojson(bodi","success","such","super","suspiciousinstanceofguard","switch","target","text","this.get(uri).pip","this.handleerror(err","this.http.get(url","this.parse(response.bodi","this.registry.match(typ","this.resolve(uri","this.strategy.extracttype(respons","through","throw","throwerror","throwerror(err","treat","type","typeof","un","undefin","unexpect","unless","uri","url","us","usual","util","utils/http","valid","view","viewdata","viewdef","viewtypestrategi","way","well","won't"],"classes/ResourceDataOfContext.html":["15998]{@link","accessor","allow","along","angular","angular/cor","asterisk","automat","back","bind","bindurl","bindurl(valu","boolean","chang","class","complex","conjunct","constructor","constructor(@self","constructor(priv","constructor(resourc","contain","content","context","current","custom","data","default","defin","depend","descript","direct","directli","doc","don't","emit","event","eventemitt","exampl","export","file","flag","gener","get$implicit","getdata","getload","given","html","https://github.com/angular/angular/issues/15998","implement","implicit","import","info","input","intern","islocationrefer","islocationreference(valu","issu","jsunusedglobalsymbol","limit","link","listen","load","locat","locationrefer","locationreference#url","match","menu","more","name","navig","need","never","new","ngondestroy","ngoninit","noinspect","note","of.t","of.ts:26","of.ts:37","of.ts:47","of.ts:55","old","on","ondestroy","oninit","option","outlet","output","paramet","privat","propag","provid","public","readonli","refer","remov","represent","reset","resolv","resourc","resourcecontextdirect","resourcedata","resourcedata#data","resourcedata#load","resourcedata#url","resourcedata][resourcedataof","resourcedatanavigableref","resourcedataof(valu","resourcedataofcontext","resourcedataofcontext(resourc","resourcedataofdirect","resourceoutletcompon","result","return","rxj","see","seen","selector","self","set","show","simpl","sourc","sourcesubscript","src/lib/src/directives/resourc","store","string","structur","subscript","subscription.empti","support","syntax","templateref","this.context","this.resourc","this.resource.data","this.resource.load","this.resource.url","this.resource.urlchange.subscribe((valu","this.sourcesubscript","this.sourcesubscription.unsubscrib","this.urlchang","this.urlchange.emit(valu","this.urlsubscript","this.urlsubscription.unsubscrib","this.viewcontainer.createembeddedview(this.templateref","toplevelnavigableref","two","type","typeof","undefin","underli","until","url","urlchang","urlsubscript","us","valu","variabl","variant","view","viewcontain","viewcontainerref","viewdata","void","way","whenev"],"classes/ResourceViewContext.html":["accessor","activ","activatedview","activatedview(target","angular/cor","behaviorsubject","behaviorsubject>(this.data","chang","class","compon","componentfactoryresolv","componentref","componenttyp","const","constructor","constructor(compon","constructor(priv","constructor(publ","creat","creation","current","data","data.target","datasourc","defin","descript","destroy","direct","display","dure","export","factori","file","getcomponenttyp","ignor","implement","import","index","info","injector","injector.create({provid","input","instead","match","method","name","navig","navigableref","new","next","next(valu","ngonchanges(chang","normal","note","noth","null","observ","old","on","onchang","option","paramet","parent","prepar","privat","propag","properti","provid","public","re","readonli","refer","render","resolv","resourc","resourceviewcontext","resourceviewcontext(compon","resourceviewdirect","result","return","rxj","same","selector","show","simplechang","sourc","src/lib/src/directives/resourc","staticprovid","store","target","this.component.componenttyp","this.curr","this.current.component.destroy","this.current.componenttyp","this.current.next(this.data","this.current.target","this.data","this.data.config","this.data.config.compon","this.data.next(valu","this.data.target","this.destroy","this.rend","this.resolver.resolvecomponentfactory(this.data.config.compon","this.viewcontainer.createcomponent(factori","this.viewcontainer.injector","this.viewcontainer.length","type","us","usevalu","valu","view","view.t","view.ts:18","view.ts:20","view.ts:21","view.ts:22","view.ts:25","view.ts:29","viewcontain","viewcontainerref","viewdata","visibl","void","won't"],"classes/SortedArray.html":["0","1","2","append","array","array.length","array.t","array.ts:17","array.ts:7","array.ts:9","array[pivot","b","c","class","compar","comparer(el","const","constructor","constructor(compar","constructor(publ","default","defin","descript","element","end","equal","export","file","find","index","info","insert","insertlocation(valu","locat","locationfor(el","maintain","match","math.floor((start","method","name","need","number","option","order","param","paramet","pivot","possibl","properti","public","push","push(valu","result","return","simpl","sort","sortedarray","sourc","src/lib/src/utils/sort","start","t","this.array","this.array.splice(i","this.compar","type","us","valu","void","wrapper"],"classes/UrlNormalizer.html":["absolut","abstract","account","analyz","angular/common","angular/cor","api","apiurl","applic","base","base.pathrel","basehref","baseurlnorm","browserapiurl","browserurlnorm","build","class","combin","compon","const","constructor(priv","contain","context","current","default","defin","descript","document","dure","etc","exclud","export","extend","file","gener","getbasehref","getdom().getbasehref","getloc","given","host","href","implement","import","index","info","inject","inject(docu","instead","invalid","locat","locationinfo","locationstrategi","match","method","mock","n","n.protocol}//${n.host}${n.pathname}${pathrel","name","normal","normalize(url","normalizer.t","normalizer.ts:18","note","null","option","origin","param","paramet","pars","parseurl","parseurl(this.getbasehref","parseurl(url","path","pathnam","pathrel","platformstrategi","privat","protocol","readonli","rel","replac","resolv","result","return","sourc","src/lib/src/url","string","super","take","test","this.document.loc","this.getloc","this.platformstrategy.getbasehref","type","url","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlnorm","us","utils/pars"],"classes/ViewTypeStrategy.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttyp","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","method","name","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","option","overrid","param","paramet","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:32","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","viewtyperespons","viewtypestrategi"],"interfaces/Data.html":["00","2","200","2xx","3","add","against","alia","angular/cor","array","better","charact","code","compon","data","declar","default","defin","definit","definition.t","definition.ts:4","differ","digit","disjunct","don't","end","expand","export","express","fallback","file","forbidden","forget","given","handl","http","import","index","info","integ","interfac","mandatori","match","mean","media","modul","more","multipl","name","number","properti","readabl","readonli","respons","result","see","set","singl","sourc","src/lib/src/view","statu","statustyp","still","string","success","support","type","unless","usual","valu","view","viewdef","wildcard","x","zero"],"interfaces/Link.html":["08","accord","boolean","consid","date","defin","deprec","dereferenc","descript","draft]{@link","expect","export","fals","file","further","futur","hal","hint","href","hreflang","https://tools.ietf.org/html/draft","human","hyperlink","i.","identifi","index","indic","info","inform","intend","interfac","json","kelli","key","label","languag","link","link.t","link.ts:12","link.ts:17","link.ts:21","link.ts:25","link.ts:29","link.ts:37","link.ts:41","link.ts:8","match","media","name","object","object'","presenc","profil","properti","provid","readabl","readonli","relat","remov","resourc","result","rfc3986","rfc5988","same","secondari","select","share","sourc","specif","src/lib/src/hal","string","target","templat","titl","true","type","undefin","uri","url","us","valu"],"interfaces/LocationInfo.html":["0","absolut","built","const","defin","export","extend","file","form","function","host","index","info","info.host","info.pathnam","info.protocol","interfac","locationinfo","match","match[1","match[2","match[3","null","object","param","pars","parser","parseurl(url","pathnam","pathrel","properti","protocol","readonli","rel","result","return","rough","sourc","src/lib/src/utils/pars","string","type","undefin","url","url.match(url_pattern","url.t","url.ts:4","url.ts:5","url.ts:6","url_pattern","urlinfo","w+:)?\\/\\/([^/]+(?::\\d","well"],"interfaces/LocationReference.html":["action","bind","bindurl(sourc","both","cold","combin","defin","export","file","function","import","index","info","initi","instanceof","interfac","invok","islocationreference(obj","locationrefer","match","obj","obj.urlchang","observ","probabl","properti","reference.t","reference.ts:4","reference.ts:5","result","return","rxj","s","s.add(target.urlchange.subscribe(url","set","sourc","source.url","source.urlchange.subscribe(url","src/lib/src/loc","string","subscrib","subscript","target","target.url","two","type","url","urlchang","valu","way"],"interfaces/Navigable.html":["abstract","actual","alway","angular/cor","avail","be","cast","chang","class","compon","const","constructor(publ","creat","current","data","declar","defin","definit","dep","dereferenc","descript","doc","doesn't","exist","export","extend","factoryprovid","file","function","given","go","go(url","guarante","honor","immut","import","index","info","inject","inject(top_level_navig","injectiontoken","injectiontoken('top_level_navig","instanc","instead","interfac","intern","isnavigable(obj","keep","level","link","makenavigableref(valu","match","method","name","navig","navigableref","navigablerefimpl","navigablerefimpl(valu","navigationref","nest","new","note","obj","obj.go","option","paramet","proper","provid","readonli","recommend","refer","regardless","requir","resourc","resourcedatanavigableref","result","return","root","safe","see","self","skipself","sourc","src/lib/src/navigable.t","src/lib/src/navigable.ts:6","string","super","therefor","token","top","top_level_navig","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","true","type","typeof","url","us","usag","usefactori","valu","void","won't"],"interfaces/ReadOnlyHeaders.html":["accessor","allow","anyth","boolean","check","collect","const","custom","decoupl","defin","descript","dummi","easi","empti","exist","export","fals","file","first","get(nam","getal","getall(nam","given","has(nam","header","headers.t","headers.ts:11","headers.ts:16","headers.ts:21","headers.ts:26","http","httpheader","implement","index","info","interfac","key","link","list","match","method","name","never","no_head","null","option","paramet","provid","read","readonlyhead","result","return","serv","sourc","src/lib/src/read","string","type","valu"],"interfaces/ResourceRouterOptions.html":["204","absolut","alway","analyze_for_entry_compon","angular/common","angular/cor","anoth","aot","api","apiloc","apimapp","app_api_prefix","app_base_href","bang","base","basehref","boolean","browserurlnorm","chang","class","client","commonmodul","compon","components/default","configur","configure(opt","const","content","context","data","declar","default","defaultemptycompon","defaulterrorcompon","defin","definit","dep","descript","detail","directives/resourc","empty.compon","emptyview","enabl","end","error.compon","errorview","explicitli","export","factori","file","fortypes(view","full","function","global","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","header","headerviewtypestrategi","host","href","html5","http://example.com/my/context/api","httpresourcecli","implement","import","index","info","inject","inject(app_base_href","injectiontoken","injectiontoken('resource_router_configur","interfac","intern","link","locat","locationstrategi","mapper","match","media","media_type_router_empti","media_type_router_load","mode","module.t","module.ts:54","module.ts:61","module.ts:67","module.ts:73","modulewithprovid","multi","my/context/api","navig","new","ngmodul","normal","number.min_safe_integ","option","options.prefix","options.resourcecli","options.usehash","options.viewtypestrategi","outlet","path","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","platformloc","prefix","properti","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","qualiti","read","readonli","registri","rel","resourc","resource_router_configur","resource_view","resourcecli","resourcecontextdirect","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourcerouteropt","resourceviewdirect","resourceviewregistri","responsetyp","result","return","router","set","singl","singleapimapp","slash","sourc","src/lib/src/resourc","static","statu","strategi","string","support","system","tag","text","true","type","url","urlnorm","us","useclass","usefactori","usehash","usehash}=tru","usevalu","view","viewdef","viewtypestrategi","way","won't","work"],"interfaces/UrlInfo.html":["0","absolut","built","const","defin","export","extend","file","form","function","host","index","info","info.host","info.pathnam","info.protocol","interfac","locationinfo","match","match[1","match[2","match[3","null","object","param","pars","parser","parseurl(url","pathnam","pathrel","properti","protocol","readonli","rel","result","return","rough","sourc","src/lib/src/utils/pars","string","type","undefin","url","url.match(url_pattern","url.t","url.ts:10","url_pattern","urlinfo","w+:)?\\/\\/([^/]+(?::\\d","well"],"interfaces/ViewData.html":["bodi","config","data.t","data.ts:10","data.ts:11","data.ts:12","data.ts:13","data.ts:14","data.ts:15","data.ts:8","data.ts:9","defin","definit","export","file","header","import","index","info","interfac","match","navig","number","properti","read","readonli","readonlyhead","result","sourc","src/lib/src/view","statu","statustext","string","t","target","type","url","view","viewdata","viewdef"],"interfaces/ViewDef.html":["0..1","0.0","0.5","00","1.0","2","200","2xx","3","9","99","999","accept","accordingli","add","against","alia","alway","angular/cor","anyth","applic","array","arraybuff","be","befor","behavior","better","blob","bodi","boolean","both","calcul","call","charact","code","compon","configur","consum","data","declar","default","defin","definit","definition.t","definition.ts:102","definition.ts:19","definition.ts:29","definition.ts:50","definition.ts:73","definition.ts:83","definition.ts:90","definition.ts:95","descript","determinist","differ","digit","disabl","disjunct","domain","don't","end","equal","exampl","except","expand","export","express","fallback","file","final","follow","forbidden","forget","function","given","handl","hard","header","http","imag","import","index","info","insignific","integ","interfac","json","know","level","limit","low","maintain","make","mandatori","mani","match","mean","media","modul","more","multipl","name","never","non","note","now","nowildcard","number","observ","on","order","otherwis","overrid","overridden","pars","parser","pass","posit","produc","proper","properti","qualiti","rang","readabl","readonli","recommend","reli","remain","request","requir","resolv","respons","responsetyp","result","right","rule","same","see","sent","set","show","similar","singl","sourc","specif","src/lib/src/view","statu","statustyp","still","string","success","support","text","todo","treat","type","typic","undefin","unless","us","usual","valu","view","viewdef","way","wildcard","without","won't","work","x","zero"],"interfaces/ViewTypeResponse.html":["abstract","actual","angular/cor","applic","better","bodi","class","code","const","content","contenttyp","default","defin","descript","export","extract","extracttype(respons","field","file","found","header","headernam","headerviewtypestrategi","helper","http","httprespons","implement","import","index","info","inject","interfac","jsmethodcanbestat","match","media","noinspect","normalizemediatyp","normalizemediatype(contenttyp","null","number","on","overrid","param","properti","protect","read","readonli","readonlyhead","respons","response.head","response.headers.get(this.headernam","result","return","server","sourc","src/lib/src/view","statu","strategy.t","strategy.ts:12","strategy.ts:16","strategy.ts:20","string","subset","this.normalizemediatype(contenttyp","type","understand","us","utils/norm","viewtyperespons","viewtypestrategi"],"miscellaneous/functions.html":["0","0.333","0.5","0.666","1","2","20","204","aaa","aot","applic","array.t","assum","b","basehref","bindurl","bindurl(sourc","cast","charact","code","compar","constant","contain","convert","creat","data.t","debuglog","defaultcompar","defaultcomparer(a","descript","escaperegexppattern","escaperegexppattern(","evalu","evaluator.t","everyth","exact","export","express","factori","fals","first","form","format","function","given","handl","immut","inconsist","index","instanc","intern","islocationrefer","islocationreference(obj","isnavig","isnavigable(obj","length","log.t","makenavigableref","makenavigableref(valu","match","media","mimetyp","miscellan","module.t","name","navig","navigableref","normal","normalizemediatyp","normalizemediatype(mimetyp","number","obj","option","otherwis","paramet","pars","parser","parseurl","parseurl(url","pattern","platformlocationstrategi","prepend","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","pure","qualiti","ration","reference.t","regex.t","regexp","regular","remov","resourcedatanavigableref","respons","result","return","rough","router","s","safe","second","simpletypequalityevalu","simpletypequalityevaluator(typ","sourc","special","src/lib/src/loc","src/lib/src/navigable.t","src/lib/src/qual","src/lib/src/resourc","src/lib/src/utils/debug","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","statu","statusqualityevalu","statusqualityevaluator(statu","string","subtyp","suffix","support","target","toplevelnavigableref","true","type","type.t","typerefer","url","url.t","us","usag","valu","view","well","wildcard","wildcardtoregex","wildcardtoregex('*.js').test('foo.j","wildcardtoregex('*.js').test('foo.jsx","wildcardtoregex('image/*').test('image/png","wildcardtoregex('image/*').test('text/plain","wildcardtoregex(wildcard","without"],"miscellaneous/variables.html":["_self","_top","absolut","alway","anyth","api","app_api_prefix","base","boolean","compon","copi","cross","default","doc","dummi","end","fals","get(nam","getall(nam","has(nam","headers.t","host","httpxhrbackend","implement","index","injectiontoken('app_api_prefix","injectiontoken('resource_router_configur","injectiontoken('resource_view","injectiontoken('top_level_navig","injectiontoken('type_quality_evalu","instanc","key","level","link","link.t","mapper.t","match","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","miscellan","module.t","n","navigableref","never","new","no_head","null","prefix","proper","provid","readonlyhead","registry.t","rel","resource_router_configur","resource_view","result","return","root","router","router/empti","router/error","router/load","s","script","see","site","slash","src/lib/src/directives/resourc","src/lib/src/navigable.t","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","string","target_self","target_top","token","top","top_level_navig","toplevelnavigableref","type","type.t","type_quality_evalu","types.t","url","url.t","url_pattern","us","usag","utils.t","valu","variabl","view","w+:)?\\/\\/([^/]+(?::\\d","xssi_prefix"],"miscellaneous/typealiases.html":["alias","array.t","compar","definit","definition.t","evalu","evaluator.t","function","index","link.t","match","miscellan","navig","number","result","src/lib/src/directives/resourc","src/lib/src/qual","src/lib/src/utils/sort","src/lib/src/view","statustyp","string","targettyp","type","typealias","typequalityevalu"],"coverage.html":["0","0/1","0/2","0/3","0/4","0/6","0/8","0/9","1/1","1/10","1/2","1/3","1/4","1/5","1/6","1/7","1/8","10","100","12","14","16","2/2","2/5","20","25","3/3","3/4","3/5","33","4/4","40","5/5","5/7","50","60","71","75","9/9","activatedview","api","apiloc","apimapp","app_api_prefix","array.t","baseurlnorm","bindurl","browserurlnorm","class","client.t","compon","context.t","coverag","data","data.t","debuglog","defaultcompar","defaultemptycompon","defaulterrorcompon","definition.t","direct","document","empty.component.t","error.component.t","escaperegexppattern","evaluator.t","file","function","headers.t","headerviewtypestrategi","href.t","httpresourcecli","identifi","inject","interfac","islocationrefer","isnavig","link","link.t","location.t","locationinfo","locationrefer","log.t","makenavigableref","mapper.t","match","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","mockurlnorm","module.t","navig","navigableref","navigablerefimpl","new","no_head","normalizemediatyp","normalizer.t","of.t","outlet.t","parseurl","providelocationstrategi","readonlyhead","reference.t","regex.t","registry.t","resource_router_configur","resource_view","resourcecli","resourcecontextdirect","resourcedata","resourcedatanavigableref","resourcedataofcontext","resourcedataofdirect","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourcerouteropt","resourceviewcontext","resourceviewdirect","resourceviewregistri","result","router","simpletypequalityevalu","singleapimapp","sortedarray","src/lib/src/activ","src/lib/src/api","src/lib/src/components/default","src/lib/src/directives/resourc","src/lib/src/hal","src/lib/src/loc","src/lib/src/navigable.t","src/lib/src/qual","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/url","src/lib/src/utils/debug","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","src/lib/src/view","src/lib/testing/src/mock","statement","statusqualityevalu","strategy.t","tabl","tablesort(document.getelementbyid('coverag","target_self","target_top","top_level_navig","toplevelnavigableref","type","type.t","type_quality_evalu","types.t","url","url.t","url_pattern","urlinfo","urlnorm","utils.t","variabl","view","view.t","viewdata","viewdef","viewtyperespons","viewtypestrategi","wildcardtoregex","xssi_prefix"]},"length":48},"tokenStore":{"root":{"0":{"0":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.011363636363636364}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"8":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.0630841121495327}},".":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"3":{"3":{"3":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}},"docs":{}},"docs":{}},"5":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}},"6":{"6":{"6":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}},"docs":{}},"docs":{}},"docs":{},".":{"1":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.035046728971962614}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.05841121495327103}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"1":{"docs":{"overview.html":{"ref":"overview.html","tf":0.019417475728155338}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"5":{"9":{"9":{"8":{"docs":{},"]":{"docs":{},"{":{"docs":{},"@":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}},".":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{}}},"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0397196261682243}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"docs":{}}},"2":{"0":{"0":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}},"1":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.00909090909090909},"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{}},"4":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}},"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},".":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{}},"?":{"docs":{},"?":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"x":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}}}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"3":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.008665511265164644},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.010548523206751054}},"/":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"docs":{}}},"4":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}},"docs":{}}},"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}},"docs":{}}},"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}}},"/":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"docs":{}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{}}},"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"docs":{}}},"6":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"7":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{}}},"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"8":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669}}},"9":{"9":{"9":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"/":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}},"o":{"docs":{},"r":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}},"p":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}}}},"r":{"docs":{},"d":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.010526315789473684}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.01948051948051948},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":5.0131578947368425},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},".":{"1":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}}}}}},"i":{"docs":{},"a":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.019083969465648856},"changelog.html":{"ref":"changelog.html","tf":0.025},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}}}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"z":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008438818565400843},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.03420523138832998},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.04583333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.046632124352331605},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01026694045174538},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"o":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":5.0040241448692155},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.016},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012072434607645875},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":5.010362694300518},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.015625}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}},"v":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015544041450777202},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.022123893805309734},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023529411764705882}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.011363636363636364}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}}}},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.008665511265164644}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.012131715771230503},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.06349206349206349},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}}}}}}},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"s":{"docs":{},":":{"1":{"7":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}},"docs":{}},"7":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}},"9":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}},"docs":{}}}}},"[":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"u":{"docs":{},"m":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"k":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}},"a":{"docs":{},"a":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"b":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.015873015873015872},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006036217303822937},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.02631578947368421},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.021505376344086023}},">":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.017543859649122806},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}},"d":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.03633217993079585},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.02631578947368421},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.044444444444444446},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.03529411764705882}}},"y":{"docs":{},"|":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}}}}}}},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"modules.html":{"ref":"modules.html","tf":0.1},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01006036217303823},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":5.009345794392523},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.011363636363636364}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.022900763358778626},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}},"g":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"m":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304}}}},"s":{"docs":{},"e":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.028037383177570093},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.029045643153526972},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.035398230088495575},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":5.012448132780083},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.0205761316872428},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.006932409012131715}}}}}}}}},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"changelog.html":{"ref":"changelog.html","tf":0.01818181818181818},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"changelog.html":{"ref":"changelog.html","tf":3.3356060606060605}}}}}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005199306759098787},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.061068702290076333},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.04008438818565401},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.015873015873015872}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.013636363636363636},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01171875},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.006932409012131715},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":5.0131578947368425},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":5.010362694300518},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":5.016597510373444},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":5.030042918454936},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":5.021929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":5.006666666666667},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":5.008130081300813},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":5.010752688172043},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":5.01058201058201},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":5.017699115044247},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":5.0186335403726705},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.018433179723502304},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.02570093457943925}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.013605442176870748},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}},".":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"s":{"docs":{},":":{"1":{"0":{"2":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"docs":{}},"2":{"8":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"docs":{}},"docs":{}},"2":{"7":{"docs":{"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}},"docs":{}},"3":{"5":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"7":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"8":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"9":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"docs":{}},"4":{"3":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"docs":{}},"5":{"3":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"docs":{}},"6":{"1":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}},"docs":{}},"docs":{}}}}}}}},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.018433179723502304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"o":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}},"o":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542}}},"x":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"i":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196}}}}},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.015909090909090907},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":5.073529411764706},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":5.029220779220779},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":5.019607843137255},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022900763358778626},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.035842293906810034},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.015267175572519083},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.021505376344086023}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}}},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.10052910052910052},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009523809523809525},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08571428571428572}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.012110726643598616},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01386481802426343},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.011111111111111112},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.006932409012131715}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.006932409012131715}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.027472527472527472},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.024844720496894408},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228}},".":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"s":{"docs":{},":":{"5":{"4":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}},"7":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}},"docs":{}},"docs":{}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"s":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022900763358778626},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010398613518197574},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.008888888888888889},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.021505376344086023},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.015873015873015872},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.022123893805309734},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"o":{"docs":{},"r":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}},"(":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771}}}}}}}}}}}}},"@":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576}}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}},"a":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}},"u":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}},"d":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}},"r":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"license.html":{"ref":"license.html","tf":0.04040404040404041},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.00233644859813}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.014084507042253521},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"changelog.html":{"ref":"changelog.html","tf":0.00909090909090909},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.01948051948051948},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01953125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.0411522633744856},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022900763358778626},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.013605442176870748},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.046052631578947366},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.015555555555555555},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.04607046070460705},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.03225806451612903},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":5.015267175572519},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0189873417721519},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}}}}}}}}}},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"y":{"docs":{},"p":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"1":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"2":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"3":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"4":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"5":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"docs":{}},"2":{"1":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"2":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"8":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{}},"3":{"4":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"6":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"7":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{}},"6":{"6":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{}},"7":{"0":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"4":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"8":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{}},"8":{"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"9":{"1":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}},"docs":{"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258}}},"docs":{}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},"e":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"o":{"docs":{},"r":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.01948051948051948},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.02197802197802198},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0782122905027933}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.02912621359223301},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.016877637130801686},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":5.0588235294117645},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.02912621359223301},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.016877637130801686},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":5.012987012987013},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.032467532467532464},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.03137254901960784},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01171875},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.0102880658436214},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.018433179723502304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.021333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019083969465648856},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01609657947686117},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.015570934256055362},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.046052631578947366},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.024943310657596373},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.012131715771230503},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.016666666666666666},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.039473684210526314},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.021505376344086023},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.031746031746031744},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.042105263157894736},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.021739130434782608},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.023121387283236993},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.06451612903225806},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.02531645569620253},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941}},"i":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005199306759098787},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"s":{"docs":{},":":{"1":{"0":{"2":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"9":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"2":{"9":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"4":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542}}},"5":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"7":{"3":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"8":{"3":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"9":{"0":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"5":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"docs":{}},"docs":{}}}}}}}}}}}}},"p":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.028070175438596492}}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009523809523809525},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"`":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"p":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01006036217303823},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.012110726643598616},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.008665511265164644},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.016666666666666666},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015544041450777202},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.015873015873015872},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.023121387283236993},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0380952380952381}}}}}}},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022900763358778626},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012}}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.015909090909090907},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":5.04296875},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":5.030864197530864},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":5.013824884792626},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":5.005333333333334},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":5.011450381679389},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.032520325203252036},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"coverage.html":{"ref":"coverage.html","tf":0.011682242990654205}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.012658227848101266},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456}}}}}}}}}}},"(":{"docs":{},"{":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}}}},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},"{":{"docs":{},"@":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"k":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"*":{"docs":{},"[":{"docs":{},"?":{"docs":{},"x":{"docs":{},"]":{"docs":{},"*":{"docs":{},"\\":{"docs":{},"*":{"docs":{},"*":{"docs":{},"$":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.021164021164021163}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}},"i":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.015873015873015872},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}},"r":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.01948051948051948},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.01384083044982699},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.017777777777777778}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}}}},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"s":{"docs":{},":":{"4":{"2":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}},"4":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}},"7":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}},"docs":{}},"5":{"1":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}},"5":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}},"(":{"docs":{},"`":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}},"n":{"docs":{},"o":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}},"w":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}},"'":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}},"e":{"docs":{},"v":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.008888888888888889}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}},"t":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0234375},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01440329218106996},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"l":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02531645569620253},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01953125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.018433179723502304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.006932409012131715},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.030042918454935622},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.03070175438596491},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.03260869565217391},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.03225806451612903},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.02053388090349076},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.016}}}},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.017167381974248927},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.017543859649122806},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.018433179723502304},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.012345679012345678},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.011764705882352941},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}}}},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005199306759098787},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.012698412698412698},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}},"l":{"docs":{},"i":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"license.html":{"ref":"license.html","tf":0.010101010101010102},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"r":{"docs":{},"m":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}}}}}},"c":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105}}},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.024844720496894408},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}},"u":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}}}}},"v":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}}}}}}},"s":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.015909090909090907}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667}}},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.011363636363636364}}},"l":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"r":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}},"s":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.012658227848101266},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.012131715771230503},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02575107296137339},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.02631578947368421},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.021739130434782608},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.027649769585253458},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.682539682539682},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.035046728971962614}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}}},"l":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}},"a":{"docs":{},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232}}}}}}},"$":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}},"h":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.03468208092485549},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}},"u":{"docs":{},"l":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010398613518197574}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}},"o":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}},"r":{"docs":{},"d":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}},"v":{"docs":{},"e":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.03296703296703297},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.037267080745341616},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.05202312138728324},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.04032258064516129},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.052941176470588235}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":5.010989010989011},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.02197802197802198},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"6":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"docs":{}},"2":{"1":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"6":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}},"docs":{}},"docs":{}}}}}}}}}},"r":{"docs":{},"o":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}},"e":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}},"n":{"docs":{},"t":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.03289473684210526},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.04},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666}}}}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"m":{"docs":{},"e":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"5":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.016233766233766232},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"t":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.012110726643598616},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.015570934256055362},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.008888888888888889}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":5.003460207612457},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.01384083044982699},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.013333333333333334},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"d":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"k":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"1":{"5":{"9":{"9":{"8":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"/":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}}}}}}}},"x":{"docs":{},"h":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.022123893805309734},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}},".":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"s":{"docs":{},":":{"1":{"2":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"3":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"4":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"5":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"6":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"7":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"docs":{}},"2":{"6":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"docs":{}},"5":{"6":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"docs":{}},"docs":{}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.026717557251908396},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.04219409282700422},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.00974025974025974},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.0196078431372549},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01953125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01646090534979424},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018666666666666668},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019083969465648856},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01006036217303823},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.020761245674740483},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.024943310657596373},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.008665511265164644},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.02631578947368421},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.02666666666666667},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02168021680216802},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.017921146953405017},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.04106776180698152},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.024193548387096774},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02145922746781116},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"a":{"docs":{},"g":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}}}},"i":{"docs":{},"c":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}},"n":{"docs":{},"c":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.034334763948497854},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.02631578947368421},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.008888888888888889},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.027649769585253458},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.008888888888888889},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}},"i":{"docs":{},"d":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.05291005291005291}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":5.006036217303823},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":5.018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":5.016483516483516},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":5.005190311418685},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":5.019736842105263},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":5.006802721088436},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":5.006932409012132},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":5.016666666666667},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.018691588785046728}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":5.022900763358779},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":5.007017543859649},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":5.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":5.021739130434782},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":5.009216589861751},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":5.017341040462428},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":5.0041067761806985},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":5.027522935779817},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":5.016129032258065},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":5.006329113924051},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":5.023529411764706},"coverage.html":{"ref":"coverage.html","tf":0.02570093457943925}}}}},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.00909090909090909},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.010548523206751054},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01171875},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.012131715771230503},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01026694045174538},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"d":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}}},"g":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"r":{"docs":{},"m":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.015625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.02304147465437788},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018666666666666668},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.015267175572519083},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}},"i":{"docs":{},"t":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}},"o":{"docs":{},"k":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}}},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}},"'":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333}}}},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}},"'":{"docs":{},"m":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}},".":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},"l":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.026717557251908396},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}},"y":{"docs":{},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02109704641350211},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01171875},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.03497942386831276},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.04},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01609657947686117},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.04721030042918455},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.04824561403508772},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02710027100271003},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":5.035087719298246},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.05069124423963134},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.026694045174537988},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},".":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"7":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}},"2":{"1":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"2":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152}}},"5":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"9":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}},"3":{"7":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}},"4":{"1":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}},"8":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}},"docs":{}}}}}},"u":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":3.343434343434343}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"s":{"docs":{},"t":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}},"e":{"docs":{},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01953125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.02263374485596708},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.011337868480725623},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02981029810298103}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.021333333333333333},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.022132796780684104},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.022123893805309734},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.02336448598130841},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.0102880658436214},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":5.054347826086956},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"#":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}},"#":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"s":{"docs":{},":":{"1":{"0":{"1":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"9":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"docs":{}},"6":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"8":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"docs":{}},"3":{"7":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"docs":{}},"4":{"9":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"docs":{}},"7":{"6":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"docs":{}},"8":{"5":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"docs":{}},"docs":{}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.019736842105263157},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":5.024},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}},"o":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}},"i":{"docs":{},"c":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}},"w":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}},"f":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005199306759098787},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"license.html":{"ref":"license.html","tf":0.020202020202020204},"modules.html":{"ref":"modules.html","tf":0.2},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010398613518197574},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.03816793893129771},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.021739130434782608},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.023121387283236993},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.03669724770642202},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.016129032258064516},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.02531645569620253},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.012698412698412698},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0111731843575419},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05714285714285714},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}},"[":{"1":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"2":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"3":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}},"docs":{}}}},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}}},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.02012072434607646},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.046632124352331605},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}},".":{"docs":{},"t":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"s":{"docs":{},":":{"1":{"5":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676}}},"docs":{}},"2":{"2":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}},"3":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}},"7":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676}}},"docs":{}},"3":{"4":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}},"docs":{}},"4":{"8":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}},"docs":{}},"docs":{}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584}}}}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}}}}}}}}}}}}}}}},"l":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009523809523809525},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0111731843575419},"coverage.html":{"ref":"coverage.html","tf":0.011682242990654205}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497}}}}}},"n":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}},"a":{"docs":{},"n":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"modules.html":{"ref":"modules.html","tf":10.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":5.0042194092827},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.010548523206751054}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"s":{"docs":{},":":{"5":{"4":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}},"docs":{}},"6":{"1":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}},"7":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}},"docs":{}},"7":{"3":{"docs":{"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}},"docs":{}},"docs":{}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228}}}}}}}}}}}}}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456}},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":5.0131578947368425},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.00909090909090909}}}}},"i":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.336507936507936},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.338919925512104},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.3619047619047615}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}},"y":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008438818565400843},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304}},"p":{"docs":{},"l":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}}}},"n":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.07352941176470588},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.01948051948051948},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.023529411764705882},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.008665511265164644},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.08092485549132948},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0380952380952381}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.011363636363636364},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.011764705882352941},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.03225806451612903},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.024},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.018108651911468814},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.01730103806228374},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.07894736842105263},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.06437768240343347},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.08333333333333333},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.02},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.025089605734767026},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":5.055299539170507},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.04032258064516129},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01171875},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.03225806451612903},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018666666666666668},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.026717557251908396},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":5.060085836909871},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.05701754385964912},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.055299539170506916},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":5.008771929824562},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.0102880658436214},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.010548523206751054},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019083969465648856},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006036217303822937},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01559792027729636},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02575107296137339},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.02631578947368421},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.017921146953405017},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.027649769585253458},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01026694045174538},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027932960893854747},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01559792027729636}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}},"x":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008438818565400843},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.015625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01646090534979424},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02145922746781116},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.029545454545454545},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}}}}}}}}}},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012072434607645875},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.024896265560165973},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.04424778761061947},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584}}}}}},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"2":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"8":{"docs":{"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}},"docs":{}},"2":{"1":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"5":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"8":{"docs":{"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996}}},"docs":{}},"5":{"6":{"docs":{"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996}}},"docs":{}},"6":{"3":{"docs":{"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996}}},"7":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682}}},"docs":{}},"7":{"5":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682}}},"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"8":{"0":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682}}},"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"9":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052}}},"docs":{}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.008888888888888889},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"j":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.026717557251908396},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.022530329289428077},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.024193548387096774},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.038461538461538464},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.049689440993788817},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.046242774566473986},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.041176470588235294},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0223463687150838}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"license.html":{"ref":"license.html","tf":0.010101010101010102},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.015267175572519083},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.011764705882352941},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}},".":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"s":{"docs":{},":":{"3":{"2":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}},"3":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}},"5":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}},"8":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}},"docs":{}},"4":{"2":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}},"6":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}},"docs":{}},"5":{"1":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196}}},"docs":{}},"docs":{}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.009708737864077}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.02072538860103627},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012072434607645875},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.01730103806228374},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.02040816326530612},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.046052631578947366},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.017777777777777778},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.05434782608695652},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"j":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.03260869565217391},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009523809523809525}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.01948051948051948},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}},"'":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}},".":{"docs":{},"g":{"docs":{},"o":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04145077720207254},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.00974025974025974},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.011764705882352941},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.011764705882352941},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584}}}}}}}}}}}}}}}},"p":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.010548523206751054},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.015267175572519083},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01386481802426343},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.014336917562724014},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.044444444444444446}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}}},"f":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"s":{"docs":{},":":{"1":{"1":{"2":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428}}},"5":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428}}},"7":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428}}},"docs":{}},"4":{"9":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856}}},"docs":{}},"docs":{}},"2":{"6":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"3":{"7":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"4":{"7":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"5":{"5":{"docs":{"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}},"docs":{}},"docs":{}}}}}},"k":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.022132796780684104},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.07253886010362694},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.02074688796680498},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.03289473684210526},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.048},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.045871559633027525}}}}},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010398613518197574},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.012698412698412698}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"*":{"docs":{},"/":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}},"x":{"docs":{},"/":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}},"g":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}}},"a":{"docs":{},"m":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006036217303822937},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"e":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.008665511265164644},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0125},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0380952380952381}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}},"s":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.01384083044982699},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.013333333333333334},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}},"r":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012072434607645875},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"u":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}}}}},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01006036217303823},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.0625},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01642710472279261},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0111731843575419}},"=":{"docs":{},"'":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"/":{"docs":{},"v":{"1":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}},"docs":{}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}}},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}},"c":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.0102880658436214},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006036217303822937},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.018140589569160998},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010398613518197574},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"license.html":{"ref":"license.html","tf":0.010101010101010102},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.029535864978902954},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.03515625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01646090534979424},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.017167381974248927},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.017543859649122806},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02168021680216802},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.018433179723502304},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.026694045174537988},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"t":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.021739130434782608},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.016129032258064516},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}}},"a":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.018108651911468814},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.020761245674740483},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.010398613518197574},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.008888888888888889},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.019736842105263157},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.04},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.019083969465648856},"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.01384083044982699},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.031746031746031744},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.05263157894736842},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02867383512544803},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}}}}},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}},"e":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}},"i":{"docs":{},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}},"r":{"docs":{},"e":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}},"a":{"docs":{},"d":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008438818565400843},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01646090534979424},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022900763358778626},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.012072434607645875},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.016483516483516484},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.015570934256055362},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.04081632653061224},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01559792027729636},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.020833333333333332},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.06578947368421052},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.016260162601626018},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.043010752688172046},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.018633540372670808},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.028070175438596492},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.03669724770642202},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.06451612903225806},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.01764705882352941}}},"y":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":5.023121387283237},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023529411764705882},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.012110726643598616},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.015873015873015872},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"s":{"docs":{},":":{"1":{"0":{"3":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}},"docs":{}},"2":{"1":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}},"docs":{}},"docs":{}},"4":{"5":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}},"docs":{}},"5":{"9":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}},"docs":{}},"6":{"3":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}},"docs":{}},"9":{"2":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}},"docs":{}},"docs":{}}}}}}}}}},"e":{"docs":{},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}}}}}}},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.016666666666666666},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.030973451327433628},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0111731843575419}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.019083969465648856},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}},"e":{"docs":{},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.039473684210526314}}}}},"i":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.015267175572519083},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.043137254901960784},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0234375},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.018518518518518517},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.014084507042253521},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04145077720207254},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.016260162601626018},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"overview.html":{"ref":"overview.html","tf":0.23300970873786409},"modules.html":{"ref":"modules.html","tf":0.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":5.061181434599156},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01026694045174538}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":5.008213552361396},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.03125}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02531645569620253},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":5.015625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008438818565400843},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.013605442176870748},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":5.0088888888888885},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01642710472279261},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.03137254901960784},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.02734375},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.024691358024691357},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":5.006802721088436},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02710027100271003},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"o":{"docs":{},"f":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02531645569620253},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01953125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":5.006172839506172},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":5.008130081300813},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}},"]":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"]":{"docs":{},"'":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"docs":{},"'":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009523809523809525},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}},"#":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.00909090909090909},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.03225806451612903},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02531645569620253},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":5.009216589861751},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02531645569620253},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":5.005333333333334},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02531645569620253},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":5.015686274509804},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.06796116504854369},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.02531645569620253},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":5.00763358778626},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.018666666666666668},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.013605442176870748},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":5.003466204506066},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":5.010752688172043},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.04395604395604396},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.020761245674740483},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.022222222222222223},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.06832298136645963},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.014767932489451477},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.025974025974025976},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.013333333333333334},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.010548523206751054}},"e":{"docs":{},":":{"docs":{},"'":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"license.html":{"ref":"license.html","tf":0.020202020202020204},"modules.html":{"ref":"modules.html","tf":0.2},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.008298755186721992},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.021739130434782608},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.016129032258064516},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0111731843575419},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05714285714285714},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.009708737864077669},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}},"e":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.017167381974248927},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"s":{"docs":{},":":{"4":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}},"5":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}},"docs":{}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019083969465648856},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}},"i":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"u":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.010548523206751054},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.00974025974025974},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.011764705882352941},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022900763358778626},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.028169014084507043},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.06074766355140187},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.03296703296703297},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.03633217993079585},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.039473684210526314},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.024943310657596373},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.019064124783362217},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.025},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.04145077720207254},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.06639004149377593},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02575107296137339},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.021929824561403508},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.03777777777777778},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.016260162601626018},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.014336917562724014},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.021164021164021163},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.05309734513274336},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.031055900621118012},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.04},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.043478260869565216},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.027649769585253458},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.08670520231213873},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01026694045174538},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.045871559633027525},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.029411764705882353},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.027932960893854747}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.017777777777777778}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.026717557251908396},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"license.html":{"ref":"license.html","tf":0.010101010101010102},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01026694045174538},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"/":{"2":{"4":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}}}}},"docs":{}},"docs":{}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}},"g":{"docs":{},"h":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"o":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.026717557251908396},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}},"l":{"docs":{},"e":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"n":{"docs":{},"g":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"x":{"docs":{},"j":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}},"f":{"docs":{},"c":{"3":{"9":{"8":{"6":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}},"docs":{}},"docs":{}},"docs":{}},"5":{"9":{"8":{"8":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"s":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.03260869565217391},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}},"f":{"docs":{},"e":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.02145922746781116},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.021929824561403508},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.02304147465437788},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"r":{"docs":{},"v":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}},"o":{"docs":{},"r":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.11764705882352941},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.025974025974025976},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.0392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01171875},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}},"t":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.016877637130801686}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}},"t":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"p":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.015267175572519083},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.008438818565400843}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":5.008333333333334},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}},"t":{"docs":{},"e":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.019736842105263157}}}}}}}}},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.0196078431372549}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.01730103806228374},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.027210884353741496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.012131715771230503},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01026694045174538},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0111731843575419},"coverage.html":{"ref":"coverage.html","tf":0.02336448598130841}}}}}}},"a":{"docs":{},"d":{"docs":{"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.028901734104046242},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.03529411764705882},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.015625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.012345679012345678},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.02304147465437788},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.024},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.022900763358778626},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.025089605734767026},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.02336448598130841}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.018108651911468814},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.015544041450777202},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.046052631578947366},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.018691588785046728},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.032},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.01834862385321101},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.02197802197802198},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.07258064516129033},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0189873417721519},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023529411764705882},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.014018691588785047}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.020833333333333332},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.016355140186915886}},"s":{"docs":{},":":{"2":{"9":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232}}},"docs":{}},"3":{"2":{"docs":{"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015}}},"4":{"docs":{"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015}}},"docs":{}},"6":{"docs":{"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}},"docs":{}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.031578947368421054},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.03260869565217391},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.05263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.011764705882352941}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.337150127226463},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}},"t":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.01948051948051948},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.043327556325823226},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.030534351145038167},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.029535864978902954},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.03529411764705882},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.012698412698412698}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903}}}}},"y":{"docs":{},"p":{"docs":{"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08571428571428572}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}},"i":{"docs":{},"c":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}}}}}},"e":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.0196078431372549},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.012345679012345678},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.02666666666666667},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.030181086519114688},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.03271028037383177},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.04395604395604396},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0328719723183391},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.09210526315789473},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.024943310657596373},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.03292894280762565},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.06666666666666667},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.06217616580310881},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.04149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.028888888888888888},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.03982300884955752},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.031055900621118012},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.04580152671755725},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.10175438596491228},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.112},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.03260869565217391},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.11560693641618497},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.09174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.07258064516129033},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.016877637130801686},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.023529411764705882},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.05396825396825397},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0335195530726257},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.02857142857142857}},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}},"p":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}},"y":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}},"6":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}},"docs":{}},"2":{"0":{"docs":{"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}},"docs":{}},"3":{"2":{"docs":{"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602}}},"docs":{}},"4":{"1":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495}}},"3":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495}}},"9":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495}}},"docs":{}},"docs":{}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.012345679012345678},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.00909090909090909},"modules.html":{"ref":"modules.html","tf":0.1},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.016877637130801686},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"r":{"docs":{},"(":{"0":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}},"docs":{}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.043478260869565216}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}}}}}}}},"b":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"h":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}},"s":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}},"y":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.005780346820809248},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.021739130434782608}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09090909090909091}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}},"r":{"docs":{},"t":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":5.01058201058201},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}},"r":{"docs":{},"e":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123}}}}},"o":{"docs":{},"w":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.016666666666666666},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.010548523206751054}}},"a":{"docs":{},"l":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}}}}}}},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.008665511265164644},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.0582010582010582},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.024193548387096774}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.029411764705882353},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01440329218106996},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.010752688172043012}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}}}},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01171875}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.015267175572519083},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.014336917562724014}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.015873015873015872}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.019064124783362217},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444}}}}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}},"t":{"docs":{},"l":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246}}}}},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545}}}},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009523809523809525},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.017167381974248927},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.017543859649122806},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.018433179723502304},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.022900763358778626},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.016877637130801686},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.03571428571428571},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.018433179723502304},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.024},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.01006036217303823},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.08791208791208792},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.025951557093425604},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.006578947368421052},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.022675736961451247},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.036395147313691506},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.016666666666666666},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.02631578947368421},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.010362694300518135},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.015555555555555555},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.017921146953405017},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.026455026455026454},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.08074534161490683},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.061068702290076333},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.056140350877192984},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.021739130434782608},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.017341040462427744},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.03490759753593429},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.0967741935483871},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.07805907172995781},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.08235294117647059},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.06349206349206349},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.05714285714285714},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}}}}},"o":{"docs":{},"f":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01559792027729636},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01733102253032929},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08571428571428572}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.044444444444444446}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}},"i":{"docs":{},"c":{"docs":{"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}},"k":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.008849557522123894}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.08294930875576037},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.042666666666666665},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.011450381679389313},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.01903114186851211},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.02},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.02867383512544803},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349}},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.021739130434782608}}}}}},"=":{"docs":{},"\"":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08571428571428572}}}}}}}}},"b":{"docs":{},"l":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"i":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333}}}}},"u":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.010548523206751054},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009523809523809525}}}},"e":{"docs":{},"e":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.003246753246753247},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098}}},"a":{"docs":{},"t":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"s":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}},"w":{"docs":{},"o":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.012345679012345678},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304}}}}},"u":{"docs":{},"n":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}},"l":{"docs":{},"i":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.013824884792626729},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.024},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.027522935779816515},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}}}},"u":{"docs":{},"s":{"docs":{},"u":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}},"b":{"docs":{},"l":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.02666666666666667}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"changelog.html":{"ref":"changelog.html","tf":0.01818181818181818},"license.html":{"ref":"license.html","tf":0.020202020202020204},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.006329113924050633},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01953125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.014084507042253521},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.011337868480725623},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.016597510373443983},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.013157894736842105},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.017699115044247787},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.012422360248447204},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.014035087719298246},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.013824884792626729},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008438818565400843},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.002053388090349076}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304}},"}":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.012658227848101266},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.006666666666666667},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}}}}},"a":{"docs":{},"g":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}},"m":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006036217303822937},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}},"r":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.013333333333333334},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.0925553319919517},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.04672897196261682},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.00865051903114187},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.05263157894736842},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.022675736961451247},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.05},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.07772020725388601},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.04564315352697095},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.013333333333333334},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.008130081300813009},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.06637168141592921},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.064},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.07608695652173914},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.006160164271047228},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.07339449541284404},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.009523809523809525},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.009345794392523364},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.025},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":5.013274336283186},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.012345679012345678},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.008048289738430584},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.009070294784580499},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.05434782608695652}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.014018691588785047},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.012448132780082987},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.01327433628318584},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.016},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":5.027522935779817},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}},"t":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505}}},"docs":{}},"4":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"5":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"6":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008}}},"docs":{}}}}},"=":{"docs":{},"'":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"/":{"docs":{},"v":{"1":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}},"docs":{}}}}}}}}}}}}}}},"[":{"0":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}},"docs":{}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}},"i":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.005190311418685121},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.008888888888888889},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.021052631578947368}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/BrowserUrlNormalizer.html":{"ref":"injectables/BrowserUrlNormalizer.html","tf":0.004672897196261682},"classes/BaseUrlNormalizer.html":{"ref":"classes/BaseUrlNormalizer.html","tf":0.004149377593360996},"classes/UrlNormalizer.html":{"ref":"classes/UrlNormalizer.html","tf":0.004424778761061947}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}},"v":{"0":{"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}},"docs":{}}},"docs":{}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}},"docs":{}}},"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"5":{"docs":{},".":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}},"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}},"y":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.011450381679389313},"changelog.html":{"ref":"changelog.html","tf":0.006818181818181818},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152}}}}},"a":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.007633587786259542},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.012658227848101266},"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.014705882352941176},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.06493506493506493},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.008},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.019083969465648856},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.028169014084507043},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.00865051903114187},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.03292894280762565},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.05699481865284974},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.011111111111111112},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.014336917562724014},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.030534351145038167},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.012320328542094456},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.008064516129032258},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.02531645569620253},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"coverage.html":{"ref":"coverage.html","tf":0.007009345794392523}},"s":{"docs":{},":":{"1":{"1":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}},"7":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}},"8":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}},"docs":{}},"2":{"0":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}},"1":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}},"2":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}},"5":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}},"6":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}},"9":{"docs":{"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}},"docs":{}},"4":{"0":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771}}},"2":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771}}},"9":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771}}},"docs":{}},"6":{"9":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771}}},"docs":{}},"7":{"6":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771}}},"docs":{}},"8":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}},"9":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105}}},"docs":{}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.01171875},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.015267175572519083},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.006802721088435374},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.015555555555555555},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.013550135501355014},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.017921146953405017},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":5.016129032258065},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}},"e":{"docs":{},"f":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008438818565400843},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.006920415224913495},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.03119584055459272},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.008213552361396304},"interfaces/ViewData.html":{"ref":"interfaces/ViewData.html","tf":0.03225806451612903},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":5.0042194092827},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.008438818565400843},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.01098901098901099},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":5.0186335403726705},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.01642710472279261},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.011764705882352941},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.027472527472527472},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.031055900621118012},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":5.023529411764706},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.007633587786259542},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00823045267489712},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.015267175572519083},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.010666666666666666}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005199306759098787}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}},"a":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036}}}}}},"c":{"docs":{},"e":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.008333333333333333},"classes/ApiMapper.html":{"ref":"classes/ApiMapper.html","tf":0.0051813471502590676}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00392156862745098},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.01440329218106996},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/MockUrlNormalizer.html":{"ref":"injectables/MockUrlNormalizer.html","tf":0.02631578947368421},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.015873015873015872},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.008665511265164644},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.012875536480686695},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.008771929824561403},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.02710027100271003},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.047619047619047616},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.015267175572519083},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.06315789473684211},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.011560693641618497},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.012658227848101266},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.022222222222222223},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.0782122905027933}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005199306759098787},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005199306759098787}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"components/DefaultEmptyComponent.html":{"ref":"components/DefaultEmptyComponent.html","tf":0.058823529411764705},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.672253258845437},"coverage.html":{"ref":"coverage.html","tf":0.03271028037383177}}}},"n":{"docs":{},"t":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.01568627450980392},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.006172839506172839},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.015267175572519083},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.006036217303822937},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0045351473922902496},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.005199306759098787},"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.013157894736842105},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.004291845493562232},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.005420054200542005},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.007168458781362007},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.005291005291005291},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.009216589861751152}}}}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030303030303030304},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666}}}}}},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0034662045060658577},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.022900763358778626},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.03164556962025317},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.025396825396825397}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.006349206349206349},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}},"'":{"docs":{},"*":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},".":{"docs":{},"j":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}},"s":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"*":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.003816793893129771},"changelog.html":{"ref":"changelog.html","tf":0.004545454545454545},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.00390625},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceViewDirective.html":{"ref":"directives/ResourceViewDirective.html","tf":0.003816793893129771},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceViewContext.html":{"ref":"classes/ResourceViewContext.html","tf":0.0035842293906810036},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00411522633744856},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.020202020202020204}}}}}}},"n":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.005333333333333333}}}},"y":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.002109704641350211},"directives/ResourceContextDirective.html":{"ref":"directives/ResourceContextDirective.html","tf":0.0078125},"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.018518518518518517},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.01084010840108401},"interfaces/LocationReference.html":{"ref":"interfaces/LocationReference.html","tf":0.010869565217391304},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.002109704641350211}}},"n":{"docs":{},"t":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.006493506493506494},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.004024144869215292},"classes/SortedArray.html":{"ref":"classes/SortedArray.html","tf":0.010582010582010581}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}},"+":{"docs":{},":":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}}}}}}}}},")":{"docs":{},"?":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"(":{"docs":{},"[":{"docs":{},"^":{"docs":{},"/":{"docs":{},"]":{"docs":{},"+":{"docs":{},"(":{"docs":{},"?":{"docs":{},":":{"docs":{},":":{"docs":{},"\\":{"docs":{},"d":{"docs":{"interfaces/LocationInfo.html":{"ref":"interfaces/LocationInfo.html","tf":0.008},"interfaces/UrlInfo.html":{"ref":"interfaces/UrlInfo.html","tf":0.009174311926605505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.019417475728155338},"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422}}}}},"a":{"docs":{},"k":{"docs":{},"i":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726}}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"components/DefaultErrorComponent.html":{"ref":"components/DefaultErrorComponent.html","tf":0.012987012987012988},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.010380622837370242},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.013333333333333334},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.006329113924050633}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"directives/ResourceDataOfDirective.html":{"ref":"directives/ResourceDataOfDirective.html","tf":0.00205761316872428},"injectables/ResourceData.html":{"ref":"injectables/ResourceData.html","tf":0.0022675736961451248},"classes/ResourceDataOfContext.html":{"ref":"classes/ResourceDataOfContext.html","tf":0.0027100271002710027}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/HeaderViewTypeStrategy.html":{"ref":"injectables/HeaderViewTypeStrategy.html","tf":0.005494505494505495},"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0034602076124567475},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0044444444444444444},"classes/ViewTypeStrategy.html":{"ref":"classes/ViewTypeStrategy.html","tf":0.006211180124223602},"interfaces/ViewTypeResponse.html":{"ref":"interfaces/ViewTypeResponse.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SingleApiMapper.html":{"ref":"injectables/SingleApiMapper.html","tf":0.004166666666666667}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.009216589861751152},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.007017543859649123},"interfaces/ReadOnlyHeaders.html":{"ref":"interfaces/ReadOnlyHeaders.html","tf":0.028901734104046242},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}},"e":{"docs":{},"p":{"docs":{"classes/NavigableRef.html":{"ref":"classes/NavigableRef.html","tf":0.008583690987124463},"classes/NavigableRefImpl.html":{"ref":"classes/NavigableRefImpl.html","tf":0.0043859649122807015},"interfaces/Navigable.html":{"ref":"interfaces/Navigable.html","tf":0.004608294930875576}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/Link.html":{"ref":"interfaces/Link.html","tf":0.0035087719298245615}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/HttpResourceClient.html":{"ref":"injectables/HttpResourceClient.html","tf":0.0017301038062283738},"classes/ResourceClient.html":{"ref":"classes/ResourceClient.html","tf":0.0022222222222222222},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0022727272727272726},"directives/ResourceLinkWithHrefDirective.html":{"ref":"directives/ResourceLinkWithHrefDirective.html","tf":0.0026666666666666666},"injectables/ApiLocation.html":{"ref":"injectables/ApiLocation.html","tf":0.002012072434607646}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.010101010101010102}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/ResourceRouterModule.html":{"ref":"modules/ResourceRouterModule.html","tf":0.004219409282700422},"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.01733102253032929},"interfaces/ResourceRouterOptions.html":{"ref":"interfaces/ResourceRouterOptions.html","tf":0.004106776180698152},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.0189873417721519},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0031746031746031746}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"components/ResourceOutletComponent.html":{"ref":"components/ResourceOutletComponent.html","tf":0.00784313725490196},"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/ResourceLinkDirective.html":{"ref":"directives/ResourceLinkDirective.html","tf":0.004608294930875576},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.00558659217877095}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.019736842105263157}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"classes/ActivatedView.html":{"ref":"classes/ActivatedView.html","tf":0.006578947368421052}}}}}}}}}}}}}}}},"x":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288},"interfaces/Data.html":{"ref":"interfaces/Data.html","tf":0.007633587786259542},"interfaces/ViewDef.html":{"ref":"interfaces/ViewDef.html","tf":0.004219409282700422}},"\\":{"docs":{},"d":{"docs":{},"?":{"docs":{},"*":{"docs":{},"]":{"docs":{},"/":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/ResourceViewRegistry.html":{"ref":"injectables/ResourceViewRegistry.html","tf":0.0017331022530329288}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.01675977653631285},"coverage.html":{"ref":"coverage.html","tf":0.002336448598130841}}}}}}}}}}}}}},"length":5288},"corpusTokens":["0","0..1","0.0","0.333","0.5","0.666","0/1","0/2","0/3","0/4","0/6","0/8","0/9","00","02","04","08","1","1.0","1.0.0","1.html#object","1/1","1/10","1/2","1/3","1/4","1/5","1/6","1/7","1/8","10","100","11","12","13","14","15","15998]{@link","16","17","2","2.1","2.3","2/2","2/5","20","200","2017","2018","2019","204","21","22","23","25","26","27","28","2??').foreach(statu","2xx","3","3/3","3/4","3/5","30","31","33","4.0.0","4.1.0","4.1.1","4.x","4/4","40","5","5.0.0","5.0.1","5.x","5/5","5/7","50","6","60","7","7.0.0","7.x","71","75","8","9","9/9","99","999","_data","_data.asobserv","_length","_self","_top","a.length","a[resourcelink","a[resourcelink]'},{'nam","aaa","abov","absolut","abstract","accept","access","accessor","accompani","accord","accordingli","account","action","activ","activatedview","activatedview(target","activatedview.navigation.go(activatedview.snapshot.url","actual","actual_compon","ad","adapt","add","address","addsingleview(config","addview","addview(config","addviews(config","against","aim","alia","alias","allow","along","alpha.12","alreadi","altern","alway","analyz","analyze_for_entry_compon","and/or","angular","angular/cli","angular/common","angular/common/http","angular/cor","angular/platform","anoth","anyth","aot","api","api/foobar","apilink","apiloc","apimapp","apiurl","app","app.compon","app_api_prefix","app_base_href","appcompon","append","applic","application/vnd.company.error","application/x.sampl","argument","aris","around","array","array.isarray(config","array.isarray(config.statu","array.isarray(config.typ","array.isarray(valu","array.length","array.t","array.ts:17","array.ts:7","array.ts:9","array[pivot","arraybuff","associ","assum","asterisk","author","automat","avail","avoid","awar","b","back","backend","bang","base","base.pathrel","basehref","baseurlnorm","be","befor","behavior","behaviorsubject","behaviorsubject>(initialdata","behaviorsubject>(this.data","better","between","bind","bindabl","bindurl","bindurl(sourc","bindurl(valu","bit","blob","bodi","body|json","boolean","bootstrap","bootstrapit","both","boundari","branch","break","broken","brows","browser","browserapiurl","browsermodul","browserurlnorm","bug","buggi","build","buildapp","buildpublish","built","bump","bundl","button","bystatu","c","calcul","call","cancel","case","cast","catcherror","catcherror(err","chang","changelog","charact","charg","check","claim","class","click","click(button","client","client.t","client.ts:102","client.ts:128","client.ts:27","client.ts:35","client.ts:37","client.ts:38","client.ts:39","client.ts:43","client.ts:53","client.ts:61","close","cluster_resourceroutermodul","cluster_resourceroutermodule_declar","cluster_resourceroutermodule_export","co","code","cold","collect","combin","commit","common","commonmodul","companion","compar","comparer(el","compil","complet","complex","complic","compon","component_templ","componentfactoryresolv","componentref","components/default","componenttyp","condit","config","config.compon","config.foreach(this.addview","config.qu","config.responsetyp","config.statu","config.status.foreach(statu","config.typ","config.type.find(t","configur","configure(opt","conform","conjunct","connect","consid","consist","console.assert(respons","console.error('rout","const","constant","construct","constructor","constructor(@inject(resource_view","constructor(@opt","constructor(@self","constructor(apimapp","constructor(cli","constructor(compar","constructor(compon","constructor(currentnavig","constructor(navig","constructor(platformstrategi","constructor(priv","constructor(publ","constructor(resourc","constructor(statu","constructor(strategi","constructor(urlnorm","constructor(view","constructor(viewcontain","consum","contain","content","contenttyp","context","context.t","context.ts:54","context.ts:57","contract","conveni","convent","convert","copi","copyright","correctli","correspond","count","counterpart","coverag","creat","creation","cross","ctrl","ctrlkey","current","currentnavig","currenturl","custom","d*[?x]*\\**$/.test(statu","damag","data","data.bodi","data.statu","data.statustext","data.t","data.target","data.ts:10","data.ts:11","data.ts:12","data.ts:13","data.ts:14","data.ts:15","data.ts:21","data.ts:22","data.ts:28","data.ts:34","data.ts:36","data.ts:37","data.ts:66","data.ts:70","data.ts:74","data.ts:78","data.ts:8","data.ts:9","data.ts:91","data.typ","data.url","datachang","datachangesourc","datasourc","date","deal","debuglog","debuglog().warn('when","debuglog().warn(`when","declar","decor","decoupl","default","defaultcompar","defaultcomparer(a","defaultemptycompon","defaulterrorcompon","defin","definit","definition.t","definition.ts:102","definition.ts:19","definition.ts:29","definition.ts:4","definition.ts:50","definition.ts:73","definition.ts:83","definition.ts:90","definition.ts:95","demo","dep","depend","deprec","dereferenc","describ","descript","despit","destroy","detail","determin","determinist","develop","diagnost","differ","digit","direct","directive({selector","directives/resourc","directli","directori","disabl","disjunct","display","dist","dist/angular","distribut","doc","document","doesn't","dom","domain","don't","donavig","donavigate(path","draft]{@link","drive","dummi","duplic","dure","dvorak","e.g","easi","easili","element","embed","emit","empti","empty.compon","empty.component.t","emptyview","enabl","end","endpoint","endswithslash","engin","equal","err","err.error","err.error.messag","err.head","err.messag","err.statu","err.statustext","err.url","error","error('invalid","error('path","error('url","error('wildcard","error(`cannot","error(`no","error(`unsupport","error(`wrong","error.compon","error.component.html","error.component.t","error.component.ts:42","error.component.ts:44","error.component.ts:47","error.component.ts:51","error.component.ts:55","errorcompon","errorev","errorview","escaperegexppattern","escaperegexppattern(","etc","evalu","evaluator.t","event","event.button","event.ctrlkey","event.metakey","eventemitt","everyth","exact","exactli","exampl","examplemodul","except","exclud","exist","expand","expect","explicit","explicitli","export","express","extend","extern","extract","extracttyp","extracttype(respons","factori","factoryprovid","fail","failur","fallback","fals","favour","featur","fetch","fetch(uri","fetch(url","field","file","final","find","fire","first","fit","fix","flag","flatten","folder","follow","forbidden","forc","forget","form","format","fortypes(view","forwardref","found","free","full","function","furnish","further","futur","gener","get","get$implicit","get(nam","get(url","getal","getall(nam","getbasehref","getcomponenttyp","getdata","getdom().getbasehref","gethtml","getlength","getload","getloc","getnavig","getobject","getsnapshot","getsrc","geturl","getviewsbystatus(statu","ghpage","git","github","given","global","go","go(url","grant","group","group.statu","group.types.push","guarante","gulp","hal","handl","handleerror","handleerror(err","happen","hard","has(nam","hash","hashlocationstrategi","hashlocationstrategy(platformlocationstrategi","hateoa","have","head","header","headernam","headers.t","headers.ts:11","headers.ts:16","headers.ts:21","headers.ts:26","headerviewtypestrategi","helper","here","herebi","hero","hide","hint","holder","home","honor","host","hostbind","hostlisten","hostlistener('click","href","href.t","href.ts:12","href.ts:13","href.ts:14","href.ts:15","href.ts:16","href.ts:17","href.ts:26","href.ts:56","hreflang","html","html5","http","http://example.com/my/context/api","httpclient","httperrorrespons","httpheader","httpresourcecli","httprespons","https://github.com/angular/angular/issues/15998","https://github.com/mdvorak/resourc","https://tools.ietf.org/html/draft","https://www.typescriptlang.org/docs/handbook/releas","httpxhrbackend","human","hyperlink","i'm","i.","id","ident","identifi","ignor","imag","immut","implement","impli","implicit","import","improv","includ","inconsist","increment","index","indic","info","info.host","info.pathnam","info.protocol","inform","init","init(protocol","initi","initialdata","inject","inject(app_api_prefix","inject(app_base_href","inject(docu","inject(top_level_navig","inject(type_quality_evalu","injectiontoken","injectiontoken('app_api_prefix","injectiontoken('resource_router_configur","injectiontoken('resource_view","injectiontoken('top_level_navig","injectiontoken('type_quality_evalu","injector","injector.create({provid","input","insert","insertlocation(valu","insid","insignific","instal","instanc","instanceof","instead","integ","intend","intention","interfac","intern","internalbasehref","internalhost","internalpathnam","internalprotocol","invalid","invok","islocationrefer","islocationreference(obj","islocationreference(valu","isnavig","isnavigable(obj","isnavigable(target","isnavigable(valu","isnavigable(value.target","issu","it'","itself","join","jsmethodcanbestat","json","json.stringify(config","jsunusedglobalsymbol","keep","kelli","key","kind","know","known","l","label","languag","later","latest","layout","lead","left","legend","length","level","liabil","liabl","librari","librarynpm","licens","limit","link","link.t","link.ts:12","link.ts:17","link.ts:21","link.ts:22","link.ts:25","link.ts:29","link.ts:37","link.ts:41","link.ts:8","linux","list","listen","live","load","load(url","loaddataev","loadingvalu","local","localhost","locat","location#path","location#prepareexternalurl","location.path","location.t","location.ts:101","location.ts:109","location.ts:16","location.ts:18","location.ts:37","location.ts:49","location.ts:76","location.ts:85","locationfor(el","locationinfo","locationrefer","locationreference#url","locationstrategi","log","log.t","logic","long","longer","look","low","maintain","make","makenavigableref","makenavigableref(valu","malform","mandatori","mani","manual","map","map(respons","mapapitoview","mapapitoview(url","maplocationurltoapi","mapper","mapper.t","mapper.ts:15","mapper.ts:22","mapper.ts:23","mapper.ts:27","mapper.ts:34","mapper.ts:48","mapviewtoapi","mapviewtoapi(path","mark","markdown","match","match(typ","match[1","match[2","match[3","math.floor((start","mean","mechan","media","media_type_norm","media_type_router_empti","media_type_router_error","media_type_router_load","memori","menu","merchant","merg","messag","metadata","metakey","method","michal","migrat","mimetyp","miscellan","mislead","miss","mit","mock","mockurlnorm","mockviewdata(url","mode","model","modifi","modul","module.t","module.ts:54","module.ts:61","module.ts:67","module.ts:73","modulewithprovid","more","move","multi","multipl","my/context/api","myapierrorcompon","mydata","mygenericerrorcompon","n","n.protocol}//${n.host}${n.pathname}${pathrel","nad","name","namespac","navig","navigableref","navigablerefimpl","navigablerefimpl(valu","navigationhandl","navigationref","necessari","need","nest","network","never","new","newer","newvalidationerror(config","next","next(valu","nextid","ng","ngmodul","ngonchang","ngonchanges(chang","ngondestroy","ngoninit","nice","no_head","nodej","noinspect","non","noninfring","noop_navig","normal","normalize(url","normalizedstatu","normalizemediatyp","normalizemediatype(contenttyp","normalizemediatype(mimetyp","normalizer.t","normalizer.ts:10","normalizer.ts:12","normalizer.ts:18","normalizer.ts:21","normalizer.ts:25","normalizer.ts:28","normalizer.ts:56","normalizer.ts:63","normalizer.ts:67","normalizer.ts:7","normalizer.ts:75","normalizer.ts:8","normalizer.ts:80","normalizer.ts:9","normalizestatus(statu","normalizestatusexpress","normalizestatusexpression(pattern","not(a)[resourcelink","not(a)[resourcelink]'},{'nam","note","notes/typescript","noth","notic","now","nowildcard","npm","null","number","number.min_safe_integ","obj","obj.go","obj.urlchang","object","object'","object.freeze(config","observ","obtain","of.t","of.ts:112","of.ts:115","of.ts:117","of.ts:149","of.ts:26","of.ts:37","of.ts:47","of.ts:55","ok","old","omit","on","onchang","onclick","onclick(button","ondestroy","oninit","onlocationchang","op","open","oper","option","options.prefix","options.resourcecli","options.usehash","options.viewtypestrategi","order","origin","other","otherwis","out","outlet","outlet.t","outlet.ts:32","outlet.ts:33","outlet.ts:35","outlet.ts:38","outlet.ts:42","outlet.ts:46","outlet.ts:51","output","overrid","overridden","overview","packagr","pad","page","param","paramet","parent","pars","parse(bodi","parsedviewdef","parser","parseurl","parseurl(this.getbasehref","parseurl(url","particular","pass","passednpm","path","path).replac","path.replac","pathlocationstrategi","pathlocationstrategy(platformlocationstrategi","pathnam","pathrel","pattern","pattern.endswith","pattern.length","pattern.replace(/\\*/g","pattern.replace(/x/g","perform","permiss","permit","permut","person","phase","pipe(catcherror(err","pipe(switchmap(url","pivot","platformloc","platformlocationstrategi","platformstrategi","pleas","pointless","portion","posit","possibl","pr","prefix","prefix='http://.../v1","prepar","prepareexternalurl","prepareexternalurl(url","prepend","presenc","present","press","prevent","previou","primari","principl","print","privat","probabl","problem","produc","product","profil","programmat","propag","proper","properli","properti","protect","protocol","provid","providelocationstrategi","providelocationstrategy(platformlocationstrategi","public","publish","pure","purpos","push","push(valu","qualiti","rang","rare","ration","re","reactiv","read","readabl","readm","readonli","readonlyhead","receiv","recommend","recurs","redirect","refactor","refer","reference.t","reference.ts:4","reference.ts:5","regardless","regex","regex.t","regexp","regist","registr","registri","registry.t","registry.ts:103","registry.ts:121","registry.ts:45","registry.ts:59","registry.ts:63","registry.ts:92","regular","rel","relat","releas","releasenpm","reli","reload","remain","remov","renam","render","replac","repositori","represent","request","requesturl","requir","reset","resolv","resolve(requesturl","resort","resourc","resource_router_configur","resource_view","resourcecli","resourcecontext","resourcecontext(valu","resourcecontext]'},{'nam","resourcecontextdirect","resourcecontextnavigableref","resourcecontextnavigablereffactori","resourcecontextnavigablereffactory(self","resourcedata","resourcedata#data","resourcedata#load","resourcedata#url","resourcedata][resourcedataof","resourcedata][resourcedataof]'},{'nam","resourcedatanavigableref","resourcedataof","resourcedataof(valu","resourcedataofcontext","resourcedataofcontext(resourc","resourcedataofdirect","resourcelink","resourcelinkdirect","resourcelinkwithhrefdirect","resourceoutletcompon","resourceroutermodul","resourceroutermodule.configur","resourceroutermodule.fortyp","resourcerouteropt","resourceviewcontext","resourceviewcontext(compon","resourceviewdirect","resourceviewregistri","respons","response.head","response.headers.get(this.headernam","response.statu","response.statustext","response.url","responsetyp","responsetype:'text","rest","restrict","result","rethrow","retriev","return","reus","rfc3986","rfc5988","right","root","rough","rout","router","router/empti","router/error","router/load","router/pull/24/commit","rule","run","runtim","rxj","rxjs/internal/observable/scalar","rxjs/internal/observable/throwerror","rxjs/oper","s","s.add(target.urlchange.subscribe(url","s.statu","safe","same","sampl","sample.compon","samplecompon","saniti","savedocument","scalar","scalar(err","scalar(new","scalar(this.mockviewdata","scalar(this.mockviewdata(url","script","second","secondari","see","seen","select","selector","self","sell","semant","send","sent","serv","server","set","setresourcecontext(valu","setresourcedataof(valu","setsrc(valu","setup","seturl(url","seturl(valu","sever","shall","share","show","side","similar","simpl","simplechang","simpletypequalityevalu","simpletypequalityevaluator(typ","singl","singleapimapp","site","skipself","slash","snapshot","snippet","softwar","someth","sort","sortedarray","sortedarray(qualitycompar","sourc","source.url","source.urlchange.subscribe(url","sourcesubscript","special","specif","spread","src","src(valu","src/lib/package.json","src/lib/src/activ","src/lib/src/api","src/lib/src/components/default","src/lib/src/directives/resourc","src/lib/src/hal","src/lib/src/loc","src/lib/src/navigable.t","src/lib/src/navigable.ts:29","src/lib/src/navigable.ts:32","src/lib/src/navigable.ts:34","src/lib/src/navigable.ts:6","src/lib/src/qual","src/lib/src/read","src/lib/src/resourc","src/lib/src/singl","src/lib/src/system","src/lib/src/url","src/lib/src/utils/debug","src/lib/src/utils/http","src/lib/src/utils/norm","src/lib/src/utils/pars","src/lib/src/utils/sort","src/lib/src/utils/wildcard","src/lib/src/view","src/lib/testing/src/mock","srcchang","start","starttodo","state","statement","static","staticprovid","statu","status.length","statusexp","statusqualityevalu","statusqualityevaluator(statu","statusstr","statustext","statustyp","still","store","strategi","strategy.t","strategy.ts:12","strategy.ts:16","strategy.ts:20","strategy.ts:32","strategy.ts:41","strategy.ts:43","strategy.ts:49","strictnullcheck","string","stringtojson","stringtojson(bodi","strip","structur","subject","sublicens","subscrib","subscribe(data","subscript","subscription.empti","subset","substanti","substr(0","subtyp","success","such","suffix","super","support","sure","suspiciousinstanceofguard","svg","swallow","switch","switchmap","symlink","syntax","system","t","tabl","tablesort(document.getelementbyid('coverag","tag","take","target","target.go(this.resourcelink","target.url","target=\"_self","target_self","target_top","targettyp","templat","templateref","templateurl","test","text","text/html","thank","therefor","thing","this._data.getvalu","this._length","this.addsingleview(config","this.addview(config","this.addviews(view","this.apimapper.mapapitoview(url","this.apimapper.mapapitoview(viewurl","this.apimapper.mapviewtoapi(path","this.array","this.array.splice(i","this.bodi","this.client","this.compar","this.component.componenttyp","this.context","this.curr","this.current.component.destroy","this.current.componenttyp","this.current.next(this.data","this.current.target","this.currentnavig","this.currentnavigable.navig","this.data","this.data.bodi","this.data.config","this.data.config.compon","this.data.next(valu","this.data.pipe(map(data","this.data.target","this.data.typ","this.datachang","this.datachangesourc","this.datachangesource.asobserv","this.datachangesource.getvalu","this.datachangesource.next(data","this.destroy","this.document.loc","this.donavigate(path","this.endswithslash","this.extern","this.get(uri).pip","this.getloc","this.getviewsbystatus(normalizedstatu","this.handleerror(err","this.href","this.http.get(url","this.internalbasehref","this.internalhost","this.internalpathnam","this.internalprotocol","this.load","this.load(url","this.loaddataev","this.loaddataevent.next(this.urlvalu","this.loaddataevent.next(valu","this.loadingvalu","this.location.go(path","this.location.iscurrentpathequalto(path","this.location.normalize(url","this.location.path","this.location.prepareexternalurl(url","this.location.prepareexternalurl(viewurl","this.location.subscrib","this.maplocationurltoapi","this.mockviewdata","this.navig","this.navigation.go(this.snapshot.url","this.normalizemediatype(contenttyp","this.onlocationchang","this.parse(response.bodi","this.platformstrategy.getbasehref","this.prefix","this.prefix.endswith","this.prefix.length","this.prefix.startswith(url","this.qual","this.registry.match(typ","this.rend","this.resolve(uri","this.resolver.resolvecomponentfactory(this.data.config.compon","this.resourc","this.resource.data","this.resource.load","this.resource.url","this.resource.urlchange.subscribe((valu","this.resourcelink","this.resourceviewregistry.match(this.typ","this.sourcesubscript","this.sourcesubscription.unsubscrib","this.srcchange.emit(valu","this.statu","this.statusexp","this.strategy.extracttype(respons","this.subscript","this.subscription.unsubscrib","this.target","this.toplevelnavig","this.typ","this.typequalityevalu","this.typequalityevaluator(typ","this.unsupport","this.urlchang","this.urlchange.emit(valu","this.urlchangesource.asobserv","this.urlchangesource.next(this.urlvalu","this.urlchangesource.next(url","this.urlchangesubject.asobserv","this.urlchangesubject.next(this.urlvalu","this.urlnormalizer.normalize(url","this.urlsubscript","this.urlsubscription.unsubscrib","this.urlvalu","this.validateviewdefinition(config","this.view.data.subscribe(data","this.viewcontainer.createcomponent(factori","this.viewcontainer.createembeddedview(this.templateref","this.viewcontainer.injector","this.viewcontainer.length","this.viewsbystatus.array","this.viewsbystatus.array.find(","this.viewsbystatus.push(bystatu","those","through","throw","throwerror","throwerror(err","time","titl","toarray(config.statu","toarray(config.type).foreach(typ","todo","token","top","top_level_navig","toplevel","toplevel.navig","toplevelnavig","toplevelnavigablefactori","toplevelnavigablefactory(curr","toplevelnavigableref","tort","tour","trail","travi","treat","tree","true","ts","two","type","type.t","type_quality_evalu","typealias","typedoc","typeexp","typeof","typequalityevalu","typerefer","types.t","typescript","typic","umd","un","unabl","unavail","undefin","under","underli","understand","unexpect","unknown","unless","unsupport","until","unusu","updat","upgrad","uri","url","url(url","url(valu","url.length","url.match(url_pattern","url.startswith(this.prefix","url.substring(this.prefix.length).replac","url.t","url.ts:10","url.ts:4","url.ts:5","url.ts:6","url='http://.../v1","url[0","url_pattern","urlchang","urlchangesourc","urlchangesubject","urlinfo","urlinfo.pathnam","urlinfo.pathrel","urlinfo.protocol","urlnorm","urlnormalizer.normalize(prefix","urlsubscript","urlvalu","us","usag","useclass","usefactori","usehash","usehash}=tru","useless","user","usevalu","usingnpm","usual","util","utils.t","utils/debug","utils/http","utils/norm","utils/pars","utils/sort","utils/wildcard","v.typeexp.test(typ","v0.0.0","v4.1.0","v4.x","v5.x","valid","validatestatus(config","validatestatusexpression(config","validatetype(config","validateviewdefinit","validateviewdefinition(config","valu","value.target","var","variabl","variant","variou","veri","verifi","verify/set","versa","version","via","vice","view","view.config","view.data.subscribe(data","view.t","view.ts:11","view.ts:17","view.ts:18","view.ts:20","view.ts:21","view.ts:22","view.ts:25","view.ts:26","view.ts:29","view.ts:40","view.ts:42","view.ts:49","view.ts:69","view.ts:76","view.ts:8","view.ts:9","viewcontain","viewcontainerref","viewdata","viewdef","viewsbystatu","viewsbystatus(statu","viewtyperespons","viewtypestrategi","viewurl","visibl","void","w+:)?\\/\\/([^/]+(?::\\d","w+:/.test(path","want","warn","warranti","way","well","whenev","whether","whole","wildcard","wildcardtoregex","wildcardtoregex('*.js').test('foo.j","wildcardtoregex('*.js').test('foo.jsx","wildcardtoregex('image/*').test('image/png","wildcardtoregex('image/*').test('text/plain","wildcardtoregex(statu","wildcardtoregex(typ","wildcardtoregex(wildcard","window","within","without","won't","work","wrapper","wrong","x","x\\d?*]/.test(statu","xssi_prefix","zakir","zero","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nresource-router\n\nAngular routing engine that drive views by media types. It loads data itself, and by response Content-Type header\nit displays configured view. It is a replacement for original Angular Router (they cannot be used at the same time).\nThe aim of this library is to allow building of RESTful clients using Angular, following HATEOAS principle.\nSee CHANGELOG for release changes.\nInstallation\nnpm i angular-resource-router --saveDocumentation\nSee API documentation for latest released version.\nConfiguration\nSample snippet how is the router configured.\nIt is very similar to original router, but instead of registering paths, we are registering media types.\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ResourceRouterModule } from 'angular-resource-router';\nimport { AppComponent } from './app.component';\nimport { SampleComponent } from './sample.component';\nimport { ErrorComponent } from './error.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SampleComponent\n  ],\n  imports: [\n    BrowserModule,\n    ResourceRouterModule.configure({\n      prefix: 'api/'\n    }),\n    ResourceRouterModule.forTypes([\n      {\n        type: 'application/x.sample',\n        component: SampleComponent\n      },\n      {\n        status: '*',\n        type: '*',\n        component: ErrorComponent\n      }\n    ])\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class ExampleModule {\n}How It Works\nTODO\nDevelopment\nBefore development, run\nnpm run bootstrapit will create necessary symlinks for build to pass.\nNote: Under linux, you need to change global npm prefix to user accessible directory, see How to Prevent Permissions Errors.\nLibrary\nBuild of the library is performed with\nnpm run buildPublishing\nTo publish new library version to npm repository: \n\nVerify/set library version in src/lib/package.json\nMake sure there are release notes in the CHANGELOG.\nCommit and push changes, if any\nCreate a new release on GitHub,\nin the format v0.0.0 (or alternatively use git directly)\nCopy changelog markdown text to the release\nBuild the library and make sure all tests passednpm run bootstrap\nnpm run build\nVerify library is built correctly usingnpm run buildapp\nPublish the librarynpm publish dist/angular-resource-router\nPublish docs, if this is head releasenpm run ghpages\nMerge the branches if needed\n\nDemo app\nLocal development server can be started with\nnpm startTODO\nThings that are yet to be implemented\n\nComplete README\nComplete example\nSupport for resolve and data route configs\nSupport for outlet layouts, outlet resolve\nOutlet context data (name etc)\nNavigation within outlet\nHide element if empty link\nExternal navigation for unknown type\nBuild and publish docs\nTypedoc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceRouterModule\n\n\n\ncluster_ResourceRouterModule_declarations\n\n\n\ncluster_ResourceRouterModule_exports\n\n\n\n\nResourceOutletComponent\n\nResourceOutletComponent\n\n\n\nResourceRouterModule\n\nResourceRouterModule\n\nResourceRouterModule -->\n\nResourceOutletComponent->ResourceRouterModule\n\n\n\n\n\nResourceDataOfDirective\n\nResourceDataOfDirective\n\nResourceRouterModule -->\n\nResourceDataOfDirective->ResourceRouterModule\n\n\n\n\n\nResourceContextDirective\n\nResourceContextDirective\n\nResourceRouterModule -->\n\nResourceContextDirective->ResourceRouterModule\n\n\n\n\n\nResourceViewDirective\n\nResourceViewDirective\n\nResourceRouterModule -->\n\nResourceViewDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkDirective\n\nResourceLinkDirective\n\nResourceRouterModule -->\n\nResourceLinkDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkWithHrefDirective\n\nResourceLinkWithHrefDirective\n\nResourceRouterModule -->\n\nResourceLinkWithHrefDirective->ResourceRouterModule\n\n\n\n\n\nDefaultEmptyComponent\n\nDefaultEmptyComponent\n\nResourceRouterModule -->\n\nDefaultEmptyComponent->ResourceRouterModule\n\n\n\n\n\nDefaultErrorComponent\n\nDefaultErrorComponent\n\nResourceRouterModule -->\n\nDefaultErrorComponent->ResourceRouterModule\n\n\n\n\n\nResourceOutletComponent \n\nResourceOutletComponent \n\nResourceOutletComponent  -->\n\nResourceRouterModule->ResourceOutletComponent \n\n\n\n\n\nResourceDataOfDirective \n\nResourceDataOfDirective \n\nResourceDataOfDirective  -->\n\nResourceRouterModule->ResourceDataOfDirective \n\n\n\n\n\nResourceContextDirective \n\nResourceContextDirective \n\nResourceContextDirective  -->\n\nResourceRouterModule->ResourceContextDirective \n\n\n\n\n\nResourceViewDirective \n\nResourceViewDirective \n\nResourceViewDirective  -->\n\nResourceRouterModule->ResourceViewDirective \n\n\n\n\n\nResourceLinkDirective \n\nResourceLinkDirective \n\nResourceLinkDirective  -->\n\nResourceRouterModule->ResourceLinkDirective \n\n\n\n\n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective  -->\n\nResourceRouterModule->ResourceLinkWithHrefDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n7.0.0 (2019-02-25)\nUpdated to Angular 7.x. Thanks Zakir for PR.\n\n5.0.1 (2018-02-16)\nAdapted original Tour of Heroes Angular example to use this router. It is missing some features, but\ntake a look at Live Demo.\nFeatures\n\nAdded body: Observable to ActivatedView class, which is same as view.data.subscribe(data => ... = data.body);\nSingleApiMapper now supports host-relative urls (/api/foobar)\nExample app is now adapted Tour of Heroes from Angular. Uses mock in-memory API.\n#31 npm run buildapp now requires library to be built in dist folder, and tests whether it is AOT compilable\n\nBug Fixes\n\nFixed several Observable operator imports\n\n\n5.0.0 (2018-02-15)\nVersion for Angular 5.x, otherwise almost identical with 4.1.1.\nFeatures\n\nImproved DefaultErrorComponent, now it renders html as content instead of code\nDocs no longer contain internal components\nInternally improved config, tests now no longer needs library to be built\n\n\n4.1.1 (2018-02-14)\nResolved Issues\n\n#26 When HttpResourceClient request fails, error is swallowed\n#28 v4.1.0 is broken in production mode\n\nKnown Problems\n\nAs result of #26, error value might be now consumed in some cases.\nCreated #27 to address the issue.\n\n\n4.1.0 (2018-02-12)\nThis is breaking release, despite it breaks semantic versioning. Its for Angular v4.x applications to allow migration to new model and Angular v5.x\nChanged data used in components to reactive pattern, which allows reuse of created view components.\nBreaking Changes\n\nViewData is no longer available for injection, use ActivatedView instead:\n@Component(...)\nexport class SampleComponent implements OnInit {\n\n  public data: MyData;\n\n  constructor(public view: ActivatedView) {\n  }\n\n  ngOnInit(): void {\n    this.view.data.subscribe(data => this.data = data.body);\n  }\n}\nResourceData directive now needs to be accompanied by [resourceContext] directive:\n\n  \nOtherwise navigation (resourceLinks) won't work.\nNote that navigation internals might change in future releases.\n\nMany internal components were changed or moved. See https://github.com/mdvorak/resource-router/pull/24/commits for whole changelog\n\nFeatures\n\nAdded Link interface that describes HAL link.\nAdded ResourceData class that can be used to programmatically load and navigate resource.\nAdded [resourceContext] support directive which can provides navigation context for nested components.\nAdded debugLog that is used when angular does not run in developer mode. This feature will be extended in the future.\n\nResolved Issues\n\n#6 Change ApiLocation and NavigationHandler to reactive pattern\n#7 resource-data directive should provide loading property\n#9 Change ViewData to reactive pattern\n#21 Replace *resource-data directive with simple class\n#23 Broken travis build\n\n\n4.0.0 (2017-12-30)\nBumping to 4.x, to match Angular version.\nMoved from gulp custom build script to ng-packagr.\nBreaking Changes\n\nUpgraded to use HttpClient instead of deprecated Http\nRenamed route config key body to responseType\nresponseType now supports only json and text values - blob was buggy in old implementation \nand its use would be very rare\nRefactored ApiMapper component - there is now ApiUrl and ApiMapper abstract classes, \nwith default implementations.\nTypescript 2.3 (newer is not supported by Angular 4.x)\n\nBug Fixes\n\n#17 [resourceLink] should now properly handle external URLs (those that cannot be mapped to an API endpoint)\nVarious fixes with API prefixes and URL handling in general\n\n\n1.0.0-alpha.12 (2017-04-22)\nNow compiled with strictNullChecks: true typescript option, which leads to explicit \noptional function arguments.\n\nFinal UMD bundle now contains source maps\nExample is now built with @angular/cli\n\nBreaking Changes\n\nMoved to Angular 4.0.0\nMoved to Typescript 2.1+\nDeprecated apiLink directive in favour of new resourceLink (which conforms to Angular naming convention)\nRenamed ApiUrl class to ApiMapper (relates to #13)\n\nFeatures\n\nCompiled with strictNullChecks\nresourceLink is new directive, which fixes navigation problems, page reloads, and works both on  (with more features) and other tags like  (closes #15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Michal Dvorak, https://github.com/mdvorak/resource-router\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        ResourceRouterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceRouterModule.html":{"url":"modules/ResourceRouterModule.html","title":"module - ResourceRouterModule","body":"\n                   \n\n\n\n\n  Modules\n  ResourceRouterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceRouterModule\n\n\n\ncluster_ResourceRouterModule_declarations\n\n\n\ncluster_ResourceRouterModule_exports\n\n\n\n\nResourceOutletComponent\n\nResourceOutletComponent\n\n\n\nResourceRouterModule\n\nResourceRouterModule\n\nResourceRouterModule -->\n\nResourceOutletComponent->ResourceRouterModule\n\n\n\n\n\nResourceDataOfDirective\n\nResourceDataOfDirective\n\nResourceRouterModule -->\n\nResourceDataOfDirective->ResourceRouterModule\n\n\n\n\n\nResourceContextDirective\n\nResourceContextDirective\n\nResourceRouterModule -->\n\nResourceContextDirective->ResourceRouterModule\n\n\n\n\n\nResourceViewDirective\n\nResourceViewDirective\n\nResourceRouterModule -->\n\nResourceViewDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkDirective\n\nResourceLinkDirective\n\nResourceRouterModule -->\n\nResourceLinkDirective->ResourceRouterModule\n\n\n\n\n\nResourceLinkWithHrefDirective\n\nResourceLinkWithHrefDirective\n\nResourceRouterModule -->\n\nResourceLinkWithHrefDirective->ResourceRouterModule\n\n\n\n\n\nDefaultEmptyComponent\n\nDefaultEmptyComponent\n\nResourceRouterModule -->\n\nDefaultEmptyComponent->ResourceRouterModule\n\n\n\n\n\nDefaultErrorComponent\n\nDefaultErrorComponent\n\nResourceRouterModule -->\n\nDefaultErrorComponent->ResourceRouterModule\n\n\n\n\n\nResourceOutletComponent \n\nResourceOutletComponent \n\nResourceOutletComponent  -->\n\nResourceRouterModule->ResourceOutletComponent \n\n\n\n\n\nResourceDataOfDirective \n\nResourceDataOfDirective \n\nResourceDataOfDirective  -->\n\nResourceRouterModule->ResourceDataOfDirective \n\n\n\n\n\nResourceContextDirective \n\nResourceContextDirective \n\nResourceContextDirective  -->\n\nResourceRouterModule->ResourceContextDirective \n\n\n\n\n\nResourceViewDirective \n\nResourceViewDirective \n\nResourceViewDirective  -->\n\nResourceRouterModule->ResourceViewDirective \n\n\n\n\n\nResourceLinkDirective \n\nResourceLinkDirective \n\nResourceLinkDirective  -->\n\nResourceRouterModule->ResourceLinkDirective \n\n\n\n\n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective \n\nResourceLinkWithHrefDirective  -->\n\nResourceRouterModule->ResourceLinkWithHrefDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/src/resource-router-module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResourceOutletComponent\n                            \n                            \n                                ResourceDataOfDirective\n                            \n                            \n                                ResourceContextDirective\n                            \n                            \n                                ResourceViewDirective\n                            \n                            \n                                ResourceLinkDirective\n                            \n                            \n                                ResourceLinkWithHrefDirective\n                            \n                            \n                                DefaultEmptyComponent\n                            \n                            \n                                DefaultErrorComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResourceOutletComponent\n                            \n                            \n                                    ResourceDataOfDirective\n                            \n                            \n                                    ResourceContextDirective\n                            \n                            \n                                    ResourceViewDirective\n                            \n                            \n                                    ResourceLinkDirective\n                            \n                            \n                                    ResourceLinkWithHrefDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {\n  APP_BASE_HREF,\n  CommonModule,\n  HashLocationStrategy,\n  Location,\n  LocationStrategy,\n  PathLocationStrategy,\n  PlatformLocation\n} from '@angular/common';\nimport {\n  ANALYZE_FOR_ENTRY_COMPONENTS,\n  Inject,\n  InjectionToken,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  Type\n} from '@angular/core';\nimport { ApiMapper } from './api-mapper';\nimport { ApiLocation } from './api-location';\nimport { HeaderViewTypeStrategy, ViewTypeStrategy } from './view-type-strategy';\nimport { RESOURCE_VIEWS, ResourceViewRegistry } from './resource-view-registry';\nimport { ViewDef } from './view-definition';\nimport { ResourceLinkDirective } from './directives/resource-link';\nimport { ResourceLinkWithHrefDirective } from './directives/resource-link-with-href';\nimport { ResourceOutletComponent } from './directives/resource-outlet';\nimport { HttpResourceClient, ResourceClient } from './resource-client';\nimport { ResourceDataOfDirective } from './directives/resource-data-of';\nimport { ResourceContextDirective } from './directives/resource-context';\nimport { ResourceViewDirective } from './directives/resource-view';\nimport { DefaultEmptyComponent } from './components/default-empty.component';\nimport { DefaultErrorComponent } from './components/default-error.component';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING } from './system-media-types';\nimport { BrowserUrlNormalizer, UrlNormalizer } from './url-normalizer';\nimport { APP_API_PREFIX, SingleApiMapper } from './single-api-mapper';\n\n\nexport const RESOURCE_ROUTER_CONFIGURATION = new InjectionToken('RESOURCE_ROUTER_CONFIGURATION');\n\n\n/**\n * Set of global configuration options for {@link ResourceRouterModule}.\n */\nexport interface ResourceRouterOptions {\n  /**\n   * Prefix for the URL. Can be base-relative, host-relative or absolute.\n   * Always should however end with slash ('/').\n   *\n   * When using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\n   * That is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\n   *\n   * Another way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n   */\n  readonly prefix: string;\n\n  /**\n   * Enables hash-bang navigation mode. Default is HTML5 mode.\n   *\n   * Read {@link #prefix} details when setting to true.\n   */\n  readonly useHash?: boolean;\n\n  /**\n   * Changes implementation of {@link ViewTypeStrategy}.\n   * Default is {@link HeaderViewTypeStrategy} using `Content-Type` header.\n   */\n  readonly viewTypeStrategy?: Type;\n\n  /**\n   * Changes implementation of {@link ResourceClient}.\n   * Default is {@link HttpResourceClient}.\n   */\n  readonly resourceClient?: Type;\n}\n\n\n@NgModule({\n  declarations: [\n    ResourceOutletComponent,\n    ResourceDataOfDirective,\n    ResourceContextDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective,\n    DefaultEmptyComponent,\n    DefaultErrorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ResourceOutletComponent,\n    ResourceDataOfDirective,\n    ResourceContextDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective\n  ]\n})\nexport class ResourceRouterModule {\n\n  static configure(options: ResourceRouterOptions): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation,\n            [new Inject(APP_BASE_HREF), new Optional()],\n            RESOURCE_ROUTER_CONFIGURATION\n          ]\n        },\n        Location,\n        {\n          provide: UrlNormalizer,\n          useClass: BrowserUrlNormalizer\n        },\n        {\n          provide: ApiMapper,\n          useClass: SingleApiMapper\n        },\n        ApiLocation,\n        ResourceViewRegistry,\n        {\n          provide: APP_API_PREFIX,\n          useValue: options.prefix\n        },\n        {\n          provide: RESOURCE_ROUTER_CONFIGURATION,\n          useValue: options\n        },\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: [emptyView(), errorView()],\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: [DefaultErrorComponent, DefaultEmptyComponent],\n          multi: true\n        },\n        {\n          provide: ViewTypeStrategy,\n          useClass: options.viewTypeStrategy || HeaderViewTypeStrategy\n        },\n        {\n          provide: ResourceClient,\n          useClass: options.resourceClient || HttpResourceClient\n        }\n      ]\n    };\n  }\n\n  static forTypes(views: ViewDef[]): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: views,\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: views,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function provideLocationStrategy(platformLocationStrategy: PlatformLocation, baseHref: string, options: ResourceRouterOptions) {\n  return options.useHash\n    ? new HashLocationStrategy(platformLocationStrategy, baseHref)\n    : new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n * @internal\n */\nexport function emptyView(): ViewDef {\n  return {\n    component: DefaultEmptyComponent,\n    status: 204,\n    type: [MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING],\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n * @internal\n */\nexport function errorView(): ViewDef {\n  return {\n    component: DefaultErrorComponent,\n    status: '*',\n    type: '*',\n    responseType: 'text',\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEmptyComponent.html":{"url":"components/DefaultEmptyComponent.html","title":"component - DefaultEmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEmptyComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/components/default-empty.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  template: ''\n})\nexport class DefaultEmptyComponent {\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceContextDirective', 'selector': '[resourceContext]'},{'name': 'ResourceDataOfDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultErrorComponent.html":{"url":"components/DefaultErrorComponent.html","title":"component - DefaultErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultErrorComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/components/default-error.component.ts\n\n\n    \n        Description\n    \n    \n        Default view that is used when no other view has been matched.\nTo replace it, register own view with * type nad status (don't forget responseType):\nResourceRouterModule.forTypes([\n   {\n     component: MyGenericErrorComponent,\n     status: '*',\n     type: '*',\n     responseType: 'text'\n   }\n]);If you want to have custom view only for specific content type (e.g. specific defined error), register it as follows:\nResourceRouterModule.forTypes([\n   {\n     component: MyApiErrorComponent,\n     status: '*',\n     type: 'application/vnd.company.error',\n     responseType: 'json'\n   }\n]);Note: since responseType: 'json' is default, it can be omitted.\nBoth above views can co-exist - when well-defined error is received, MyApiErrorComponent is used,\nand for unexpected there is MyGenericErrorComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-error.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Accessors\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                object\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(view: ActivatedView)\n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:42\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      view\n                                                      \n                                                                ActivatedView\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:47\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                data\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            data:     ViewData\n    \n                        \n                    \n                        \n                            \n                                Type :     ViewData\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:42\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Public\n                                view\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            view:     ActivatedView\n    \n                        \n                    \n                        \n                            \n                                Type :     ActivatedView\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/lib/src/components/default-error.component.ts:44\n                                \n                            \n    \n    \n                \n            \n    \n\n    \n        \n            Accessors\n        \n            \n                \n                    \n                        \n                            \n                            html\n                        \n                    \n    \n                    \n                        \n                            gethtml()\n                        \n                    \n                                \n                                    \n                                        Defined in src/lib/src/components/default-error.component.ts:51\n                                    \n                                \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            object\n                        \n                    \n    \n                    \n                        \n                            getobject()\n                        \n                    \n                                \n                                    \n                                        Defined in src/lib/src/components/default-error.component.ts:55\n                                    \n                                \n    \n                \n            \n    \n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedView } from '../activated-view';\nimport { ViewData } from '../view-data';\n\n\n/**\n * Default view that is used when no other view has been matched.\n *\n * To replace it, register own view with `*` type nad status (don't forget `responseType`):\n * ```ts\n * ResourceRouterModule.forTypes([\n *   {\n *     component: MyGenericErrorComponent,\n *     status: '*',\n *     type: '*',\n *     responseType: 'text'\n *   }\n * ]);\n * ```\n *\n * If you want to have custom view only for specific content type (e.g. specific defined error), register it as follows:\n * ```ts\n * ResourceRouterModule.forTypes([\n *   {\n *     component: MyApiErrorComponent,\n *     status: '*',\n *     type: 'application/vnd.company.error',\n *     responseType: 'json'\n *   }\n * ]);\n * ```\n * Note: since `responseType: 'json'` is default, it can be omitted.\n *\n * Both above views can co-exist - when well-defined error is received, `MyApiErrorComponent` is used,\n * and for unexpected there is `MyGenericErrorComponent`.\n */\n@Component({\n  templateUrl: './default-error.component.html'\n})\nexport class DefaultErrorComponent implements OnInit {\n\n  data: ViewData;\n\n  constructor(public view: ActivatedView) {\n  }\n\n  ngOnInit(): void {\n    this.view.data.subscribe(data => this.data = data);\n  }\n\n  get html() {\n    return this.data.type === 'text/html';\n  }\n\n  get object() {\n    return typeof this.data.body === 'object';\n  }\n}\n\n    \n\n    \n        \n  Error loading a view {{data.type}}\n  from resource {{data.url}} with {{data.status}} {{data.statusText}}\n\n\n  \n  {{object ? (body|json) : body}}\n  \n  \n    \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Error loading a view {{data.type}}  from resource {{data.url}} with {{data.status}} {{data.statusText}}    {{object ? (body|json) : body}}              '\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceContextDirective', 'selector': '[resourceContext]'},{'name': 'ResourceDataOfDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceOutletComponent.html":{"url":"components/ResourceOutletComponent.html","title":"component - ResourceOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceOutletComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/lib/src/directives/resource-outlet.ts\n\n\n    \n        Description\n    \n    \n        Loads and renders data from given URL. Support navigation via _self.\nFor more complicated use-cases, see ResourceDataOfDirective.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                    \n                        ResourceData\n                        ()\n                        ()\n                    \n                \n            \n\n\n            \n                selector\n                resource-outlet\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Public\n                                resource\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                src\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                srcChange\n                            \n                        \n                    \n                \n                \n                    \n                        Accessors\n                    \n                \n                \n                    \n                        \n                            \n                                src\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(resource: ResourceData)\n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:33\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      resource\n                                                      \n                                                                ResourceData\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            src\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:51\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            srcChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:32\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnDestroy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnDestroy()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:42\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:38\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                    Readonly\n                                    Public\n                                resource\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            resource:     ResourceData\n    \n                        \n                    \n                        \n                            \n                                Type :     ResourceData\n    \n                            \n                        \n                        \n                            \n                                Decorators : Self\n                            \n                        \n                            \n                                \n                                    Defined in src/lib/src/directives/resource-outlet.ts:35\n                                \n                            \n    \n    \n                \n            \n    \n\n    \n        \n            Accessors\n        \n            \n                \n                    \n                        \n                            \n                            src\n                        \n                    \n    \n                    \n                        \n                            getsrc()\n                        \n                    \n                                \n                                    \n                                        Defined in src/lib/src/directives/resource-outlet.ts:46\n                                    \n                                \n    \n                    \n                        \n                            setsrc(value: string)\n                        \n                    \n                                \n                                    \n                                        Defined in src/lib/src/directives/resource-outlet.ts:51\n                                    \n                                \n                \n            \n    \n\n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, Self } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ResourceData, resourceDataNavigableRef } from '../resource-data';\nimport { topLevelNavigableRef } from '../navigable';\nimport { ResourceDataOfDirective } from './resource-data-of';\n\n\n/**\n * Loads and renders data from given URL. Support navigation via `_self`.\n *\n * For more complicated use-cases, see {@link ResourceDataOfDirective}.\n *\n * @example\n * \n * \n *\n * \n * \n */\n@Component({\n  selector: 'resource-outlet',\n  template: '',\n  providers: [\n    ResourceData,\n    resourceDataNavigableRef(),\n    topLevelNavigableRef()\n  ]\n})\nexport class ResourceOutletComponent implements OnInit, OnDestroy {\n\n  @Output()\n  public readonly srcChange = new EventEmitter();\n  private subscription = Subscription.EMPTY;\n\n  constructor(@Self() public readonly resource: ResourceData) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.resource.urlChange.subscribe((value: string) => this.srcChange.emit(value));\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  get src(): string {\n    return this.resource.url;\n  }\n\n  @Input()\n  set src(value: string) {\n    this.resource.url = value;\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DefaultEmptyComponent', 'selector': ''},{'name': 'DefaultErrorComponent', 'selector': ''},{'name': 'ResourceOutletComponent', 'selector': 'resource-outlet'}];\n    var DIRECTIVES = [{'name': 'ResourceContextDirective', 'selector': '[resourceContext]'},{'name': 'ResourceDataOfDirective', 'selector': '[resourceData][resourceDataOf]'},{'name': 'ResourceLinkDirective', 'selector': ':not(a)[resourceLink]'},{'name': 'ResourceLinkWithHrefDirective', 'selector': 'a[resourceLink]'},{'name': 'ResourceViewDirective', 'selector': 'resource-view'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceContextDirective.html":{"url":"directives/ResourceContextDirective.html","title":"directive - ResourceContextDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceContextDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-context.ts\n        \n\n            \n                Description\n            \n            \n                Directive that provides navigation boundaries for loaded resources (usually via ResourceData).\nIt should be also used as companion directive for ResourceDataOfDirective.\nExample\nNote that this is intentionally unusual setup, to show alternative ways for application to load data.\nFor more common use, see ResourceDataOfDirective example.\n\\@Component({\n   providers: [ResourceData]\n})\nexport class AppComponent {\n   constructor(@Self() public readonly resource: ResourceData) {\n   }\n}\n   Next\n   \nNote that in previous example, [resourceContext] directive could be replaced by programmatically\nproviding navigation context in the AppComponent, which is exactly what this directive does.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                ()\n                                ()\n                            \n                        \n                    \n\n                    \n                        selector\n                        [resourceContext]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        navigable\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceContext\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceContext\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resourceContext\n                                \n                                \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-context.ts:57\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        navigable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    navigable:     Navigable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Navigable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-context.ts:54\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    resourceContext\n                                \n                            \n            \n            \n                            \n                                \n                                    setresourceContext(value: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-context.ts:57\n                                            \n                                        \n                        \n                    \n            \n\n    \n\n\n    \n        import { Directive, FactoryProvider, forwardRef, Input, Self } from '@angular/core';\nimport { isNavigable, Navigable, NavigableRef, topLevelNavigableRef } from '../navigable';\nimport { ViewData } from '../view-data';\nimport { ResourceData } from '../resource-data';\nimport { ResourceDataOfDirective } from './resource-data-of';\n\n\n/**\n * @internal\n */\nconst NOOP_NAVIGABLE: Navigable = {\n  go() {\n  }\n};\n\n\n/**\n * Directive that provides navigation boundaries for loaded resources (usually via {@link ResourceData}).\n *\n * It should be also used as companion directive for {@link ResourceDataOfDirective}.\n *\n * ## Example\n * Note that this is intentionally unusual setup, to show alternative ways for application to load data.\n * For more common use, see {@link ResourceDataOfDirective} example.\n *\n * ```ts\n * \\@Component({\n *   providers: [ResourceData]\n * })\n * export class AppComponent {\n *   constructor(@Self() public readonly resource: ResourceData) {\n *   }\n * }\n * ```\n * ```html\n * \n *   Next\n *   \n * \n * ```\n *\n * Note that in previous example, `[resourceContext]` directive could be replaced by programmatically\n * providing navigation context in the `AppComponent`, which is exactly what this directive does.\n */\n@Directive({\n  selector: '[resourceContext]',\n  providers: [\n    resourceContextNavigableRef(),\n    topLevelNavigableRef()\n  ]\n})\nexport class ResourceContextDirective extends NavigableRef {\n\n  navigable: Navigable;\n\n  @Input()\n  set resourceContext(value: Navigable | ViewData | undefined) {\n    if (isNavigable(value)) {\n      // Directly navigable\n      this.navigable = value;\n    } else if (value && isNavigable(value.target)) {\n      // ViewData for easy use with resourceDataOf\n      this.navigable = value.target;\n    } else {\n      // Resort to no-op, since during loading phases, this actually might be undefined,\n      // and while it is useless at that state, it might be hard to work around it\n      this.navigable = NOOP_NAVIGABLE;\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function resourceContextNavigableRef(): FactoryProvider {\n  return {\n    provide: NavigableRef,\n    useFactory: resourceContextNavigableRefFactory,\n    deps: [\n      [forwardRef(() => ResourceContextDirective), new Self()]\n    ]\n  };\n}\n\n/**\n * @internal\n */\nexport function resourceContextNavigableRefFactory(self: ResourceContextDirective) {\n  return self;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceDataOfDirective.html":{"url":"directives/ResourceDataOfDirective.html","title":"directive - ResourceDataOfDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceDataOfDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-data-of.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive, that loads the data from given source, and allows custom data representation.\nThis is more complex variant of ResourceOutletComponent. It is needed when you need to show\nsome generic content along with viewed directive, which also depends on loaded data, like menu.\nNote that until issue [#15998]{@link https://github.com/angular/angular/issues/15998} is resolved,\nthis directive must be used in conjunction with {@link ResourceContextDirective}, as seen in the example.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \n\n\n\n\n\n\n\n\n\nBack\n\n\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                ResourceData\n                                ()\n                                ()\n                            \n                        \n                    \n\n                    \n                        selector\n                        [resourceData][resourceDataOf]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        resource\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceDataOf\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        urlChange\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceDataOf\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(resource: ResourceData, viewContainer: ViewContainerRef, templateRef: TemplateRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:115\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              resource\n                                                              \n                                                                        ResourceData\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              viewContainer\n                                                              \n                                                                        ViewContainerRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              templateRef\n                                                              \n                                                                        TemplateRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resourceDataOf\n                                \n                                \n                                    Location, from which are data loaded.\nThis might be either string (note that two-way binding is not directly supported for structural directives,\nsee {@link #urlChange}), or {@link LocationReference}, which provides automatic two-way binding\nfor the {@link LocationReference#url}.\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:149\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    urlChange\n                                \n                                \n                                    Emits event whenever underlying ResourceData changes.\nNote that there is no way to bind to this event when using asterisk (*resourceData=) syntax. This is Angular\nlimitation.\nExample:\n\n    \n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:112\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        resource\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    resource:     ResourceData\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceData\n            \n                                    \n                                \n                                \n                                    \n                                        Decorators : Self\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:117\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    resourceDataOf\n                                \n                            \n            \n            \n                            \n                                \n                                    setresourceDataOf(value: )\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data-of.ts:149\n                                            \n                                        \n                                \n                                    \n                                            Location, from which are data loaded.\n            This might be either string (note that two-way binding is not directly supported for structural directives,\n            see {@link #urlChange}), or {@link LocationReference}, which provides automatic two-way binding\n            for the {@link LocationReference#url}.\n            \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                Type\n                                                                Optional\n                                                                Description\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                  value\n                                                                  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n            \n\n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Self,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { ViewData } from '../view-data';\nimport { ResourceData, resourceDataNavigableRef } from '../resource-data';\nimport { Subscription } from 'rxjs';\nimport { bindUrl, isLocationReference, LocationReference } from '../location-reference';\nimport { ResourceOutletComponent } from './resource-outlet';\nimport { topLevelNavigableRef } from '../navigable';\nimport { ResourceContextDirective } from './resource-context';\n\n\n/**\n * Context for structural directive {@link ResourceDataOfDirective}.\n *\n * For examples see the directive docs.\n */\nexport class ResourceDataOfContext {\n  constructor(private readonly resource: ResourceData) {\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  /**\n   * Default variable value. Contains currently loaded data.\n   * Never undefined.\n   *\n   * Provides value from {@link ResourceData#data}.\n   */\n  get $implicit(): ViewData {\n    return this.resource.data;\n  }\n\n  /**\n   * Contains currently loaded data.\n   * Never undefined.\n   *\n   * Provides value from {@link ResourceData#data}.\n   */\n  get data(): ViewData {\n    return this.resource.data;\n  }\n\n  /**\n   * Loading flag for this directive.\n   * Provides value from {@link ResourceData#loading}.\n   */\n  get loading(): boolean {\n    return this.resource.loading;\n  }\n}\n\n\n/**\n * Structural directive, that loads the data from given source, and allows custom data representation.\n *\n * This is more complex variant of {@link ResourceOutletComponent}. It is needed when you need to show\n * some generic content along with viewed directive, which also depends on loaded data, like menu.\n *\n * Note that until issue [#15998]{@link https://github.com/angular/angular/issues/15998} is resolved,\n * this directive must be used in conjunction with {@link ResourceContextDirective}, as seen in the example.\n *\n * @example\n * \n * \n *   \n *   \n *\n *   \n *   \n *\n *   \n *   \n *     Back\n *   \n * \n */\n@Directive({\n  selector: '[resourceData][resourceDataOf]',\n  providers: [\n    ResourceData,\n    resourceDataNavigableRef(),\n    topLevelNavigableRef()\n  ]\n})\nexport class ResourceDataOfDirective implements OnInit, OnDestroy {\n\n  /**\n   * Emits event whenever underlying {@link ResourceData#url} changes.\n   *\n   * Note that there is no way to bind to this event when using asterisk (`*resourceData=`) syntax. This is Angular\n   * limitation.\n   *\n   * Example:\n   * ```html\n   *\n   *    \n   *\n   *```\n   */\n  @Output()\n  readonly urlChange = new EventEmitter();\n  private readonly context: ResourceDataOfContext;\n  private urlSubscription = Subscription.EMPTY;\n  private sourceSubscription = Subscription.EMPTY;\n\n  constructor(@Self() public readonly resource: ResourceData,\n              private readonly viewContainer: ViewContainerRef,\n              private readonly templateRef: TemplateRef) {\n    this.context = new ResourceDataOfContext(resource);\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.viewContainer.createEmbeddedView(this.templateRef, this.context);\n\n    // Note: We don't need listen to this.urlChange, since we don't store the url, we just propagate event\n    this.urlSubscription = this.resource.urlChange.subscribe((value: string) => this.urlChange.emit(value));\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this.urlSubscription.unsubscribe();\n    this.sourceSubscription.unsubscribe();\n  }\n\n  /**\n   * Location, from which are data loaded.\n   *\n   * This might be either string (note that two-way binding is not directly supported for structural directives,\n   * see {@link #urlChange}), or {@link LocationReference}, which provides automatic two-way binding\n   * for the {@link LocationReference#url}.\n   */\n  @Input()\n  set resourceDataOf(value: string | LocationReference | undefined) {\n    // Remove old source (if any)\n    this.sourceSubscription.unsubscribe();\n\n    if (typeof value === 'string') {\n      // Simple one-way URL bind\n      this.resource.url = value;\n    } else if (isLocationReference(value)) {\n      // Bind urls to new\n      this.sourceSubscription = bindUrl(value, this.resource);\n    } else {\n      // Reset\n      this.resource.url = '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceLinkDirective.html":{"url":"directives/ResourceLinkDirective.html","title":"directive - ResourceLinkDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceLinkDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-link.ts\n        \n\n            \n                Description\n            \n            \n                Note: This is limited version of resourceLink, which works on any element, but does not support\nopening new windows with CTRL key and external URLs.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        :not(a)[resourceLink]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        resourceLink\n                                    \n                                    \n                                        target\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        click\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(currentNavigable?: NavigableRef, topLevelNavigable?: NavigableRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              currentNavigable\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              topLevelNavigable\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    resourceLink\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:21\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    target\n                                \n                                \n                                      \n                                        Type:    TargetType\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:22\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            click()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link.ts:29\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Inject, Input, Optional } from '@angular/core';\nimport { isNavigable, Navigable, NavigableRef, TOP_LEVEL_NAVIGABLE } from '../navigable';\nimport { debugLog } from '../utils/debug-log';\n\n\nexport const TARGET_SELF = '_self';\nexport const TARGET_TOP = '_top';\n\nexport type TargetType = Navigable | typeof TARGET_SELF | typeof TARGET_TOP;\n\n\n/**\n * Note: This is limited version of resourceLink, which works on any element, but does not support\n * opening new windows with CTRL key and external URLs.\n */\n@Directive({\n  selector: ':not(a)[resourceLink]'\n})\nexport class ResourceLinkDirective {\n\n  @Input() resourceLink: string;\n  @Input() target?: TargetType;\n\n  constructor(@Optional() private readonly currentNavigable?: NavigableRef,\n              @Optional() @Inject(TOP_LEVEL_NAVIGABLE) private readonly topLevelNavigable?: NavigableRef) {\n  }\n\n  @HostListener('click')\n  onClick(): boolean {\n    // Handle target\n    let target = this.target;\n\n    if (typeof target === 'string' && target) {\n      if (target === TARGET_SELF) {\n        target = this.currentNavigable && this.currentNavigable.navigable;\n        // Warn if undefined\n        if (!target) {\n          debugLog().warn('When resourceLink is not in a resource-view, target=\"_self\" is not supported');\n        }\n      } else if (target === TARGET_TOP) {\n        target = undefined;\n      } else {\n        throw new Error(`Unsupported target '${target}', use  tag instead`);\n      }\n    }\n\n    // Fallback to page navigation\n    if (!target) {\n      // Fallback to current when top-level is unavailable\n      const topLevel = this.topLevelNavigable || this.currentNavigable;\n      target = topLevel && topLevel.navigable;\n      // Warn if undefined\n      if (!target) {\n        debugLog().warn(`When resourceLink is not embedded in a  component, ` +\n          `it must have target set to a Navigable instance - navigation to \"${this.resourceLink}\" canceled`);\n      }\n    }\n\n    // Navigate\n    if (isNavigable(target)) {\n      target.go(this.resourceLink);\n    }\n\n    // And cancel click\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceLinkWithHrefDirective.html":{"url":"directives/ResourceLinkWithHrefDirective.html","title":"directive - ResourceLinkWithHrefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceLinkWithHrefDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-link-with-href.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        a[resourceLink]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        ngOnChanges\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        external\n                                    \n                                    \n                                        resourceLink\n                                    \n                                    \n                                        target\n                                    \n                                    \n                                        type\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostBindings\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        href\n                                    \n                                \n                            \n                        \n                        \n                            \n                                HostListeners\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        click\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiMapper: ApiMapper, location: Location, resourceViewRegistry: ResourceViewRegistry, currentNavigable?: NavigableRef, topLevelNavigable?: NavigableRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiMapper\n                                                              \n                                                                        ApiMapper\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              location\n                                                              \n                                                                        Location\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              resourceViewRegistry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              currentNavigable\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              topLevelNavigable\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    external\n                                \n                                \n                                    \n                                      Default value: false\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:16\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    resourceLink\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:13\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    target\n                                \n                                \n                                      \n                                        Type:    Navigable | string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:15\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    type\n                                \n                                \n                                      \n                                        Type:    string\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:14\n                                        \n                                    \n                        \n                    \n            \n\n\n            \n                HostBindings        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        href\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    href:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                HostListeners        \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        click\n                                        \n                                        \n                                    \n                                \n                            \n                                \n                                    \n                                        Arguments : '$event.button' '$event.ctrlKey' '$event.metaKey' \n                                    \n                                \n                            \n                                \n            click(button: number, ctrlKey: boolean, metaKey: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:56\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnChanges\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnChanges()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-link-with-href.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Directive, HostBinding, HostListener, Inject, Input, OnChanges, Optional } from '@angular/core';\nimport { TARGET_SELF, TARGET_TOP } from './resource-link';\nimport { ApiMapper } from '../api-mapper';\nimport { ResourceViewRegistry } from '../resource-view-registry';\nimport { isNavigable, Navigable, NavigableRef, TOP_LEVEL_NAVIGABLE } from '../navigable';\nimport { Location } from '@angular/common';\nimport { debugLog } from '../utils/debug-log';\n\n@Directive({selector: 'a[resourceLink]'})\nexport class ResourceLinkWithHrefDirective implements OnChanges {\n\n  @HostBinding() href: string;\n  @Input() resourceLink: string;\n  @Input() type?: string;\n  @Input() target?: Navigable | string;\n  @Input() external = false;\n  private unsupported = false;\n\n  constructor(private readonly apiMapper: ApiMapper,\n              private readonly location: Location,\n              private readonly resourceViewRegistry: ResourceViewRegistry,\n              @Optional() private readonly currentNavigable?: NavigableRef,\n              @Optional() @Inject(TOP_LEVEL_NAVIGABLE) private readonly topLevelNavigable?: NavigableRef) {\n  }\n\n  ngOnChanges(): void {\n    let unsupported = this.external;\n\n    // Is the link supported? Note that its pointless for external links\n    if (this.type && !unsupported) {\n      // Is it known type for successful response?\n      // Note that this mechanism does not work for other status codes, you will have to set [external] manually\n      unsupported = !this.resourceViewRegistry.match(this.type, 200);\n    }\n\n    // Map to API, if it fails, mark as external\n    let viewUrl = this.resourceLink || '';\n    if (viewUrl && !unsupported) {\n      // Map API to View\n      const url = this.apiMapper.mapApiToView(viewUrl);\n      if (url) {\n        // Use mapped url, since its application link\n        viewUrl = url;\n      } else {\n        // Unsupported location\n        unsupported = true;\n      }\n    }\n\n    // Store mapped URL to href\n    this.unsupported = unsupported;\n    this.href = unsupported ? viewUrl : this.location.prepareExternalUrl(viewUrl);\n  }\n\n  @HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey'])\n  onClick(button: number, ctrlKey: boolean, metaKey: boolean): boolean {\n    // Let the browser do the navigation if any key was pressed or this link unsupported\n    if (button !== 0 || ctrlKey || metaKey || !this.resourceLink || this.unsupported) {\n      return true;\n    }\n\n    // Handle target\n    let target = this.target;\n\n    if (typeof target === 'string') {\n      if (target === TARGET_SELF) {\n        target = this.currentNavigable && this.currentNavigable.navigable;\n        // Warn if undefined\n        if (!target) {\n          debugLog().warn('When resourceLink is not in a resource-view, target=\"_self\" is not supported');\n        }\n      } else if (target === TARGET_TOP) {\n        target = undefined;\n      } else {\n        // Custom target, open new window\n        return true;\n      }\n    }\n\n    // Fallback to page navigation\n    if (!target) {\n      // Fallback to current when top-level is unavailable\n      const topLevel = this.topLevelNavigable || this.currentNavigable;\n      target = topLevel && topLevel.navigable;\n      // Warn if undefined\n      if (!target) {\n        debugLog().warn(`When resourceLink is not embedded in a  component, ` +\n          `it must have target set to a Navigable instance - navigation to \"${this.resourceLink}\" canceled`);\n      }\n    }\n\n    if (isNavigable(target)) {\n      // Navigate using original non-mapped link\n      target.go(this.resourceLink);\n    }\n\n    // Cancel click\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ResourceViewDirective.html":{"url":"directives/ResourceViewDirective.html","title":"directive - ResourceViewDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ResourceViewDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-view.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        resource-view\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        destroy\n                                    \n                                    \n                                        ngOnChanges\n                                    \n                                    \n                                        render\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        data\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(viewContainer: ViewContainerRef, resolver: ComponentFactoryResolver, navigableRef?: NavigableRef)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              viewContainer\n                                                              \n                                                                        ViewContainerRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              resolver\n                                                              \n                                                                        ComponentFactoryResolver\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              navigableRef\n                                                              \n                                                                        NavigableRef\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    data\n                                \n                                \n                                      \n                                        Type:    ViewData\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:40\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        destroy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            destroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:69\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        ngOnChanges\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            ngOnChanges(changes: SimpleChanges)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:49\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              changes\n                                                              \n                                                                      SimpleChanges\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        render\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            render()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:76\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Injector,\n  Input,\n  OnChanges,\n  Optional,\n  SimpleChanges,\n  StaticProvider,\n  ViewContainerRef\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ViewData } from '../view-data';\nimport { ActivatedView } from '../activated-view';\nimport { Navigable, NavigableRef } from '../navigable';\n\nclass ResourceViewContext {\n\n  constructor(public readonly component: ComponentRef,\n              public readonly target: Navigable,\n              public readonly data: BehaviorSubject>) {\n  }\n\n  get componentType() {\n    return this.component.componentType;\n  }\n\n  next(value: ViewData) {\n    this.data.next(value);\n  }\n}\n\n@Directive({\n  selector: 'resource-view'\n})\nexport class ResourceViewDirective implements OnChanges {\n\n  @Input()\n  data?: ViewData;\n\n  private current: ResourceViewContext | null = null;\n\n  constructor(private readonly viewContainer: ViewContainerRef,\n              private readonly resolver: ComponentFactoryResolver,\n              @Optional() private readonly navigableRef?: NavigableRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Show nothing when there is nothing to show\n    if (!this.data || !this.data.config || !this.data.config.component) {\n      this.destroy();\n      return;\n    }\n\n    // Is this same component as currently visible?\n    if (this.current\n      && this.data.config.component === this.current.componentType\n      // Note: data.target won't change during normal use\n      && this.data.target === this.current.target) {\n      // Propagate new value instead of component re-creation\n      this.current.next(this.data);\n    } else {\n      // Display new component (destroys old one)\n      this.render();\n    }\n  }\n\n  destroy() {\n    if (this.current) {\n      this.current.component.destroy();\n      this.current = null;\n    }\n  }\n\n  render() {\n    // Destroy current view\n    this.destroy();\n\n    // Ignore when there is nothing to render\n    if (!this.data || !this.data.config || !this.data.config.component) {\n      return;\n    }\n\n    // Prepare data observable\n    const dataSource = new BehaviorSubject>(this.data);\n    const target = this.data.target;\n\n    // Create component\n    const factory = this.resolver.resolveComponentFactory(this.data.config.component);\n    const providers: StaticProvider[] = [\n      {\n        provide: ActivatedView,\n        useValue: new ActivatedView(target, dataSource)\n      }\n    ];\n\n    const injector = Injector.create({providers: providers, parent: this.viewContainer.injector});\n    const component = this.viewContainer.createComponent(factory, this.viewContainer.length, injector, []);\n\n    // Store reference\n    this.current = new ResourceViewContext(component, target, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiLocation.html":{"url":"injectables/ApiLocation.html","title":"injectable - ApiLocation","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ApiLocation\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-location.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\nProvides bindable url property, to be used with resource-outlet component.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        urlChange\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        doNavigate\n                                    \n                                    \n                                            Protected\n                                        mapLocationUrlToApi\n                                    \n                                    \n                                            Protected\n                                        onLocationChanged\n                                    \n                                    \n                                        prepareExternalUrl\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        url\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(apiMapper: ApiMapper, location: Location)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              apiMapper\n                                                              \n                                                                        ApiMapper\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              location\n                                                              \n                                                                        Location\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        doNavigate\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    doNavigate(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:85\n                                        \n                                    \n            \n                            \n                                \n                                        Performs navigation to given view path.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              View path to navigate to. Should be already mapped from API URL.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        mapLocationUrlToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapLocationUrlToApi()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:101\n                                        \n                                    \n            \n                            \n                                \n                                        Takes current {@link Location#path()} and maps it to API url.\n            Might throw an {@link Error} if path() returns something unexpected, like null.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                Mapped url. Never null.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        onLocationChanged\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    onLocationChanged()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:109\n                                        \n                                    \n            \n                            \n                                \n                                        Updates currentUrl and fires next value for url observable.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        prepareExternalUrl\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            prepareExternalUrl(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:76\n                                        \n                                    \n            \n                            \n                                \n                                        This is just wrapper around {@link Location#prepareExternalUrl()} for convenience.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URL to be normalized for the link.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Normalized URL.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        urlChange\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    urlChange:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/api-location.ts:16\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    url\n                                \n                            \n            \n                            \n                                \n                                    geturl()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/api-location.ts:37\n                                            \n                                        \n                                \n                                    \n                                            Resource URL that is being currently viewed.\n            Note: This should not be used to determine current data URL, since this always corresponds to the\n            primary view.\n            \n            \n                                            \n                                            \n                                            \n                                                Returns :     string\n            \n                                            \n                                    \n                                \n            \n                            \n                                \n                                    seturl(url: string)\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/api-location.ts:49\n                                            \n                                        \n                                \n                                    \n                                            Changes browser location (using configured strategy) to given resource url.\n            \n            \n            If the url is not in the configured API namespace, error is logged and nothing happens.\n            \n            \n            If the url equals to api prefix, it is performed redirect to page base href.\n            \n            \n            \n                                            \n                                                    Parameters :\n                                                    \n                                                        \n                                                            \n                                                                Name\n                                                                Type\n                                                                Optional\n                                                                Description\n                                                            \n                                                        \n                                                        \n                                                                \n                                                                  url\n                                                                  \n                                                                          string\n                                                                  \n                                                                  \n                                                                  \n                                                                  API url. The navigation in browser is performed to the view URL, that is, without API prefix.\n            \n                                                                \n                                                        \n                                                    \n                                            \n                                            \n                                            \n                                            \n                                                Returns :     void\n            \n                                            \n                                    \n                                \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ApiMapper } from './api-mapper';\nimport { Observable, Subject } from 'rxjs';\nimport { LocationReference } from './location-reference';\n\n// TODO normalize URL, using possibly LocationStrategy (that means remove trailing slash directly in the browser if its present)\n\n/**\n * It maps view URLs to API and vice versa.\n * Provides bindable `url` property, to be used with `resource-outlet` component.\n */\n@Injectable()\nexport class ApiLocation implements LocationReference {\n\n  readonly urlChange: Observable;\n  private readonly urlChangeSubject = new Subject();\n  private urlValue = '';\n\n  constructor(private readonly apiMapper: ApiMapper,\n              private readonly location: Location) {\n    // Initialize\n    this.urlChange = this.urlChangeSubject.asObservable();\n    this.urlValue = this.mapLocationUrlToApi();\n\n    // Listen to Location changes\n    this.location.subscribe(() => this.onLocationChanged());\n  }\n\n  /**\n   * Resource URL that is being currently viewed.\n   * Note: This should not be used to determine current data URL, since this always corresponds to the\n   * primary view.\n   *\n   * @returns Resource URL that is being currently viewed.\n   */\n  get url(): string {\n    return this.urlValue;\n  }\n\n  /**\n   * Changes browser location (using configured strategy) to given resource url.\n   *\n   * * * If the `url` is not in the configured API namespace, error is logged and nothing happens.\n   * * If the `url` equals to api prefix, it is performed redirect to page base href.\n   *\n   * @param url API url. The navigation in browser is performed to the `view URL`, that is, without API prefix.\n   */\n  set url(url: string) {\n    if (typeof url !== 'string') {\n      throw new Error('url must be a string');\n    }\n\n    // Normalize\n    url = this.location.normalize(url);\n\n    // Navigate only on change\n    if (url !== this.urlValue) {\n      // Map API url to View form\n      const path = this.apiMapper.mapApiToView(url);\n      if (!path) {\n        throw new Error(`Cannot navigate to URL '${url}', it cannot be mapped to known API prefix`);\n      }\n\n      // Navigate\n      this.doNavigate(path);\n    }\n  }\n\n  /**\n   * This is just wrapper around {@link Location#prepareExternalUrl()} for convenience.\n   *\n   * @param url URL to be normalized for the link.\n   * @returns Normalized URL.\n   */\n  prepareExternalUrl(url: string): string {\n    return this.location.prepareExternalUrl(url);\n  }\n\n  /**\n   * Performs navigation to given view path.\n   *\n   * @param path View path to navigate to. Should be already mapped from API URL.\n   */\n  protected doNavigate(path: string) {\n    // Push state if needed\n    if (!this.location.isCurrentPathEqualTo(path)) {\n      this.location.go(path);\n    }\n\n    // Update our url\n    this.onLocationChanged();\n  }\n\n  /**\n   * Takes current {@link Location#path()} and maps it to API url.\n   * Might throw an {@link Error} if path() returns something unexpected, like null.\n   *\n   * @returns Mapped url. Never null.\n   */\n  protected mapLocationUrlToApi() {\n    const path = this.location.path();\n    return this.apiMapper.mapViewToApi(path);\n  }\n\n  /**\n   * Updates `currentUrl` and fires next value for `url` observable.\n   */\n  protected onLocationChanged() {\n    this.urlValue = this.mapLocationUrlToApi();\n    this.urlChangeSubject.next(this.urlValue);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrowserUrlNormalizer.html":{"url":"injectables/BrowserUrlNormalizer.html","title":"injectable - BrowserUrlNormalizer","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BrowserUrlNormalizer\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/url-normalizer.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getBaseHref\n                                    \n                                    \n                                        getLocation\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(platformStrategy: LocationStrategy, document: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:67\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              platformStrategy\n                                                              \n                                                                        LocationStrategy\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              document\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:75\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:80\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class UrlNormalizer {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseUrlNormalizer extends UrlNormalizer {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserUrlNormalizer extends BaseUrlNormalizer {\n\n  constructor(private readonly platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private readonly document: any) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HeaderViewTypeStrategy.html":{"url":"injectables/HeaderViewTypeStrategy.html","title":"injectable - HeaderViewTypeStrategy","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HeaderViewTypeStrategy\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n            \n                Description\n            \n            \n                Extracts type from the HTTP header. By default its Content-Type.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        headerName\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        extractType\n                                    \n                                    \n                                        normalizeMediaType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        extractType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            extractType(response: ViewTypeResponse)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:43\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                                      ViewTypeResponse\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        normalizeMediaType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            normalizeMediaType(contentType: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:49\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              contentType\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        headerName\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    headerName:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'content-type'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:41\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param response Actual response.\n   * @returns Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpResourceClient.html":{"url":"injectables/HttpResourceClient.html","title":"injectable - HttpResourceClient","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpResourceClient\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-client.ts\n        \n\n            \n                Description\n            \n            \n                Default ResourceClient implementation, which uses HttpClient as backend.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        http\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        registry\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        strategy\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        fetch\n                                    \n                                    \n                                            Protected\n                                        get\n                                    \n                                    \n                                            Protected\n                                        handleError\n                                    \n                                    \n                                            Protected\n                                        parse\n                                    \n                                    \n                                            Protected\n                                        resolve\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(strategy: ViewTypeStrategy, registry: ResourceViewRegistry, http: HttpClient)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              strategy\n                                                              \n                                                                        ViewTypeStrategy\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              registry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              http\n                                                              \n                                                                        HttpClient\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        fetch\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            fetch(uri: string, target: Navigable)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:43\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              uri\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              target\n                                                              \n                                                                      Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        get\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    get(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:53\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        handleError\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    handleError(err: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:61\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              err\n                                                              \n                                                                      any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        parse\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    parse(body: string | null, config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:128\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              body\n                                                              \n                                                                      string | null\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        resolve\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    resolve(requestUrl: string, response: HttpResponse, target: Navigable)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:102\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              requestUrl\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              response\n                                                              \n                                                                      HttpResponse\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              target\n                                                              \n                                                                      Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     ViewData\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        http\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    http:     HttpClient\n            \n                                \n                            \n                                \n                                    \n                                        Type :     HttpClient\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:39\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        registry\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    registry:     ResourceViewRegistry\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceViewRegistry\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:38\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        strategy\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    strategy:     ViewTypeStrategy\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ViewTypeStrategy\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:37\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ResourceViewRegistry } from './resource-view-registry';\nimport { ViewTypeStrategy } from './view-type-strategy';\nimport { ViewData } from './view-data';\nimport { ViewDef } from './view-definition';\nimport { Navigable } from './navigable';\nimport { stringToJSON } from './utils/http-utils';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { scalar } from 'rxjs/internal/observable/scalar';\n\n\n/**\n * Component that retrieves the data for given URL.\n */\nexport abstract class ResourceClient {\n\n  /**\n   * Retrieves the data.\n   *\n   * @param uri URI the data should be retrieved from. Usually it is URL for HTTP request.\n   * @param target Navigable instance, to be passed to ViewData constructor.\n   * @returns Retrieved ViewData instance.\n   */\n  abstract fetch(uri: string, target: Navigable): Observable>;\n\n}\n\n/**\n * Default ResourceClient implementation, which uses HttpClient as backend.\n */\n@Injectable()\nexport class HttpResourceClient extends ResourceClient {\n\n  constructor(public readonly strategy: ViewTypeStrategy,\n              public readonly registry: ResourceViewRegistry,\n              public readonly http: HttpClient) {\n    super();\n  }\n\n  fetch(uri: string, target: Navigable): Observable> {\n    // Send request\n    return this.get(uri).pipe(\n      // Convert failure to success, if we know how to handle it (rethrow if we don't)\n      catchError(err => this.handleError(err)),\n      // This might throw exception, e.g. when response is malformed - it produces failed Observable then\n      map(response => this.resolve(uri, response, target)),\n    );\n  }\n\n  protected get(url: string): Observable> {\n    // Note: We need to set responseType to text, because if set to json,\n    // Angular will return error when response is not a valid JSON - We will rather parse it here.\n    // Its not nice, since we are duplicating bit of HttpClient, but I'm not aware of other way\n    return this.http.get(url, {observe: 'response', responseType: 'text'});\n  }\n\n  // noinspection JSMethodCanBeStatic\n  protected handleError(err: any): Observable> {\n    // Depends on the type\n    if (err instanceof HttpResponse) {\n      // Pass it through\n      return scalar(err);\n    }\n    // noinspection SuspiciousInstanceOfGuard\n    if (err instanceof HttpErrorResponse) {\n      let body: string | undefined;\n\n      if (!err.error) {\n        // No body provided, fallback to response error message\n        body = err.message;\n      } else if (typeof err.error.message === 'string') {\n        // Network failures and such\n        // err.error might be either Error or ErrorEvent, both having message property\n        body = err.error.message;\n      } else if (typeof err.error === 'string') {\n        // Generic error, usually returned by server as response body\n        // This assumes that since we used responseType:'text', error (body) should be un-parsed string as well\n        // Note: We don't handle json parse errors, since these should not happen\n        body = err.error;\n      } else {\n        // To avoid returning something unexpected, better to rethrow the error\n        return throwError(err);\n      }\n\n      // Treat is as non-failing response\n      return scalar(new HttpResponse({\n        body: body,\n        headers: err.headers,\n        status: err.status,\n        statusText: err.statusText,\n        url: err.url || undefined\n      }));\n    } else {\n      // Other errors propagate (resolve won't be called)\n      return throwError(err);\n    }\n  }\n\n  protected resolve(requestUrl: string, response: HttpResponse, target: Navigable): ViewData {\n    // Note: In browsers, this does not throw exception, in NodeJS, it does\n    // noinspection SuspiciousInstanceOfGuard\n    console.assert(response instanceof HttpResponse, 'response is not instanceof HttpResponse', response);\n\n    // Resolve type, if possible\n    const type = this.strategy.extractType(response) || '';\n    // Find view\n    const config = this.registry.match(type, response.status);\n    // Parse body\n    const body = this.parse(response.body, config);\n\n    // Construct and return ViewData\n    return {\n      target: target,\n      config: config,\n      type: type,\n      url: response.url || requestUrl,\n      status: response.status,\n      statusText: response.statusText,\n      headers: response.headers,\n      body: body,\n    };\n  }\n\n  // noinspection JSMethodCanBeStatic\n  protected parse(body: string | null, config: ViewDef): any | null {\n    // Don't parse empty body\n    if (!body) {\n      return null;\n    }\n\n    const responseType = config.responseType || 'json';\n    switch (responseType) {\n      case 'json':\n        // Parse JSON - unless body is already object, otherwise we expect string\n        return typeof body === 'object' ? body : stringToJSON(body);\n\n      case 'text':\n        // Return as-is - this assumes body is already string\n        return body;\n\n      default:\n        throw new Error(`Unsupported responseType: ${responseType}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockUrlNormalizer.html":{"url":"injectables/MockUrlNormalizer.html","title":"injectable - MockUrlNormalizer","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MockUrlNormalizer\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/testing/src/mock-url-normalizer.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        internalBaseHref\n                                    \n                                    \n                                        internalHost\n                                    \n                                    \n                                        internalPathname\n                                    \n                                    \n                                        internalProtocol\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        getBaseHref\n                                    \n                                    \n                                        getLocation\n                                    \n                                    \n                                        init\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:21\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        init\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            init(protocol: string, host: string, pathname: string, baseHref: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              protocol\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              host\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              pathname\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              baseHref\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     this\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalBaseHref:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : ''\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalHost\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalHost:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'localhost'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalPathname\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalPathname:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : '/'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        internalProtocol\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    internalProtocol:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : 'http:'\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/testing/src/mock-url-normalizer.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BaseUrlNormalizer, LocationInfo } from 'angular-resource-router';\n\n@Injectable()\nexport class MockUrlNormalizer extends BaseUrlNormalizer {\n\n  internalProtocol = 'http:';\n  internalHost = 'localhost';\n  internalPathname = '/';\n  internalBaseHref = '';\n\n  init(protocol: string, host: string, pathname: string, baseHref: string) {\n    this.internalProtocol = protocol;\n    this.internalHost = host;\n    this.internalPathname = pathname;\n    this.internalBaseHref = baseHref;\n\n    return this;\n  }\n\n  getBaseHref(): string {\n    return this.internalBaseHref;\n  }\n\n  getLocation(): LocationInfo {\n    return {\n      protocol: this.internalProtocol,\n      host: this.internalHost,\n      pathname: this.internalPathname\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceData.html":{"url":"injectables/ResourceData.html","title":"injectable - ResourceData","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceData\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-data.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        client\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        dataChange\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        id\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        registry\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        urlChange\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        go\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        loading\n                                    \n                                    \n                                        data\n                                    \n                                    \n                                        url\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(client: ResourceClient, registry: ResourceViewRegistry)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              client\n                                                              \n                                                                        ResourceClient\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              registry\n                                                              \n                                                                        ResourceViewRegistry\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        go\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            go(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:91\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        client\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    client:     ResourceClient\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceClient\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:36\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        dataChange\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    dataChange:     Observable>\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable>\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:21\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        id\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    id:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : nextId++\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:28\n                                        \n                                    \n            \n                            \n                                \n                                    Diagnostic identifier, not used by any logic.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        registry\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    registry:     ResourceViewRegistry\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ResourceViewRegistry\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:37\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        urlChange\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    urlChange:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/resource-data.ts:22\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    loading\n                                \n                            \n            \n                            \n                                \n                                    getloading()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-data.ts:66\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    data\n                                \n                            \n            \n                            \n                                \n                                    getdata()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-data.ts:70\n                                            \n                                        \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    url\n                                \n                            \n            \n                            \n                                \n                                    geturl()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-data.ts:74\n                                            \n                                        \n            \n                            \n                                \n                                    seturl(value: string)\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-data.ts:78\n                                            \n                                        \n                        \n                    \n            \n    \n\n\n    \n        import { FactoryProvider, Injectable, Self } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { ResourceViewRegistry } from './resource-view-registry';\nimport { ResourceClient } from './resource-client';\nimport { ViewData } from './view-data';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_ERROR, MEDIA_TYPE_ROUTER_LOADING } from './system-media-types';\nimport { NO_HEADERS, ReadOnlyHeaders } from './read-only-headers';\nimport { makeNavigableRef, Navigable, NavigableRef } from './navigable';\nimport { LocationReference } from './location-reference';\nimport { scalar } from 'rxjs/internal/observable/scalar';\n\n/**\n * @internal\n */\nlet nextId = 1;\n\n@Injectable()\nexport class ResourceData implements Navigable, LocationReference {\n\n  public readonly dataChange: Observable>;\n  public readonly urlChange: Observable;\n\n  // noinspection JSUnusedGlobalSymbols\n  /**\n   * Diagnostic identifier, not used by any logic.\n   */\n  public readonly id = nextId++;\n\n  private urlValue = '';\n  private loadingValue = false;\n  private readonly dataChangeSource: BehaviorSubject>;\n  private readonly urlChangeSource = new Subject();\n  private readonly loadDataEvent = new Subject();\n\n  constructor(public readonly client: ResourceClient,\n              public readonly registry: ResourceViewRegistry) {\n    // Initialize\n    const initialData = this.mockViewData('', MEDIA_TYPE_ROUTER_LOADING, 204, 'OK');\n\n    this.dataChangeSource = new BehaviorSubject>(initialData);\n    this.dataChange = this.dataChangeSource.asObservable();\n\n    this.urlChange = this.urlChangeSource.asObservable();\n\n    // Using Subject in combination with switchMap allows us to easily use only latest value\n    // Note: this.load is private and produces a never failing observable\n    this.loadDataEvent\n      .pipe(switchMap(url => {\n        this.loadingValue = true;\n        return this.load(url);\n      }))\n      .subscribe(data => {\n        // Update data\n        this.loadingValue = false;\n        this.dataChangeSource.next(data);\n\n        // This propagates back the actual url when server-side redirect was performed\n        if (data.url !== this.urlValue) {\n          this.urlValue = data.url;\n          this.urlChangeSource.next(this.urlValue);\n        }\n      });\n  }\n\n  get loading() {\n    return this.loadingValue;\n  }\n\n  get data(): ViewData {\n    return this.dataChangeSource.getValue();\n  }\n\n  get url(): string {\n    return this.urlValue;\n  }\n\n  set url(value: string) {\n    // Normalize undefined (possibly from binding) to empty string - don't rely on typescript\n    if (!value) {\n      value = '';\n    }\n\n    // Start load if value has actually changed\n    if (this.urlValue !== value) {\n      this.urlValue = value;\n      this.loadDataEvent.next(value);\n    }\n  }\n\n  go(url: string): void {\n    // Update property if changed\n    if (this.urlValue !== url) {\n      this.urlValue = url;\n      this.urlChangeSource.next(url);\n    }\n\n    // Load data (always)\n    this.loadDataEvent.next(this.urlValue);\n  }\n\n  private load(url: string): Observable> {\n    if (url) {\n      return this.client\n        .fetch(url, this)\n        .pipe(catchError(err => {\n          // Log it, this should not happen normally\n          // Note: We are intentionally not using debugLog here - print this in production log as well\n          console.error('Routing Error:', err);\n          // Return error view\n          return scalar(this.mockViewData(url, MEDIA_TYPE_ROUTER_ERROR, 999, 'Routing Error', NO_HEADERS, err));\n        }));\n    } else {\n      return scalar(this.mockViewData('', MEDIA_TYPE_ROUTER_EMPTY, 204, 'OK'));\n    }\n  }\n\n  private mockViewData(url: string, type: string, status: number, statusText: string,\n                       headers?: ReadOnlyHeaders, body?: any): ViewData {\n    const config = this.registry.match(type, status);\n\n    return {\n      target: this,\n      config: config,\n      type: type,\n      url: url,\n      status: status,\n      statusText: statusText,\n      headers: headers || NO_HEADERS,\n      body: body\n    };\n  }\n}\n\n\nexport function resourceDataNavigableRef(): FactoryProvider {\n  return {\n    provide: NavigableRef,\n    useFactory: makeNavigableRef,\n    deps: [[ResourceData, new Self()]]\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceViewRegistry.html":{"url":"injectables/ResourceViewRegistry.html","title":"injectable - ResourceViewRegistry","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceViewRegistry\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-view-registry.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Protected\n                                        addView\n                                    \n                                    \n                                        addViews\n                                    \n                                    \n                                        match\n                                    \n                                    \n                                            Protected\n                                        validateViewDefinition\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        length\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(views?: any, typeQualityEvaluator?: TypeQualityEvaluator)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:45\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              views\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              typeQualityEvaluator\n                                                              \n                                                                        TypeQualityEvaluator\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        addView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    addView(config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:103\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        addViews\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            addViews(config: ViewDef | [])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:92\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef | []\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        match\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            match(type: string, status: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:63\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              type\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              status\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     ViewDef\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Protected\n                                        validateViewDefinition\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    validateViewDefinition(config: ViewDef)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-view-registry.ts:121\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                      ViewDef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    length\n                                \n                            \n            \n                            \n                                \n                                    getlength()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/resource-view-registry.ts:59\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { ViewDef } from './view-definition';\nimport { SortedArray } from './utils/sorted-array';\nimport { wildcardToRegex } from './utils/wildcard-to-regex';\nimport { simpleTypeQualityEvaluator, statusQualityEvaluator, TypeQualityEvaluator } from './quality-evaluator';\n\n\nexport const RESOURCE_VIEWS = new InjectionToken('RESOURCE_VIEWS');\nexport const TYPE_QUALITY_EVALUATOR = new InjectionToken('TYPE_QUALITY_EVALUATOR');\n\n\n// Private classes\n/**\n * @internal\n */\nclass ViewsByStatus {\n  readonly status: string;\n  readonly statusExp: RegExp;\n  readonly quality: number;\n  readonly types = new SortedArray(qualityComparator);\n\n  constructor(status: string) {\n    this.status = status;\n    this.statusExp = wildcardToRegex(status);\n    this.quality = statusQualityEvaluator(status);\n  }\n}\n\n/**\n * @internal\n */\ninterface ParsedViewDef {\n  readonly config: ViewDef;\n  readonly quality: number;\n  readonly typeExp: RegExp;\n}\n\n\n// Public class\n@Injectable()\nexport class ResourceViewRegistry {\n\n  private readonly typeQualityEvaluator: TypeQualityEvaluator;\n  private readonly viewsByStatus = new SortedArray(qualityComparator);\n  private _length = 0;\n\n  constructor(@Inject(RESOURCE_VIEWS) @Optional() views?: any,\n              @Inject(TYPE_QUALITY_EVALUATOR) @Optional() typeQualityEvaluator?: TypeQualityEvaluator) {\n    // Initialize quality evaluator - must be before addViews\n    this.typeQualityEvaluator = typeQualityEvaluator || simpleTypeQualityEvaluator;\n\n    // Ignore if no view is defined - this is supported path for later registration\n    if (views) {\n      // Register views\n      this.addViews(views);\n    }\n  }\n\n  get length(): number {\n    return this._length;\n  }\n\n  match(type: string, status: number): ViewDef {\n    // Despite status being mandatory, in runtime we still might receive undefined or others, and default error is misleading\n    if (typeof status !== 'number') {\n      throw new Error(`Wrong status type (${typeof status}), no view can be matched`);\n    }\n\n    // Convert number to padded string\n    const statusStr = normalizeStatus(status);\n\n    // Find all matching groups by status\n    for (let i = 0, a = this.viewsByStatus.array, l = a.length; i  v.typeExp.test(type));\n      if (view) {\n        return view.config;\n      }\n    }\n\n    // Not found\n    throw new Error(`No view definition found for type '${type}' and status '${statusStr}' - please register default view`);\n  }\n\n  addViews(config: ViewDef | ViewDef[]) {\n    // Flatten array\n    if (Array.isArray(config)) {\n      // Recursive call\n      config.forEach(this.addViews, this);\n    } else if (config) {\n      // Single view\n      this.addView(config);\n    }\n  }\n\n  protected addView(config: ViewDef) {\n    // Sanity check\n    this.validateViewDefinition(config);\n\n    // All permutations of status and type\n    toArray(config.status || '2??').forEach(status => {\n      // Get status group\n      const normalizedStatus = normalizeStatusExpression('' + status);\n      const group = this.getViewsByStatus(normalizedStatus);\n\n      // Types\n      toArray(config.type).forEach(type => {\n        this.addSingleView(config, group, type);\n      });\n    });\n  }\n\n  //noinspection JSMethodCanBeStatic\n  protected validateViewDefinition(config: ViewDef) {\n    // Component\n    if (!config.component || typeof config.component !== 'function') {\n      throw newValidationError(config, 'component is mandatory and must be a type');\n    }\n\n    // Type\n    validateType(config);\n\n    // Status\n    validateStatus(config);\n\n    // Quality\n    if (config.quality && typeof config.quality !== 'number') {\n      throw newValidationError(config, 'quality must be a number');\n    }\n  }\n\n  private addSingleView(config: ViewDef, group: ViewsByStatus, type: string) {\n    // Copy of definition, with specific status and type only\n    // See https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest\n    config = {\n      ...config, ...{\n        status: group.status,\n        type: type\n      }\n    };\n\n    // Evaluate quality if needed\n    const quality = typeof config.quality === 'number' ? config.quality : this.typeQualityEvaluator(type);\n\n    // Add to the group\n    group.types.push({\n      config: Object.freeze(config),\n      typeExp: wildcardToRegex(type),\n      quality: quality\n    });\n\n    // Increment count\n    this._length++;\n  }\n\n  private getViewsByStatus(status: string) {\n    let byStatus = this.viewsByStatus.array.find(s => s.status === status);\n\n    if (!byStatus) {\n      byStatus = new ViewsByStatus(status);\n      this.viewsByStatus.push(byStatus);\n    }\n\n    return byStatus;\n  }\n}\n\n\n// Validation functions\n/**\n * @internal\n */\nfunction validateType(config: ViewDef) {\n  if (Array.isArray(config.type)) {\n    if (config.type.find(t => typeof t !== 'string')) {\n      throw newValidationError(config, 'type array must consist only of strings');\n    }\n  } else if (typeof config.type !== 'string') {\n    throw newValidationError(config, 'type must be a string or array of strings');\n  }\n}\n\n/**\n * @internal\n */\nfunction validateStatus(config: ViewDef) {\n  if (config.status) {\n    if (Array.isArray(config.status)) {\n      // Validate array of values\n      config.status.forEach(status => validateStatusExpression(config, '' + status));\n    } else if (typeof config.status === 'string' || typeof config.status === 'number') {\n      // Validate single value\n      validateStatusExpression(config, '' + config.status);\n    } else {\n      // Invalid\n      throw newValidationError(config, 'status must be either string, number or array of them');\n    }\n  }\n}\n\n/**\n * @internal\n */\nfunction validateStatusExpression(config: ViewDef, status: string) {\n  if (status.length  3) {\n    throw newValidationError(config, 'status pattern must be between 1 and 3 characters long');\n  }\n\n  if (/[^x\\d?*]/.test(status)) {\n    throw newValidationError(config, 'status pattern contains invalid characters');\n  }\n\n  if (!/^\\d*[?x]*\\**$/.test(status)) {\n    throw newValidationError(config, 'status pattern can contain wildcards only at the end of the pattern');\n  }\n}\n\n/**\n * @internal\n */\nfunction newValidationError(config: any, text: string): Error {\n  return new Error('Invalid view configuration, ' + text + ':\\n' + JSON.stringify(config));\n}\n\n// Utils\n/**\n * @internal\n */\nexport function normalizeStatusExpression(pattern: string): string {\n  // Handle * wildcard\n  if (pattern.endsWith('*')) {\n    if (pattern.length > 3) {\n      throw new Error('Wildcard * is not supported for status expressions longer then 3 characters: ' + pattern);\n    }\n\n    return (pattern.replace(/\\*/g, '') + '???').substr(0, 3);\n  }\n\n  // Replace x to ?\n  pattern = pattern.replace(/x/g, '?');\n\n  // Pad left with zeroes\n  return pattern.length (value: T | T[]): Array {\n  return Array.isArray(value) ? value as T[] : [value] as T[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingleApiMapper.html":{"url":"injectables/SingleApiMapper.html","title":"injectable - SingleApiMapper","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SingleApiMapper\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/single-api-mapper.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                        prefix\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        mapApiToView\n                                    \n                                    \n                                        mapViewToApi\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(urlNormalizer: UrlNormalizer, prefix: string)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:23\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              urlNormalizer\n                                                              \n                                                                        UrlNormalizer\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              prefix\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mapApiToView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mapApiToView(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:48\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        mapViewToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            mapViewToApi(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:34\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                        prefix\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    prefix:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/single-api-mapper.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                    API URL prefix. It's absolute URL, includes base href (if applicable).\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { UrlNormalizer } from './url-normalizer';\nimport { ApiMapper } from './api-mapper';\n\n\n/**\n * Prefix for the URL. Can be base-relative, host-relative or absolute.\n * Always should end with slash '/'.\n */\nexport const APP_API_PREFIX = new InjectionToken('APP_API_PREFIX');\n\n\n/**\n * It maps view URLs to API and vice versa.\n */\n@Injectable()\nexport class SingleApiMapper extends ApiMapper {\n\n  /**\n   * API URL prefix. It's absolute URL, includes base href (if applicable).\n   */\n  readonly prefix: string;\n  private readonly endsWithSlash: boolean;\n\n  constructor(private readonly urlNormalizer: UrlNormalizer,\n              @Inject(APP_API_PREFIX) prefix: string) {\n    super();\n\n    // Normalize prefix\n    this.prefix = urlNormalizer.normalize(prefix);\n    this.endsWithSlash = this.prefix.endsWith('/');\n  }\n\n  mapViewToApi(path: string): string {\n    // This is for diagnostics only, but might be useful\n    if (/^\\w+:/.test(path)) {\n      throw new Error('path must be relative');\n    }\n\n    // Strip leading slash\n    path = path.replace(/^\\//, '');\n\n    // Join\n    // Note: API prefix MUST end with a slash, otherwise it will work as configured, which is most likely wrong.\n    return (this.prefix + path).replace(/\\/$/, '');\n  }\n\n  mapApiToView(url: string): string | null {\n    // Normalize relative URLs\n    if (url[0] === '/') {\n      url = this.urlNormalizer.normalize(url);\n    }\n\n    // Remove prefix\n    if (url.startsWith(this.prefix)) {\n      // Strip prefix, prepend /, remove trailing /\n      return '/' + url.substring(this.prefix.length).replace(/\\/$/, '');\n    } else if (this.endsWithSlash && url.length + 1 === this.prefix.length && this.prefix.startsWith(url)) {\n      // Home\n      // Note: url is missing trailing slash, but otherwise is equal to prefix\n      // Example: prefix='http://.../v1/', url='http://.../v1'\n      return '/';\n    }\n\n    // Unable to map\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivatedView.html":{"url":"classes/ActivatedView.html","title":"class - ActivatedView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivatedView\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/activated-view.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        body\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        data\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        navigation\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        reload\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        snapshot\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(navigation: Navigable, _data: BehaviorSubject>)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:9\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              navigation\n                                                              \n                                                                        Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              _data\n                                                              \n                                                                        BehaviorSubject>\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        reload\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            reload()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                        Forces reload of the data (remaining on the current URL).\n            This is identical to calling {@code activatedView.navigation.go(activatedView.snapshot.url)}.\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        body\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    body:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        data\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    data:     Observable>\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable>\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        navigation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    navigation:     Navigable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Navigable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/activated-view.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    snapshot\n                                \n                            \n            \n                            \n                                \n                                    getsnapshot()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/activated-view.ts:17\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Navigable } from './navigable';\nimport { ViewData } from './view-data';\n\nexport class ActivatedView {\n\n  public readonly data: Observable>;\n  public readonly body: Observable;\n\n  constructor(public readonly navigation: Navigable,\n              private readonly _data: BehaviorSubject>) {\n    this.data = _data.asObservable();\n    this.body = this.data.pipe(map(data => data.body));\n  }\n\n  get snapshot() {\n    return this._data.getValue();\n  }\n\n  /**\n   * Forces reload of the data (remaining on the current URL).\n   *\n   * This is identical to calling {@code activatedView.navigation.go(activatedView.snapshot.url)}.\n   */\n  reload(): void {\n    this.navigation.go(this.snapshot.url);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiMapper.html":{"url":"classes/ApiMapper.html","title":"class - ApiMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiMapper\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/api-mapper.ts\n        \n\n            \n                Description\n            \n            \n                It maps view URLs to API and vice versa.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        mapApiToView\n                                    \n                                    \n                                            \n                                        mapViewToApi\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        mapApiToView\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapApiToView(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-mapper.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                        Maps resource URL to view path. Can be overridden during configuration.\n            By default it maps API url to view paths one to one.\n            Counterpart to {@link #mapViewToApi}.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              Resource url. It must be inside API namespace. If it is not, null is returned.\n                      If the url equals to api prefix, empty string is returned.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                View path.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        mapViewToApi\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    mapViewToApi(path: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/api-mapper.ts:15\n                                        \n                                    \n            \n                            \n                                \n                                        Maps view path to resource URL. Can be overridden during configuration.\n            By default it maps path to API one to one.\n            Counterpart to {@link #mapApiToView}.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              path\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              View path, as in $location.path().\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Resource url, for e.g. HTTP requests.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export abstract class ApiMapper {\n\n  /**\n   * Maps view path to resource URL. Can be overridden during configuration.\n   * By default it maps path to API one to one.\n   *\n   * Counterpart to {@link #mapApiToView}.\n   *\n   * @param path View path, as in `$location.path()`.\n   * @returns Resource url, for e.g. HTTP requests.\n   */\n  abstract mapViewToApi(path: string): string;\n\n  /**\n   * Maps resource URL to view path. Can be overridden during configuration.\n   * By default it maps API url to view paths one to one.\n   *\n   * Counterpart to {@link #mapViewToApi}.\n   *\n   * @param url Resource url. It must be inside API namespace. If it is not, `null` is returned.\n   *                     If the url equals to api prefix, empty string is returned.\n   * @returns View path.\n   */\n  abstract mapApiToView(url: string): string | null;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseUrlNormalizer.html":{"url":"classes/BaseUrlNormalizer.html","title":"class - BaseUrlNormalizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseUrlNormalizer\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/url-normalizer.ts\n        \n\n            \n                Description\n            \n            \n                Generic implementation of ApiUrl.\nDefault is BrowserApiUrl.\n\n            \n\n            \n                Extends\n            \n            \n                    UrlNormalizer\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        getBaseHref\n                                    \n                                    \n                                            \n                                        getLocation\n                                    \n                                    \n                                        normalize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        getBaseHref\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getBaseHref()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        Returns base href.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Context path of the application. Protocol and host excluded.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        getLocation\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    getLocation()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:63\n                                        \n                                    \n            \n                            \n                                \n                                        Returns current location. It is used to resolve baseHref.\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     LocationInfo\n            \n                                        \n                                            \n                                                Context path of the application.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        normalize\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            normalize(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:28\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class UrlNormalizer {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseUrlNormalizer extends UrlNormalizer {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserUrlNormalizer extends BaseUrlNormalizer {\n\n  constructor(private readonly platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private readonly document: any) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigableRef.html":{"url":"classes/NavigableRef.html","title":"class - NavigableRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigableRef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/navigable.ts\n        \n\n            \n                Description\n            \n            \n                Injectable reference to Navigable.\nNote that this doesn't have to be immutable class.\n\n            \n\n\n\n\n\n\n\n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    navigable\n                                \n                            \n            \n                            \n                                \n                                    getnavigable()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/navigable.ts:29\n                                            \n                                        \n                                \n                                    \n                                            The actual Navigable instance.\n            Note that since this class is not immutable by definition, there is no guarantee its value won't change.\n            Therefore its recommended to always keep the NavigableRef instance instead of dereferencing it.\n            \n            \n                                            \n                                                Returns :     Navigable\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n            \n    \n\n\n    \n        import { FactoryProvider, Inject, InjectionToken, Optional, Self, SkipSelf } from '@angular/core';\nimport { resourceDataNavigableRef } from './resource-data';\n\nexport interface Navigable {\n\n  go(url: string): void;\n}\n\n/**\n * Safe-cast function for {@link Navigable} instances.\n * Returns `true` if `obj` is {@link Navigable}.\n */\nexport function isNavigable(obj: any): obj is Navigable {\n  return obj && typeof obj.go === 'function';\n}\n\n/**\n * Injectable reference to {@link Navigable}.\n * Note that this doesn't have to be immutable class.\n */\nexport abstract class NavigableRef {\n\n  /**\n   * The actual {@link Navigable} instance.\n   *\n   * Note that since this class is not immutable by definition, there is no guarantee its value won't change.\n   * Therefore its recommended to always keep the {@link NavigableRef} instance instead of dereferencing it.\n   */\n  abstract get navigable(): Navigable;\n}\n\nclass NavigableRefImpl extends NavigableRef {\n\n  constructor(public readonly navigable: Navigable) {\n    super();\n  }\n}\n\n/**\n * Creates immutable {@link NavigableRef} instance from given value.\n */\nexport function makeNavigableRef(value: Navigable): NavigableRef {\n  return new NavigableRefImpl(value);\n}\n\n/**\n * Token for top-level (root) {@link NavigableRef} instance.\n *\n * To provide it in your component, you might use {@link topLevelNavigableRef}, however see its docs for proper usage.\n */\nexport const TOP_LEVEL_NAVIGABLE = new InjectionToken('TOP_LEVEL_NAVIGABLE');\n\n\n/**\n * Provides {@link TOP_LEVEL_NAVIGABLE} reference. It honors existing instance, therefore its safe to declare it\n * in the nested components.\n * When there is no existing top-level reference available, current {@link NavigableRef} is used.\n *\n * Note that this requires {@link NavigableRef} to be provided by current component, regardless it being used or not.\n *\n * @see TOP_LEVEL_NAVIGABLE\n * @see NavigationRef\n * @see resourceDataNavigableRef\n */\nexport function topLevelNavigableRef(): FactoryProvider {\n  return {\n    provide: TOP_LEVEL_NAVIGABLE,\n    useFactory: topLevelNavigableFactory,\n    deps: [\n      [NavigableRef, new Self()],\n      [new Inject(TOP_LEVEL_NAVIGABLE), new SkipSelf(), new Optional()]\n    ]\n  };\n}\n\n/**\n * @internal\n * @see topLevelNavigableRef\n */\nexport function topLevelNavigableFactory(current: NavigableRef, existing?: NavigableRef): NavigableRef {\n  return existing || current;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigableRefImpl.html":{"url":"classes/NavigableRefImpl.html","title":"class - NavigableRefImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigableRefImpl\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/navigable.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NavigableRef\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        navigable\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(navigable: Navigable)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/navigable.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              navigable\n                                                              \n                                                                        Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        navigable\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    navigable:     Navigable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Navigable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/navigable.ts:34\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { FactoryProvider, Inject, InjectionToken, Optional, Self, SkipSelf } from '@angular/core';\nimport { resourceDataNavigableRef } from './resource-data';\n\nexport interface Navigable {\n\n  go(url: string): void;\n}\n\n/**\n * Safe-cast function for {@link Navigable} instances.\n * Returns `true` if `obj` is {@link Navigable}.\n */\nexport function isNavigable(obj: any): obj is Navigable {\n  return obj && typeof obj.go === 'function';\n}\n\n/**\n * Injectable reference to {@link Navigable}.\n * Note that this doesn't have to be immutable class.\n */\nexport abstract class NavigableRef {\n\n  /**\n   * The actual {@link Navigable} instance.\n   *\n   * Note that since this class is not immutable by definition, there is no guarantee its value won't change.\n   * Therefore its recommended to always keep the {@link NavigableRef} instance instead of dereferencing it.\n   */\n  abstract get navigable(): Navigable;\n}\n\nclass NavigableRefImpl extends NavigableRef {\n\n  constructor(public readonly navigable: Navigable) {\n    super();\n  }\n}\n\n/**\n * Creates immutable {@link NavigableRef} instance from given value.\n */\nexport function makeNavigableRef(value: Navigable): NavigableRef {\n  return new NavigableRefImpl(value);\n}\n\n/**\n * Token for top-level (root) {@link NavigableRef} instance.\n *\n * To provide it in your component, you might use {@link topLevelNavigableRef}, however see its docs for proper usage.\n */\nexport const TOP_LEVEL_NAVIGABLE = new InjectionToken('TOP_LEVEL_NAVIGABLE');\n\n\n/**\n * Provides {@link TOP_LEVEL_NAVIGABLE} reference. It honors existing instance, therefore its safe to declare it\n * in the nested components.\n * When there is no existing top-level reference available, current {@link NavigableRef} is used.\n *\n * Note that this requires {@link NavigableRef} to be provided by current component, regardless it being used or not.\n *\n * @see TOP_LEVEL_NAVIGABLE\n * @see NavigationRef\n * @see resourceDataNavigableRef\n */\nexport function topLevelNavigableRef(): FactoryProvider {\n  return {\n    provide: TOP_LEVEL_NAVIGABLE,\n    useFactory: topLevelNavigableFactory,\n    deps: [\n      [NavigableRef, new Self()],\n      [new Inject(TOP_LEVEL_NAVIGABLE), new SkipSelf(), new Optional()]\n    ]\n  };\n}\n\n/**\n * @internal\n * @see topLevelNavigableRef\n */\nexport function topLevelNavigableFactory(current: NavigableRef, existing?: NavigableRef): NavigableRef {\n  return existing || current;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceClient.html":{"url":"classes/ResourceClient.html","title":"class - ResourceClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceClient\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-client.ts\n        \n\n            \n                Description\n            \n            \n                Component that retrieves the data for given URL.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        fetch\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        fetch\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    fetch(uri: string, target: Navigable)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/resource-client.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                        Retrieves the data.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              uri\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URI the data should be retrieved from. Usually it is URL for HTTP request.\n            \n                                                            \n                                                            \n                                                              target\n                                                              \n                                                                      Navigable\n                                                              \n                                                              \n                                                              \n                                                              Navigable instance, to be passed to ViewData constructor.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Observable>\n            \n                                        \n                                            \n                                                Retrieved ViewData instance.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ResourceViewRegistry } from './resource-view-registry';\nimport { ViewTypeStrategy } from './view-type-strategy';\nimport { ViewData } from './view-data';\nimport { ViewDef } from './view-definition';\nimport { Navigable } from './navigable';\nimport { stringToJSON } from './utils/http-utils';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { scalar } from 'rxjs/internal/observable/scalar';\n\n\n/**\n * Component that retrieves the data for given URL.\n */\nexport abstract class ResourceClient {\n\n  /**\n   * Retrieves the data.\n   *\n   * @param uri URI the data should be retrieved from. Usually it is URL for HTTP request.\n   * @param target Navigable instance, to be passed to ViewData constructor.\n   * @returns Retrieved ViewData instance.\n   */\n  abstract fetch(uri: string, target: Navigable): Observable>;\n\n}\n\n/**\n * Default ResourceClient implementation, which uses HttpClient as backend.\n */\n@Injectable()\nexport class HttpResourceClient extends ResourceClient {\n\n  constructor(public readonly strategy: ViewTypeStrategy,\n              public readonly registry: ResourceViewRegistry,\n              public readonly http: HttpClient) {\n    super();\n  }\n\n  fetch(uri: string, target: Navigable): Observable> {\n    // Send request\n    return this.get(uri).pipe(\n      // Convert failure to success, if we know how to handle it (rethrow if we don't)\n      catchError(err => this.handleError(err)),\n      // This might throw exception, e.g. when response is malformed - it produces failed Observable then\n      map(response => this.resolve(uri, response, target)),\n    );\n  }\n\n  protected get(url: string): Observable> {\n    // Note: We need to set responseType to text, because if set to json,\n    // Angular will return error when response is not a valid JSON - We will rather parse it here.\n    // Its not nice, since we are duplicating bit of HttpClient, but I'm not aware of other way\n    return this.http.get(url, {observe: 'response', responseType: 'text'});\n  }\n\n  // noinspection JSMethodCanBeStatic\n  protected handleError(err: any): Observable> {\n    // Depends on the type\n    if (err instanceof HttpResponse) {\n      // Pass it through\n      return scalar(err);\n    }\n    // noinspection SuspiciousInstanceOfGuard\n    if (err instanceof HttpErrorResponse) {\n      let body: string | undefined;\n\n      if (!err.error) {\n        // No body provided, fallback to response error message\n        body = err.message;\n      } else if (typeof err.error.message === 'string') {\n        // Network failures and such\n        // err.error might be either Error or ErrorEvent, both having message property\n        body = err.error.message;\n      } else if (typeof err.error === 'string') {\n        // Generic error, usually returned by server as response body\n        // This assumes that since we used responseType:'text', error (body) should be un-parsed string as well\n        // Note: We don't handle json parse errors, since these should not happen\n        body = err.error;\n      } else {\n        // To avoid returning something unexpected, better to rethrow the error\n        return throwError(err);\n      }\n\n      // Treat is as non-failing response\n      return scalar(new HttpResponse({\n        body: body,\n        headers: err.headers,\n        status: err.status,\n        statusText: err.statusText,\n        url: err.url || undefined\n      }));\n    } else {\n      // Other errors propagate (resolve won't be called)\n      return throwError(err);\n    }\n  }\n\n  protected resolve(requestUrl: string, response: HttpResponse, target: Navigable): ViewData {\n    // Note: In browsers, this does not throw exception, in NodeJS, it does\n    // noinspection SuspiciousInstanceOfGuard\n    console.assert(response instanceof HttpResponse, 'response is not instanceof HttpResponse', response);\n\n    // Resolve type, if possible\n    const type = this.strategy.extractType(response) || '';\n    // Find view\n    const config = this.registry.match(type, response.status);\n    // Parse body\n    const body = this.parse(response.body, config);\n\n    // Construct and return ViewData\n    return {\n      target: target,\n      config: config,\n      type: type,\n      url: response.url || requestUrl,\n      status: response.status,\n      statusText: response.statusText,\n      headers: response.headers,\n      body: body,\n    };\n  }\n\n  // noinspection JSMethodCanBeStatic\n  protected parse(body: string | null, config: ViewDef): any | null {\n    // Don't parse empty body\n    if (!body) {\n      return null;\n    }\n\n    const responseType = config.responseType || 'json';\n    switch (responseType) {\n      case 'json':\n        // Parse JSON - unless body is already object, otherwise we expect string\n        return typeof body === 'object' ? body : stringToJSON(body);\n\n      case 'text':\n        // Return as-is - this assumes body is already string\n        return body;\n\n      default:\n        throw new Error(`Unsupported responseType: ${responseType}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceDataOfContext.html":{"url":"classes/ResourceDataOfContext.html","title":"class - ResourceDataOfContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceDataOfContext\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-data-of.ts\n        \n\n            \n                Description\n            \n            \n                Context for structural directive ResourceDataOfDirective.\nFor examples see the directive docs.\n\n            \n\n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(resource: ResourceData)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-data-of.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              resource\n                                                              \n                                                                        ResourceData\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    $implicit\n                                \n                            \n            \n                            \n                                \n                                    get$implicit()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data-of.ts:37\n                                            \n                                        \n                                \n                                    \n                                            Default variable value. Contains currently loaded data.\n            Never undefined.\n            Provides value from ResourceData.\n            \n            \n                                            \n                                                Returns :     ViewData\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    data\n                                \n                            \n            \n                            \n                                \n                                    getdata()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data-of.ts:47\n                                            \n                                        \n                                \n                                    \n                                            Contains currently loaded data.\n            Never undefined.\n            Provides value from ResourceData.\n            \n            \n                                            \n                                                Returns :     ViewData\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    loading\n                                \n                            \n            \n                            \n                                \n                                    getloading()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-data-of.ts:55\n                                            \n                                        \n                                \n                                    \n                                            Loading flag for this directive.\n            Provides value from ResourceData.\n            \n            \n                                            \n                                                Returns :     boolean\n            \n                                            \n                                    \n                                \n            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Self,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { ViewData } from '../view-data';\nimport { ResourceData, resourceDataNavigableRef } from '../resource-data';\nimport { Subscription } from 'rxjs';\nimport { bindUrl, isLocationReference, LocationReference } from '../location-reference';\nimport { ResourceOutletComponent } from './resource-outlet';\nimport { topLevelNavigableRef } from '../navigable';\nimport { ResourceContextDirective } from './resource-context';\n\n\n/**\n * Context for structural directive {@link ResourceDataOfDirective}.\n *\n * For examples see the directive docs.\n */\nexport class ResourceDataOfContext {\n  constructor(private readonly resource: ResourceData) {\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  /**\n   * Default variable value. Contains currently loaded data.\n   * Never undefined.\n   *\n   * Provides value from {@link ResourceData#data}.\n   */\n  get $implicit(): ViewData {\n    return this.resource.data;\n  }\n\n  /**\n   * Contains currently loaded data.\n   * Never undefined.\n   *\n   * Provides value from {@link ResourceData#data}.\n   */\n  get data(): ViewData {\n    return this.resource.data;\n  }\n\n  /**\n   * Loading flag for this directive.\n   * Provides value from {@link ResourceData#loading}.\n   */\n  get loading(): boolean {\n    return this.resource.loading;\n  }\n}\n\n\n/**\n * Structural directive, that loads the data from given source, and allows custom data representation.\n *\n * This is more complex variant of {@link ResourceOutletComponent}. It is needed when you need to show\n * some generic content along with viewed directive, which also depends on loaded data, like menu.\n *\n * Note that until issue [#15998]{@link https://github.com/angular/angular/issues/15998} is resolved,\n * this directive must be used in conjunction with {@link ResourceContextDirective}, as seen in the example.\n *\n * @example\n * \n * \n *   \n *   \n *\n *   \n *   \n *\n *   \n *   \n *     Back\n *   \n * \n */\n@Directive({\n  selector: '[resourceData][resourceDataOf]',\n  providers: [\n    ResourceData,\n    resourceDataNavigableRef(),\n    topLevelNavigableRef()\n  ]\n})\nexport class ResourceDataOfDirective implements OnInit, OnDestroy {\n\n  /**\n   * Emits event whenever underlying {@link ResourceData#url} changes.\n   *\n   * Note that there is no way to bind to this event when using asterisk (`*resourceData=`) syntax. This is Angular\n   * limitation.\n   *\n   * Example:\n   * ```html\n   *\n   *    \n   *\n   *```\n   */\n  @Output()\n  readonly urlChange = new EventEmitter();\n  private readonly context: ResourceDataOfContext;\n  private urlSubscription = Subscription.EMPTY;\n  private sourceSubscription = Subscription.EMPTY;\n\n  constructor(@Self() public readonly resource: ResourceData,\n              private readonly viewContainer: ViewContainerRef,\n              private readonly templateRef: TemplateRef) {\n    this.context = new ResourceDataOfContext(resource);\n  }\n\n  /**\n   * @internal\n   */\n  ngOnInit(): void {\n    this.viewContainer.createEmbeddedView(this.templateRef, this.context);\n\n    // Note: We don't need listen to this.urlChange, since we don't store the url, we just propagate event\n    this.urlSubscription = this.resource.urlChange.subscribe((value: string) => this.urlChange.emit(value));\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this.urlSubscription.unsubscribe();\n    this.sourceSubscription.unsubscribe();\n  }\n\n  /**\n   * Location, from which are data loaded.\n   *\n   * This might be either string (note that two-way binding is not directly supported for structural directives,\n   * see {@link #urlChange}), or {@link LocationReference}, which provides automatic two-way binding\n   * for the {@link LocationReference#url}.\n   */\n  @Input()\n  set resourceDataOf(value: string | LocationReference | undefined) {\n    // Remove old source (if any)\n    this.sourceSubscription.unsubscribe();\n\n    if (typeof value === 'string') {\n      // Simple one-way URL bind\n      this.resource.url = value;\n    } else if (isLocationReference(value)) {\n      // Bind urls to new\n      this.sourceSubscription = bindUrl(value, this.resource);\n    } else {\n      // Reset\n      this.resource.url = '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceViewContext.html":{"url":"classes/ResourceViewContext.html","title":"class - ResourceViewContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceViewContext\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/directives/resource-view.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            Readonly\n                                            Public\n                                        component\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        data\n                                    \n                                    \n                                            Readonly\n                                            Public\n                                        target\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        next\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Accessors\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        componentType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(component: ComponentRef, target: Navigable, data: BehaviorSubject>)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              component\n                                                              \n                                                                        ComponentRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              target\n                                                              \n                                                                        Navigable\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              data\n                                                              \n                                                                        BehaviorSubject>\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        next\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            next(value: ViewData)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:29\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              value\n                                                              \n                                                                      ViewData\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        component\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    component:     ComponentRef\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ComponentRef\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:20\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        data\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    data:     BehaviorSubject>\n            \n                                \n                            \n                                \n                                    \n                                        Type :     BehaviorSubject>\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:22\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Readonly\n                                            Public\n                                        target\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    target:     Navigable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Navigable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/directives/resource-view.ts:21\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n            \n                \n                    Accessors\n                \n                    \n                        \n                            \n                                \n                                    \n                                    componentType\n                                \n                            \n            \n                            \n                                \n                                    getcomponentType()\n                                \n                            \n                                        \n                                            \n                                                Defined in src/lib/src/directives/resource-view.ts:25\n                                            \n                                        \n            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Injector,\n  Input,\n  OnChanges,\n  Optional,\n  SimpleChanges,\n  StaticProvider,\n  ViewContainerRef\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ViewData } from '../view-data';\nimport { ActivatedView } from '../activated-view';\nimport { Navigable, NavigableRef } from '../navigable';\n\nclass ResourceViewContext {\n\n  constructor(public readonly component: ComponentRef,\n              public readonly target: Navigable,\n              public readonly data: BehaviorSubject>) {\n  }\n\n  get componentType() {\n    return this.component.componentType;\n  }\n\n  next(value: ViewData) {\n    this.data.next(value);\n  }\n}\n\n@Directive({\n  selector: 'resource-view'\n})\nexport class ResourceViewDirective implements OnChanges {\n\n  @Input()\n  data?: ViewData;\n\n  private current: ResourceViewContext | null = null;\n\n  constructor(private readonly viewContainer: ViewContainerRef,\n              private readonly resolver: ComponentFactoryResolver,\n              @Optional() private readonly navigableRef?: NavigableRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Show nothing when there is nothing to show\n    if (!this.data || !this.data.config || !this.data.config.component) {\n      this.destroy();\n      return;\n    }\n\n    // Is this same component as currently visible?\n    if (this.current\n      && this.data.config.component === this.current.componentType\n      // Note: data.target won't change during normal use\n      && this.data.target === this.current.target) {\n      // Propagate new value instead of component re-creation\n      this.current.next(this.data);\n    } else {\n      // Display new component (destroys old one)\n      this.render();\n    }\n  }\n\n  destroy() {\n    if (this.current) {\n      this.current.component.destroy();\n      this.current = null;\n    }\n  }\n\n  render() {\n    // Destroy current view\n    this.destroy();\n\n    // Ignore when there is nothing to render\n    if (!this.data || !this.data.config || !this.data.config.component) {\n      return;\n    }\n\n    // Prepare data observable\n    const dataSource = new BehaviorSubject>(this.data);\n    const target = this.data.target;\n\n    // Create component\n    const factory = this.resolver.resolveComponentFactory(this.data.config.component);\n    const providers: StaticProvider[] = [\n      {\n        provide: ActivatedView,\n        useValue: new ActivatedView(target, dataSource)\n      }\n    ];\n\n    const injector = Injector.create({providers: providers, parent: this.viewContainer.injector});\n    const component = this.viewContainer.createComponent(factory, this.viewContainer.length, injector, []);\n\n    // Store reference\n    this.current = new ResourceViewContext(component, target, dataSource);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortedArray.html":{"url":"classes/SortedArray.html","title":"class - SortedArray","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortedArray\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/sorted-array.ts\n        \n\n            \n                Description\n            \n            \n                Simple array wrapper that sorts on insert, and maintains insert-order for equal elements.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        array\n                                    \n                                    \n                                            Public\n                                        comparer\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        push\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(comparer: Comparer)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:7\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              comparer\n                                                              \n                                                                        Comparer\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        push\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            push(value: T)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                        Inserts the value while maintaining order defined by the comparer.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              value\n                                                              \n                                                                      T\n                                                              \n                                                              \n                                                              \n                                                              Inserted value.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        array\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    array:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : []\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            Public\n                                        comparer\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    comparer:     Comparer\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Comparer\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/lib/src/utils/sorted-array.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export type Comparer = (a: T, b: T) => number;\n\n/**\n * Simple array wrapper that sorts on insert, and maintains insert-order for equal elements.\n */\nexport class SortedArray {\n  array: Array = [];\n\n  constructor(public comparer: Comparer) {\n  }\n\n  /**\n   * Inserts the value while maintaining order defined by the comparer.\n   *\n   * @param value Inserted value.\n   */\n  push(value: T) {\n    const i = insertLocation(value, this.array, this.comparer);\n    this.array.splice(i + 1, 0, value);\n  }\n}\n\n/**\n * Compare values using (a: T, b: T) {\n  if (a === b) {\n    return 0;\n  }\n  return a (element: T, array: T[], comparer: Comparer, start: number, end: number): number {\n  if (array.length === 0) {\n    return -1;\n  }\n\n  const pivot = Math.floor((start + end) / 2);\n  const c = comparer(element, array[pivot]);\n\n  if (end - start (element: T, array: T[], comparer: Comparer): number {\n  // Find possible insert location\n  let i = locationFor(element, array, comparer, 0, array.length);\n\n  // We need to do append and maintain insert order\n  if (i >= 0) {\n    while (i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UrlNormalizer.html":{"url":"classes/UrlNormalizer.html","title":"class - UrlNormalizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UrlNormalizer\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/url-normalizer.ts\n        \n\n            \n                Description\n            \n            \n                Component for API URLs normalization.\nTakes in account base-href, location etc.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        normalize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        normalize\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    normalize(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/url-normalizer.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                        Normalizes the URL, using current base-href.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              URL to normalize. Might be relative, host-relative or protocol-relative.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                Normalized absolute URL.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT, LocationStrategy } from '@angular/common';\nimport { LocationInfo, parseUrl } from './utils/parse-url';\n\n\n/**\n * Component for API URLs normalization.\n * Takes in account base-href, location etc.\n */\nexport abstract class UrlNormalizer {\n\n  /**\n   * Normalizes the URL, using current base-href.\n   *\n   * @param url URL to normalize. Might be relative, host-relative or protocol-relative.\n   * @returns Normalized absolute URL.\n   */\n  abstract normalize(url: string): string;\n\n}\n\n/**\n * Generic implementation of ApiUrl.\n * Default is BrowserApiUrl.\n */\nexport abstract class BaseUrlNormalizer extends UrlNormalizer {\n\n  normalize(url: string): string {\n    // Analyze given URL - returns null when invalid\n    const urlInfo = parseUrl(url);\n\n    // Is url absolute?\n    if (urlInfo && urlInfo.protocol) {\n      // If so, just return original\n      return url;\n    }\n\n    // Parse base\n    const base = parseUrl(this.getBaseHref());\n    const location = this.getLocation();\n\n    // Relative paths must be combined, not replaced\n    // Note: if URL contains pathname, it cannot contain pathrelative\n    const pathrelative = !urlInfo.pathname ? (base.pathrelative || '') + (urlInfo.pathrelative || '') : '';\n\n    // Build\n    const n = {...location, ...base, ...urlInfo};\n    return `${n.protocol}//${n.host}${n.pathname}${pathrelative}`;\n  }\n\n  /**\n   * Returns base href.\n   *\n   * @returns Context path of the application. Protocol and host excluded.\n   */\n  abstract getBaseHref(): string;\n\n  /**\n   * Returns current location. It is used to resolve baseHref.\n   *\n   * @returns Context path of the application.\n   */\n  abstract getLocation(): LocationInfo;\n}\n\n@Injectable()\nexport class BrowserUrlNormalizer extends BaseUrlNormalizer {\n\n  constructor(private readonly platformStrategy: LocationStrategy,\n              @Inject(DOCUMENT)\n              private readonly document: any) {\n    super();\n  }\n\n  getBaseHref(): string {\n    // Note: We are using LocationStrategy, instead of getDom().getBaseHref(), so it can be mocked during tests\n    return this.platformStrategy.getBaseHref();\n  }\n\n  getLocation(): LocationInfo {\n    return this.document.location;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewTypeStrategy.html":{"url":"classes/ViewTypeStrategy.html","title":"class - ViewTypeStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewTypeStrategy\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                            \n                                        extractType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                            \n                                        extractType\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                        \n                                    extractType(response: ViewTypeResponse)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:32\n                                        \n                                    \n            \n                            \n                                \n                                        Extracts type from the server response, understandable by application.\n            Default implementation uses Content-Type header.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              response\n                                                              \n                                                                      ViewTypeResponse\n                                                              \n                                                              \n                                                              \n                                                              Actual response.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                Found response type. Null if not found.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param response Actual response.\n   * @returns Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-definition.ts\n        \n\n\n\n\n\n            \n                Indexable\n                    \n                        \n                            \n                                \n                                    [name: string]:    any\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:4\n                                        \n                                    \n                        \n                    \n            \n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\n\nexport interface Data {\n  readonly [name: string]: any;\n}\n\nexport type StatusType = number | string;\n\n/**\n * Defines view for given type.\n */\nexport interface ViewDef {\n\n  /**\n   * Component that is viewed when this view definition is matched against response.\n   * Mandatory. Don't forget to add it to modules `declarations`.\n   */\n  readonly component: Type;\n\n  /**\n   * Media type of the response.\n   * It supports wildcard characters '?' (any single character), '*' (zero or more characters).\n   *\n   * Unless status is set, this matches only 2xx (successful) status codes (see `status` property).\n   *\n   * To match any type (that is, fallback view), set the type to '*'.\n   */\n  readonly type: string | string[];\n\n  /**\n   * HTTP response status code, which is 3-digit integer.\n   * It supports wildcard characters '?' (any single character) at the end of the string - that is,\n   * expression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\n   * Wildcard character '*' is also supported, but has different meaning than usual - expression is still\n   * expanded to 3 characters. Which means, '2*' == '2??', and '*' == '???'.\n   * It might be array of values, handling multiple disjunct values.\n   *\n   * Default is '2xx', that is >=200 and \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Link.html":{"url":"interfaces/Link.html","title":"interface - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Link\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/hal-link.ts\n        \n\n            \n                Description\n            \n            \n                Hyperlink according to [JSON HAL specification draft]{@link https://tools.ietf.org/html/draft-kelly-json-hal-08}.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deprecation\n                                \n                                \n                                        href\n                                \n                                \n                                        hreflang\n                                \n                                \n                                        name\n                                \n                                \n                                        profile\n                                \n                                \n                                        templated\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deprecation\n                                    \n                                \n                                \n                                    \n                                        deprecation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Its presence indicates that the link is to be deprecated (i.e. removed) at a future date.\nIts value is a URL that SHOULD provide further information about the deprecation.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                    \n                                \n                                \n                                    \n                                        href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    URI according to RFC3986.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hreflang\n                                    \n                                \n                                \n                                    \n                                        hreflang:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    Its value is a string and is intended for indicating the language of the target resource (as defined by RFC5988).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    Its value MAY be used as a secondary key for selecting Link Objects, which share the same relation type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:41\n                                        \n                                    \n\n                            \n                                \n                                    Its value is a string which is a URI that hints about the profile of the target resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templated\n                                    \n                                \n                                \n                                    \n                                        templated:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:37\n                                        \n                                    \n\n                            \n                                \n                                    Its value is boolean and SHOULD be true when the Link Object's \"href\"\nproperty is a URI Template.\nIts value SHOULD be considered false if it is undefined or any other\nvalue than true.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    Its value is a string and is intended for labelling the link with a human-readable identifier (as defined by RFC5988).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/hal-link.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    Its value is a string used as a hint to indicate the media type expected when dereferencing the target resource.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Link {\n  /**\n   * URI according to RFC3986.\n   */\n  readonly href: string;\n  /**\n   * Its value is a string used as a hint to indicate the media type expected when dereferencing the target resource.\n   */\n  readonly type?: string;\n  /**\n   * Its presence indicates that the link is to be deprecated (i.e. removed) at a future date.\n   * Its value is a URL that SHOULD provide further information about the deprecation.\n   */\n  readonly deprecation?: string;\n  /**\n   * Its value MAY be used as a secondary key for selecting Link Objects, which share the same relation type.\n   */\n  readonly name?: string;\n  /**\n   * Its value is a string and is intended for labelling the link with a human-readable identifier (as defined by RFC5988).\n   */\n  readonly title?: string;\n  /**\n   * Its value is a string and is intended for indicating the language of the target resource (as defined by RFC5988).\n   */\n  readonly hreflang?: string;\n  /**\n   * Its value is boolean and SHOULD be true when the Link Object's \"href\"\n   * property is a URI Template.\n   *\n   * Its value SHOULD be considered false if it is undefined or any other\n   * value than true.\n   */\n  readonly templated?: boolean;\n  /**\n   * Its value is a string which is a URI that hints about the profile of the target resource.\n   */\n  readonly profile?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationInfo.html":{"url":"interfaces/LocationInfo.html","title":"interface - LocationInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocationInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/parse-url.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        pathname\n                                \n                                \n                                        protocol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathname\n                                    \n                                \n                                \n                                    \n                                        pathname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                    \n                                \n                                \n                                    \n                                        protocol:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        const URL_PATTERN = /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/;\n\nexport interface LocationInfo {\n  readonly protocol?: string;\n  readonly host?: string;\n  readonly pathname?: string;\n}\n\nexport interface UrlInfo extends LocationInfo {\n  readonly pathrelative?: string;\n}\n\n/**\n * Rough URL parser.\n *\n * @param url URL to be parsed. Must be well-formed.\n * @returns Parsed object or null for relative\n */\nexport function parseUrl(url: string): UrlInfo {\n  const match = url.match(URL_PATTERN);\n\n  if (match) {\n    // URL parsed\n    const info: {\n      protocol?: string;\n      host?: string;\n      pathname?: string;\n    } = {};\n\n    if (match[1] !== undefined) {\n      info.protocol = match[1];\n    }\n    if (match[2] !== undefined) {\n      info.host = match[2];\n    }\n    if (match[3] !== undefined) {\n      info.pathname = match[3];\n    }\n\n    // Return built object\n    return info;\n  } else if (url [0] === '/') {\n    // Absolute url\n    return {\n      pathname: url\n    };\n  } else {\n    // Relative\n    return {\n      pathrelative: url\n    };\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationReference.html":{"url":"interfaces/LocationReference.html","title":"interface - LocationReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocationReference\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/location-reference.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                                \n                                        urlChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/location-reference.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlChange\n                                    \n                                \n                                \n                                    \n                                        urlChange:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/location-reference.ts:5\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, Subscription } from 'rxjs';\n\nexport interface LocationReference {\n  url: string;\n  urlChange: Observable;\n}\n\nexport function isLocationReference(obj: any): obj is LocationReference {\n  return obj && 'url' in obj && obj.urlChange instanceof Observable;\n}\n\nexport function bindUrl(source: LocationReference, target: LocationReference): Subscription {\n  // Two-way binding, and return combined subscription for both\n  let s = source.urlChange.subscribe(url => target.url = url);\n  s = s.add(target.urlChange.subscribe(url => source.url = url));\n\n  // Set initial value (urlChange will probably be cold - and if not, it should not invoke any action after subscribe)\n  target.url = source.url;\n\n  // Return subscription\n  return s;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Navigable.html":{"url":"interfaces/Navigable.html","title":"interface - Navigable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Navigable\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/navigable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    go\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        go\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            go(url: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/navigable.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              url\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { FactoryProvider, Inject, InjectionToken, Optional, Self, SkipSelf } from '@angular/core';\nimport { resourceDataNavigableRef } from './resource-data';\n\nexport interface Navigable {\n\n  go(url: string): void;\n}\n\n/**\n * Safe-cast function for {@link Navigable} instances.\n * Returns `true` if `obj` is {@link Navigable}.\n */\nexport function isNavigable(obj: any): obj is Navigable {\n  return obj && typeof obj.go === 'function';\n}\n\n/**\n * Injectable reference to {@link Navigable}.\n * Note that this doesn't have to be immutable class.\n */\nexport abstract class NavigableRef {\n\n  /**\n   * The actual {@link Navigable} instance.\n   *\n   * Note that since this class is not immutable by definition, there is no guarantee its value won't change.\n   * Therefore its recommended to always keep the {@link NavigableRef} instance instead of dereferencing it.\n   */\n  abstract get navigable(): Navigable;\n}\n\nclass NavigableRefImpl extends NavigableRef {\n\n  constructor(public readonly navigable: Navigable) {\n    super();\n  }\n}\n\n/**\n * Creates immutable {@link NavigableRef} instance from given value.\n */\nexport function makeNavigableRef(value: Navigable): NavigableRef {\n  return new NavigableRefImpl(value);\n}\n\n/**\n * Token for top-level (root) {@link NavigableRef} instance.\n *\n * To provide it in your component, you might use {@link topLevelNavigableRef}, however see its docs for proper usage.\n */\nexport const TOP_LEVEL_NAVIGABLE = new InjectionToken('TOP_LEVEL_NAVIGABLE');\n\n\n/**\n * Provides {@link TOP_LEVEL_NAVIGABLE} reference. It honors existing instance, therefore its safe to declare it\n * in the nested components.\n * When there is no existing top-level reference available, current {@link NavigableRef} is used.\n *\n * Note that this requires {@link NavigableRef} to be provided by current component, regardless it being used or not.\n *\n * @see TOP_LEVEL_NAVIGABLE\n * @see NavigationRef\n * @see resourceDataNavigableRef\n */\nexport function topLevelNavigableRef(): FactoryProvider {\n  return {\n    provide: TOP_LEVEL_NAVIGABLE,\n    useFactory: topLevelNavigableFactory,\n    deps: [\n      [NavigableRef, new Self()],\n      [new Inject(TOP_LEVEL_NAVIGABLE), new SkipSelf(), new Optional()]\n    ]\n  };\n}\n\n/**\n * @internal\n * @see topLevelNavigableRef\n */\nexport function topLevelNavigableFactory(current: NavigableRef, existing?: NavigableRef): NavigableRef {\n  return existing || current;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyHeaders.html":{"url":"interfaces/ReadOnlyHeaders.html","title":"interface - ReadOnlyHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyHeaders\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/read-only-headers.ts\n        \n\n            \n                Description\n            \n            \n                Interface that serves as read-only accessor to the {@link HttpHeaders}.\nAlso allows easy custom implementation and decouples it from HTTP.\nEmpty header collection is provided in the {@link NO_HEADERS}.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                                \n                                    getAll\n                                \n                                \n                                    has\n                                \n                                \n                                    keys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        get\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            get(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        Returns first header that matches given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        getAll\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            getAll(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                        Returns list of header values for a given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     [] | null\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        has\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            has(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:11\n                                        \n                                    \n            \n                            \n                                \n                                        Checks for existence of header by given name.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        keys\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n            keys()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/lib/src/read-only-headers.ts:21\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the names of the headers.\n            \n            \n                                        \n                                            Returns :     string[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ReadOnlyHeaders {\n  /**\n   * Checks for existence of header by given name.\n   */\n  has(name: string): boolean;\n\n  /**\n   * Returns first header that matches given name.\n   */\n  get(name: string): string | null;\n\n  /**\n   * Returns the names of the headers.\n   */\n  keys(): string[];\n\n  /**\n   * Returns list of header values for a given name.\n   */\n  getAll(name: string): string[] | null;\n}\n\n/**\n * Dummy implementation of {@link ReadOnlyHeaders} that never returns anything.\n */\nexport const NO_HEADERS: ReadOnlyHeaders = {\n  has(name: string): boolean {\n    return false;\n  },\n\n  get(name: string): string | null {\n    return null;\n  },\n\n  keys(): string[] {\n    return [];\n  },\n\n  getAll(name: string): string[] | null {\n    return null;\n  }\n};\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceRouterOptions.html":{"url":"interfaces/ResourceRouterOptions.html","title":"interface - ResourceRouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceRouterOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/resource-router-module.ts\n        \n\n            \n                Description\n            \n            \n                Set of global configuration options for ResourceRouterModule.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        prefix\n                                \n                                \n                                        resourceClient\n                                \n                                \n                                        useHash\n                                \n                                \n                                        viewTypeStrategy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                    \n                                \n                                \n                                    \n                                        prefix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:54\n                                        \n                                    \n\n                            \n                                \n                                    Prefix for the URL. Can be base-relative, host-relative or absolute.\nAlways should however end with slash ('/').\nWhen using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\nThat is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\nAnother way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resourceClient\n                                    \n                                \n                                \n                                    \n                                        resourceClient:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:73\n                                        \n                                    \n\n                            \n                                \n                                    Changes implementation of ResourceClient.\nDefault is HttpResourceClient.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useHash\n                                    \n                                \n                                \n                                    \n                                        useHash:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:61\n                                        \n                                    \n\n                            \n                                \n                                    Enables hash-bang navigation mode. Default is HTML5 mode.\nRead {@link #prefix} details when setting to true.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewTypeStrategy\n                                    \n                                \n                                \n                                    \n                                        viewTypeStrategy:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/resource-router-module.ts:67\n                                        \n                                    \n\n                            \n                                \n                                    Changes implementation of ViewTypeStrategy.\nDefault is HeaderViewTypeStrategy using Content-Type header.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  APP_BASE_HREF,\n  CommonModule,\n  HashLocationStrategy,\n  Location,\n  LocationStrategy,\n  PathLocationStrategy,\n  PlatformLocation\n} from '@angular/common';\nimport {\n  ANALYZE_FOR_ENTRY_COMPONENTS,\n  Inject,\n  InjectionToken,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  Type\n} from '@angular/core';\nimport { ApiMapper } from './api-mapper';\nimport { ApiLocation } from './api-location';\nimport { HeaderViewTypeStrategy, ViewTypeStrategy } from './view-type-strategy';\nimport { RESOURCE_VIEWS, ResourceViewRegistry } from './resource-view-registry';\nimport { ViewDef } from './view-definition';\nimport { ResourceLinkDirective } from './directives/resource-link';\nimport { ResourceLinkWithHrefDirective } from './directives/resource-link-with-href';\nimport { ResourceOutletComponent } from './directives/resource-outlet';\nimport { HttpResourceClient, ResourceClient } from './resource-client';\nimport { ResourceDataOfDirective } from './directives/resource-data-of';\nimport { ResourceContextDirective } from './directives/resource-context';\nimport { ResourceViewDirective } from './directives/resource-view';\nimport { DefaultEmptyComponent } from './components/default-empty.component';\nimport { DefaultErrorComponent } from './components/default-error.component';\nimport { MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING } from './system-media-types';\nimport { BrowserUrlNormalizer, UrlNormalizer } from './url-normalizer';\nimport { APP_API_PREFIX, SingleApiMapper } from './single-api-mapper';\n\n\nexport const RESOURCE_ROUTER_CONFIGURATION = new InjectionToken('RESOURCE_ROUTER_CONFIGURATION');\n\n\n/**\n * Set of global configuration options for {@link ResourceRouterModule}.\n */\nexport interface ResourceRouterOptions {\n  /**\n   * Prefix for the URL. Can be base-relative, host-relative or absolute.\n   * Always should however end with slash ('/').\n   *\n   * When using hash-bang navigation mode ({@link useHash}=true), this must be either full context path or absolute path.\n   * That is, either '/my/context/api/' or 'http://example.com/my/context/api'. Relative path 'api/' won't work.\n   *\n   * Another way is to set {@link APP_BASE_HREF} explicitly - HashLocationStrategy does not use  tag.\n   */\n  readonly prefix: string;\n\n  /**\n   * Enables hash-bang navigation mode. Default is HTML5 mode.\n   *\n   * Read {@link #prefix} details when setting to true.\n   */\n  readonly useHash?: boolean;\n\n  /**\n   * Changes implementation of {@link ViewTypeStrategy}.\n   * Default is {@link HeaderViewTypeStrategy} using `Content-Type` header.\n   */\n  readonly viewTypeStrategy?: Type;\n\n  /**\n   * Changes implementation of {@link ResourceClient}.\n   * Default is {@link HttpResourceClient}.\n   */\n  readonly resourceClient?: Type;\n}\n\n\n@NgModule({\n  declarations: [\n    ResourceOutletComponent,\n    ResourceDataOfDirective,\n    ResourceContextDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective,\n    DefaultEmptyComponent,\n    DefaultErrorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ResourceOutletComponent,\n    ResourceDataOfDirective,\n    ResourceContextDirective,\n    ResourceViewDirective,\n    ResourceLinkDirective,\n    ResourceLinkWithHrefDirective\n  ]\n})\nexport class ResourceRouterModule {\n\n  static configure(options: ResourceRouterOptions): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation,\n            [new Inject(APP_BASE_HREF), new Optional()],\n            RESOURCE_ROUTER_CONFIGURATION\n          ]\n        },\n        Location,\n        {\n          provide: UrlNormalizer,\n          useClass: BrowserUrlNormalizer\n        },\n        {\n          provide: ApiMapper,\n          useClass: SingleApiMapper\n        },\n        ApiLocation,\n        ResourceViewRegistry,\n        {\n          provide: APP_API_PREFIX,\n          useValue: options.prefix\n        },\n        {\n          provide: RESOURCE_ROUTER_CONFIGURATION,\n          useValue: options\n        },\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: [emptyView(), errorView()],\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: [DefaultErrorComponent, DefaultEmptyComponent],\n          multi: true\n        },\n        {\n          provide: ViewTypeStrategy,\n          useClass: options.viewTypeStrategy || HeaderViewTypeStrategy\n        },\n        {\n          provide: ResourceClient,\n          useClass: options.resourceClient || HttpResourceClient\n        }\n      ]\n    };\n  }\n\n  static forTypes(views: ViewDef[]): ModuleWithProviders {\n    return {\n      ngModule: ResourceRouterModule,\n      providers: [\n        {\n          provide: RESOURCE_VIEWS,\n          useValue: views,\n          multi: true\n        },\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: views,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n\n/**\n * Internal factory function, exported only for AOT support.\n */\nexport function provideLocationStrategy(platformLocationStrategy: PlatformLocation, baseHref: string, options: ResourceRouterOptions) {\n  return options.useHash\n    ? new HashLocationStrategy(platformLocationStrategy, baseHref)\n    : new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n * @internal\n */\nexport function emptyView(): ViewDef {\n  return {\n    component: DefaultEmptyComponent,\n    status: 204,\n    type: [MEDIA_TYPE_ROUTER_EMPTY, MEDIA_TYPE_ROUTER_LOADING],\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n/**\n * Internal factory function, exported only for AOT support.\n * @internal\n */\nexport function errorView(): ViewDef {\n  return {\n    component: DefaultErrorComponent,\n    status: '*',\n    type: '*',\n    responseType: 'text',\n    quality: Number.MIN_SAFE_INTEGER\n  };\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlInfo.html":{"url":"interfaces/UrlInfo.html","title":"interface - UrlInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UrlInfo\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/utils/parse-url.ts\n        \n\n\n            \n                Extends\n            \n            \n                    LocationInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pathrelative\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pathrelative\n                                    \n                                \n                                \n                                    \n                                        pathrelative:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/utils/parse-url.ts:10\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        const URL_PATTERN = /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/;\n\nexport interface LocationInfo {\n  readonly protocol?: string;\n  readonly host?: string;\n  readonly pathname?: string;\n}\n\nexport interface UrlInfo extends LocationInfo {\n  readonly pathrelative?: string;\n}\n\n/**\n * Rough URL parser.\n *\n * @param url URL to be parsed. Must be well-formed.\n * @returns Parsed object or null for relative\n */\nexport function parseUrl(url: string): UrlInfo {\n  const match = url.match(URL_PATTERN);\n\n  if (match) {\n    // URL parsed\n    const info: {\n      protocol?: string;\n      host?: string;\n      pathname?: string;\n    } = {};\n\n    if (match[1] !== undefined) {\n      info.protocol = match[1];\n    }\n    if (match[2] !== undefined) {\n      info.host = match[2];\n    }\n    if (match[3] !== undefined) {\n      info.pathname = match[3];\n    }\n\n    // Return built object\n    return info;\n  } else if (url [0] === '/') {\n    // Absolute url\n    return {\n      pathname: url\n    };\n  } else {\n    // Relative\n    return {\n      pathrelative: url\n    };\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewData.html":{"url":"interfaces/ViewData.html","title":"interface - ViewData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewData\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        config\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                                \n                                        statusText\n                                \n                                \n                                        target\n                                \n                                \n                                        type\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:15\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     ViewDef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewDef\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     ReadOnlyHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadOnlyHeaders\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:14\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                    \n                                \n                                \n                                    \n                                        statusText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:13\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     Navigable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Navigable\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-data.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import { ViewDef } from './view-definition';\nimport { ReadOnlyHeaders } from './read-only-headers';\nimport { Navigable } from './navigable';\n\n\nexport interface ViewData {\n\n  readonly target: Navigable;\n  readonly config: ViewDef;\n  readonly type: string;\n  readonly url: string;\n  readonly status: number;\n  readonly statusText: string;\n  readonly headers: ReadOnlyHeaders;\n  readonly body: T;\n\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewDef.html":{"url":"interfaces/ViewDef.html","title":"interface - ViewDef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewDef\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-definition.ts\n        \n\n            \n                Description\n            \n            \n                Defines view for given type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                        data\n                                \n                                \n                                        noWildcards\n                                \n                                \n                                        quality\n                                \n                                \n                                        resolve\n                                \n                                \n                                        responseType\n                                \n                                \n                                        status\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    Component that is viewed when this view definition is matched against response.\nMandatory. Don't forget to add it to modules declarations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:90\n                                        \n                                    \n\n                            \n                                \n                                    Values that are passed to the view. These values are not resolved in any way - observables remains observables,\nfunctions are not called.\nTo have resolved data, use resolve property.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noWildcards\n                                    \n                                \n                                \n                                    \n                                        noWildcards:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:102\n                                        \n                                    \n\n                            \n                                \n                                    Disables wildcard character parsing in type property.\nNote: Wildcards in status will still work.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                    \n                                \n                                \n                                    \n                                        quality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:73\n                                        \n                                    \n\n                            \n                                \n                                    Similar to quality in Accept header, except it accepts any number, not just range 0..1.\nUsually it won't have to be overridden, since typical application configuration is to have many specific types\nand one wildcard as the fallback view.\nIf undefined, it is calculated from type by following rules:\n\nType equal to '*' has quality of 0.0.\nType with any wildcard has quality of 0.5\nType without wildcard has quality of 1.0.\n\nNumber of wildcard characters is insignificant.\nOtherwise it maintains order of definition (note that you should never rely on this across modules).\nIt is recommended to define views with low quality (wildcards) only on application module level, domain-specific modules\nshould always match domain-specific types. Defining it all across application makes it hard to maintain and application\nbehavior might be non-deterministic.\nExample:\nTODO show how same wildcards are treated and how to override quality.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:95\n                                        \n                                    \n\n                            \n                                \n                                    TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                    \n                                \n                                \n                                    \n                                        responseType:     \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"json\" | \"text\"\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:83\n                                        \n                                    \n\n                            \n                                \n                                    Type of the parser, which should be used to produce final body.\nDefault is 'json'. If other response type is required (like blob for images), it must be set accordingly.\nNote that 'arraybuffer' and 'blob' are not supported right now. For proper support, responseType must be set before\nrequest is sent, however we don't know what view will consume the given request, so we don't know responseType\nwhen the request is being sent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     StatusType | []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StatusType | []\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:50\n                                        \n                                    \n\n                            \n                                \n                                    HTTP response status code, which is 3-digit integer.\nIt supports wildcard characters '?' (any single character) at the end of the string - that is,\nexpression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\nWildcard character '' is also supported, but has different meaning than usual - expression is still\nexpanded to 3 characters. Which means, '2' == '2??', and '*' == '???'.\nIt might be array of values, handling multiple disjunct values.\nDefault is '2xx', that is >=200 and \nSpecificity is calculated by number of wildcard positions (since there is 3 character limit):\n\n999\n99?\n9??\n???\n\nNote that both status and type must be matched. To match specific status without any type, set type to ''.\nTo match anything, set both to ''.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string | []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | []\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-definition.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    Media type of the response.\nIt supports wildcard characters '?' (any single character), '*' (zero or more characters).\nUnless status is set, this matches only 2xx (successful) status codes (see status property).\nTo match any type (that is, fallback view), set the type to '*'.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n\nexport interface Data {\n  readonly [name: string]: any;\n}\n\nexport type StatusType = number | string;\n\n/**\n * Defines view for given type.\n */\nexport interface ViewDef {\n\n  /**\n   * Component that is viewed when this view definition is matched against response.\n   * Mandatory. Don't forget to add it to modules `declarations`.\n   */\n  readonly component: Type;\n\n  /**\n   * Media type of the response.\n   * It supports wildcard characters '?' (any single character), '*' (zero or more characters).\n   *\n   * Unless status is set, this matches only 2xx (successful) status codes (see `status` property).\n   *\n   * To match any type (that is, fallback view), set the type to '*'.\n   */\n  readonly type: string | string[];\n\n  /**\n   * HTTP response status code, which is 3-digit integer.\n   * It supports wildcard characters '?' (any single character) at the end of the string - that is,\n   * expression '?00' is forbidden. Character 'x' is alias for '?', for better readability.\n   * Wildcard character '*' is also supported, but has different meaning than usual - expression is still\n   * expanded to 3 characters. Which means, '2*' == '2??', and '*' == '???'.\n   * It might be array of values, handling multiple disjunct values.\n   *\n   * Default is '2xx', that is >=200 and \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewTypeResponse.html":{"url":"interfaces/ViewTypeResponse.html","title":"interface - ViewTypeResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewTypeResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/src/view-type-strategy.ts\n        \n\n            \n                Description\n            \n            \n                Helper interface with subset of HttpResponse fields, for better abstraction.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    The response body, or null if one was not returned.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     ReadOnlyHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadOnlyHeaders\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    All response headers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/lib/src/view-type-strategy.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Response status code.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { normalizeMediaType } from './utils/normalize-media-type';\nimport { ReadOnlyHeaders } from './read-only-headers';\n\n/**\n * Helper interface with subset of HttpResponse fields, for better abstraction.\n */\nexport interface ViewTypeResponse {\n  /**\n   * All response headers.\n   */\n  readonly headers: ReadOnlyHeaders;\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: any;\n}\n\nexport abstract class ViewTypeStrategy {\n\n  /**\n   * Extracts type from the server response, understandable by application.\n   * Default implementation uses `Content-Type` header.\n   *\n   * @param response Actual response.\n   * @returns Found response type. Null if not found.\n   */\n  abstract extractType(response: ViewTypeResponse): string | null;\n}\n\n/**\n * Extracts type from the HTTP header. By default its `Content-Type`.\n */\n@Injectable()\nexport class HeaderViewTypeStrategy implements ViewTypeStrategy {\n\n  protected headerName = 'content-type';\n\n  extractType(response: ViewTypeResponse): string | null {\n    const contentType = response.headers ? response.headers.get(this.headerName) : null;\n    return contentType ? this.normalizeMediaType(contentType) : null;\n  }\n\n  //noinspection JSMethodCanBeStatic\n  normalizeMediaType(contentType: string): string {\n    // This is overridable\n    return normalizeMediaType(contentType);\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bindUrl\n                        \n                        \n                            debugLog\n                        \n                        \n                            defaultComparer\n                        \n                        \n                            escapeRegExpPattern\n                        \n                        \n                            isLocationReference\n                        \n                        \n                            isNavigable\n                        \n                        \n                            makeNavigableRef\n                        \n                        \n                            normalizeMediaType\n                        \n                        \n                            parseUrl\n                        \n                        \n                            provideLocationStrategy\n                        \n                        \n                            resourceDataNavigableRef\n                        \n                        \n                            simpleTypeQualityEvaluator\n                        \n                        \n                            statusQualityEvaluator\n                        \n                        \n                            topLevelNavigableRef\n                        \n                        \n                            wildcardToRegex\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/location-reference.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                bindUrl\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    bindUrl(source: typeReference, target: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      source\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      target\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                isLocationReference\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    isLocationReference(obj: any)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      obj\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/debug-log.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                debugLog\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    debugLog()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/lib/src/utils/sorted-array.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                defaultComparer\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    defaultComparer(a: typeReference, b: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Compare values using \n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      a\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      First value to be compared.\n    \n                                                    \n                                                    \n                                                      b\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      Second value to be compared.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/wildcard-to-regex.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                escapeRegExpPattern\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    escapeRegExpPattern(s: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Converts any string to regular expression, which matches it. Handles special RegExp characters.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      s\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Any string.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                wildcardToRegex\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    wildcardToRegex(wildcard: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Converts wildcard pattern with ? and * characters to regular expression.\n    Usage:\n    wildcardToRegex('*.js').test('foo.js') == true\n    wildcardToRegex('*.js').test('foo.jsx') == false\n    wildcardToRegex('image/*').test('image/png') == true\n    wildcardToRegex('image/*').test('text/plain') == false\n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      wildcard\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Wildcard pattern, supports ? and * characters.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/navigable.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                isNavigable\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    isNavigable(obj: any)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Safe-cast function for Navigable instances.\n    Returns true if obj is Navigable.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      obj\n                                                      \n                                                              any\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                makeNavigableRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    makeNavigableRef(value: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Creates immutable NavigableRef instance from given value.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      value\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                topLevelNavigableRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    topLevelNavigableRef()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/lib/src/utils/normalize-media-type.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                normalizeMediaType\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    normalizeMediaType(mimeType: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Normalizes the media type. Removes format suffix (everything after +), and prepends application/ if there is\n    just subtype provided.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      mimeType\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Media type to match.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/utils/parse-url.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                parseUrl\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    parseUrl(url: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Rough URL parser.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      url\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      URL to be parsed. Must be well-formed.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/resource-router-module.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                provideLocationStrategy\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    provideLocationStrategy(platformLocationStrategy: typeReference, baseHref: string, options: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Internal factory function, exported only for AOT support.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      platformLocationStrategy\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      baseHref\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      options\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n    src/lib/src/resource-data.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                resourceDataNavigableRef\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    resourceDataNavigableRef()\n                        \n                    \n    \n    \n    \n                \n            \n    \n    src/lib/src/quality-evaluator.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                simpleTypeQualityEvaluator\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    simpleTypeQualityEvaluator(type: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                View type evaluator function, that returns:\n    0 for pure wildcard types (like '')\n    0.5 for types containing wildcard (like 'aaa/')\n    1 for types without wildcard characters.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      type\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Type to evaluate.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                statusQualityEvaluator\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    statusQualityEvaluator(status: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n                                Response status code pattern quality evaluator.\n    0 for pure wildcard patterns (like '*' or '???')\n    1 for exact values (like '204')\n    otherwise its ration of wildcard to number characters. That is '2??' is 0.333, '20?' is 0.666.\n    This function assumes all status strings has constant length. Otherwise values would be inconsistent.\n    \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      status\n                                                      \n                                                              string\n                                                      \n                                                      \n                                                      \n                                                      Status to evaluate.\n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_API_PREFIX\n                        \n                        \n                            MEDIA_TYPE_NORMALIZER\n                        \n                        \n                            MEDIA_TYPE_ROUTER_EMPTY\n                        \n                        \n                            MEDIA_TYPE_ROUTER_ERROR\n                        \n                        \n                            MEDIA_TYPE_ROUTER_LOADING\n                        \n                        \n                            NO_HEADERS\n                        \n                        \n                            RESOURCE_ROUTER_CONFIGURATION\n                        \n                        \n                            RESOURCE_VIEWS\n                        \n                        \n                            TARGET_SELF\n                        \n                        \n                            TARGET_TOP\n                        \n                        \n                            TOP_LEVEL_NAVIGABLE\n                        \n                        \n                            TYPE_QUALITY_EVALUATOR\n                        \n                        \n                            URL_PATTERN\n                        \n                        \n                            XSSI_PREFIX\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/single-api-mapper.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                APP_API_PREFIX\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            APP_API_PREFIX:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('APP_API_PREFIX')\n                            \n                        \n    \n                    \n                        \n                            Prefix for the URL. Can be base-relative, host-relative or absolute.\n    Always should end with slash '/'.\n    \n                        \n                    \n    \n                \n            \n    \n    src/lib/src/utils/normalize-media-type.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_NORMALIZER\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_NORMALIZER:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /\\s*[+;].*$/\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/system-media-types.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_EMPTY\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_EMPTY:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/empty'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_ERROR\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_ERROR:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/error'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                MEDIA_TYPE_ROUTER_LOADING\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MEDIA_TYPE_ROUTER_LOADING:     \n    \n                        \n                    \n                        \n                            \n                                Default value : 'router/loading'\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/read-only-headers.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                NO_HEADERS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            NO_HEADERS:     ReadOnlyHeaders\n    \n                        \n                    \n                        \n                            \n                                Type :     ReadOnlyHeaders\n    \n                            \n                        \n                        \n                            \n                                Default value : {\n      has(name: string): boolean {\n        return false;\n      },\n    \n      get(name: string): string | null {\n        return null;\n      },\n    \n      keys(): string[] {\n        return [];\n      },\n    \n      getAll(name: string): string[] | null {\n        return null;\n      }\n    }\n                            \n                        \n    \n                    \n                        \n                            Dummy implementation of ReadOnlyHeaders that never returns anything.\n    \n                        \n                    \n    \n                \n            \n    \n    src/lib/src/resource-router-module.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                RESOURCE_ROUTER_CONFIGURATION\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESOURCE_ROUTER_CONFIGURATION:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('RESOURCE_ROUTER_CONFIGURATION')\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/resource-view-registry.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                RESOURCE_VIEWS\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            RESOURCE_VIEWS:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('RESOURCE_VIEWS')\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TYPE_QUALITY_EVALUATOR\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TYPE_QUALITY_EVALUATOR:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('TYPE_QUALITY_EVALUATOR')\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/directives/resource-link.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                TARGET_SELF\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TARGET_SELF:     \n    \n                        \n                    \n                        \n                            \n                                Default value : '_self'\n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                TARGET_TOP\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TARGET_TOP:     \n    \n                        \n                    \n                        \n                            \n                                Default value : '_top'\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/navigable.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                TOP_LEVEL_NAVIGABLE\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            TOP_LEVEL_NAVIGABLE:     \n    \n                        \n                    \n                        \n                            \n                                Default value : new InjectionToken('TOP_LEVEL_NAVIGABLE')\n                            \n                        \n    \n                    \n                        \n                            Token for top-level (root) NavigableRef instance.\n    To provide it in your component, you might use {@link topLevelNavigableRef}, however see its docs for proper usage.\n    \n                        \n                    \n    \n                \n            \n    \n    src/lib/src/utils/parse-url.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                URL_PATTERN\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            URL_PATTERN:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^(\\w+:)?\\/\\/([^/]+(?::\\d+)?)?(\\/.*)?$/\n                            \n                        \n    \n    \n                \n            \n    \n    src/lib/src/utils/http-utils.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                XSSI_PREFIX\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            XSSI_PREFIX:     \n    \n                        \n                    \n                        \n                            \n                                Default value : /^\\)]}',?\\n/\n                            \n                        \n    \n                    \n                        \n                            Cross-site scripting prefix. Copied from HttpXhrBackend.\n    \n                        \n                    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparer\n                        \n                        \n                            StatusType\n                        \n                        \n                            TargetType\n                        \n                        \n                            TypeQualityEvaluator\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/src/utils/sorted-array.ts\n    \n            \n                \n                    \n                        \n                            \n                            Comparer\n                        \n                    \n                    \n                        \n                            Comparer()\n                        \n                    \n                \n            \n    \n    src/lib/src/view-definition.ts\n    \n            \n                \n                    \n                        \n                            \n                            StatusType\n                        \n                    \n                    \n                        \n                            StatusType:     number | string\n    \n                        \n                    \n                \n            \n    \n    src/lib/src/directives/resource-link.ts\n    \n            \n                \n                    \n                        \n                            \n                            TargetType\n                        \n                    \n                    \n                        \n                            TargetType:     Navigable |  | \n    \n                        \n                    \n                \n            \n    \n    src/lib/src/quality-evaluator.ts\n    \n            \n                \n                    \n                        \n                            \n                            TypeQualityEvaluator\n                        \n                    \n                        \n                            \n                                Type evaluator function definition.\n    \n                            \n                        \n                    \n                        \n                            TypeQualityEvaluator()\n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/lib/src/activated-view.ts\n            \n            \n                class\n            \n            \n                ActivatedView\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    src/lib/src/api-location.ts\n            \n            \n                injectable\n            \n            \n                ApiLocation\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                    src/lib/src/api-mapper.ts\n            \n            \n                class\n            \n            \n                ApiMapper\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/lib/src/components/default-empty.component.ts\n            \n            \n                component\n            \n            \n                DefaultEmptyComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/components/default-error.component.ts\n            \n            \n                component\n            \n            \n                DefaultErrorComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-context.ts\n            \n            \n                directive\n            \n            \n                ResourceContextDirective\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-data-of.ts\n            \n            \n                directive\n            \n            \n                ResourceDataOfDirective\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-data-of.ts\n            \n            \n                class\n            \n            \n                ResourceDataOfContext\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link-with-href.ts\n            \n            \n                directive\n            \n            \n                ResourceLinkWithHrefDirective\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                directive\n            \n            \n                ResourceLinkDirective\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                variable\n            \n            \n                TARGET_SELF\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-link.ts\n            \n            \n                variable\n            \n            \n                TARGET_TOP\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-outlet.ts\n            \n            \n                component\n            \n            \n                ResourceOutletComponent\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-view.ts\n            \n            \n                directive\n            \n            \n                ResourceViewDirective\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/directives/resource-view.ts\n            \n            \n                class\n            \n            \n                ResourceViewContext\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/hal-link.ts\n            \n            \n                interface\n            \n            \n                Link\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/lib/src/location-reference.ts\n            \n            \n                interface\n            \n            \n                LocationReference\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/src/location-reference.ts\n            \n            \n                function\n            \n            \n                bindUrl\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/location-reference.ts\n            \n            \n                function\n            \n            \n                isLocationReference\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                class\n            \n            \n                NavigableRef\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                class\n            \n            \n                NavigableRefImpl\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                interface\n            \n            \n                Navigable\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                function\n            \n            \n                isNavigable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                function\n            \n            \n                makeNavigableRef\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                function\n            \n            \n                topLevelNavigableRef\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/navigable.ts\n            \n            \n                variable\n            \n            \n                TOP_LEVEL_NAVIGABLE\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/quality-evaluator.ts\n            \n            \n                function\n            \n            \n                simpleTypeQualityEvaluator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/quality-evaluator.ts\n            \n            \n                function\n            \n            \n                statusQualityEvaluator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/read-only-headers.ts\n            \n            \n                interface\n            \n            \n                ReadOnlyHeaders\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/lib/src/read-only-headers.ts\n            \n            \n                variable\n            \n            \n                NO_HEADERS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-client.ts\n            \n            \n                class\n            \n            \n                ResourceClient\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-client.ts\n            \n            \n                injectable\n            \n            \n                HttpResourceClient\n            \n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-data.ts\n            \n            \n                injectable\n            \n            \n                ResourceData\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-data.ts\n            \n            \n                function\n            \n            \n                resourceDataNavigableRef\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                interface\n            \n            \n                ResourceRouterOptions\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                function\n            \n            \n                provideLocationStrategy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-router-module.ts\n            \n            \n                variable\n            \n            \n                RESOURCE_ROUTER_CONFIGURATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                injectable\n            \n            \n                ResourceViewRegistry\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                variable\n            \n            \n                RESOURCE_VIEWS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/resource-view-registry.ts\n            \n            \n                variable\n            \n            \n                TYPE_QUALITY_EVALUATOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/single-api-mapper.ts\n            \n            \n                injectable\n            \n            \n                SingleApiMapper\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    src/lib/src/single-api-mapper.ts\n            \n            \n                variable\n            \n            \n                APP_API_PREFIX\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_EMPTY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_ERROR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/system-media-types.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_ROUTER_LOADING\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/url-normalizer.ts\n            \n            \n                class\n            \n            \n                BaseUrlNormalizer\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/lib/src/url-normalizer.ts\n            \n            \n                class\n            \n            \n                UrlNormalizer\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/lib/src/url-normalizer.ts\n            \n            \n                injectable\n            \n            \n                BrowserUrlNormalizer\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/debug-log.ts\n            \n            \n                function\n            \n            \n                debugLog\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/http-utils.ts\n            \n            \n                variable\n            \n            \n                XSSI_PREFIX\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/normalize-media-type.ts\n            \n            \n                function\n            \n            \n                normalizeMediaType\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/normalize-media-type.ts\n            \n            \n                variable\n            \n            \n                MEDIA_TYPE_NORMALIZER\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                interface\n            \n            \n                LocationInfo\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                interface\n            \n            \n                UrlInfo\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                function\n            \n            \n                parseUrl\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/parse-url.ts\n            \n            \n                variable\n            \n            \n                URL_PATTERN\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                class\n            \n            \n                SortedArray\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/sorted-array.ts\n            \n            \n                function\n            \n            \n                defaultComparer\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/wildcard-to-regex.ts\n            \n            \n                function\n            \n            \n                escapeRegExpPattern\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/utils/wildcard-to-regex.ts\n            \n            \n                function\n            \n            \n                wildcardToRegex\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/lib/src/view-data.ts\n            \n            \n                interface\n            \n            \n                ViewData\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/src/view-definition.ts\n            \n            \n                interface\n            \n            \n                Data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/src/view-definition.ts\n            \n            \n                interface\n            \n            \n                ViewDef\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                class\n            \n            \n                ViewTypeStrategy\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                injectable\n            \n            \n                HeaderViewTypeStrategy\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/lib/src/view-type-strategy.ts\n            \n            \n                interface\n            \n            \n                ViewTypeResponse\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/lib/testing/src/mock-url-normalizer.ts\n            \n            \n                injectable\n            \n            \n                MockUrlNormalizer\n            \n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
